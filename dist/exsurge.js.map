{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d98ac12dd16212a73fb6","webpack:///./src/index.js","webpack:///./src/Exsurge.Core.js","webpack:///./src/Exsurge.Text.js","webpack:///./src/Exsurge.Glyphs.js","webpack:///./src/Exsurge.Drawing.js","webpack:///./src/addAccent.js","webpack:///./src/makeLigature.js","webpack:///./src/greextraGlyphs.js","webpack:///./src/Exsurge.Chant.js","webpack:///./src/Exsurge.Chant.ChantLine.js","webpack:///./src/Exsurge.Chant.Markings.js","webpack:///./src/Exsurge.Chant.Signs.js","webpack:///./src/Exsurge.Gabc.js","webpack:///./src/Exsurge.Chant.Neumes.js","webpack:///./src/Exsurge.Titles.js"],"names":["DeviceIndependent","Centimeters","Millimeters","Inches","ToCentimeters","ToMillimeters","ToInches","generateRandomGuid","getCssForProperties","Units","DeviceIndepenedent","DIU_PER_INCH","DIU_PER_CENTIMETER","ToDeviceIndependent","n","inputUnits","FromDeviceIndependent","outputUnits","StringToUnitsType","s","ToLower","UnitsTypeToString","units","Point","x","y","point","Rect","width","height","Infinity","rect","other","right","Math","max","bottom","min","Margins","left","top","margins","Size","size","Step","Do","Du","Re","Me","Mi","Fa","Fu","So","La","Te","Ti","__StepToStaffPosition","__StaffOffsetToStep","Pitch","step","octave","floor","toInt","pitch","offset","length","s4","random","toString","substring","properties","Object","entries","map","key","val","join","Language","name","centerNeume","text","parsedWords","words","split","i","end","push","syllabifyWord","English","regexLetter","startIndex","match","exec","slice","found","index","Latin","diphthongs","possibleDiphthongs","concat","regexVowel","wordExceptions","vowels","vowelsThatMightBeConsonants","muteConsonantsAndF","liquidConsonants","c","isVowelThatMightBeConsonant","isVowel","word","syllables","haveCompleteSyllable","previousWasVowel","workingString","toLowerCase","startSyllable","lookahead","haveLookahead","makeSyllable","substr","wordLength","cIsVowel","isDiphthong","isMuteConsonantOrF","isLiquidConsonant","Spanish","weakVowels","strongVowels","uDiphthongExceptions","previousIsVowel","previousIsStrongVowel","cIsStrongVowel","isStrongVowel","createSyllable","numberOfConsonants","consonant2","j","d","indexOf","tripthong","endj","findVowelSegment","language","english","latin","spanish","Glyphs","None","paths","type","data","bounds","origin","align","AcuteAccent","GraveAccent","Circle","Semicircle","ReversedSemicircle","Stropha","BeginningAscLiquescent","BeginningDesLiquescent","CustosDescLong","CustosDescShort","CustosLong","CustosShort","DoClef","FaClef","Flat","Mora","Natural","Sharp","OriscusAsc","OriscusDes","OriscusLiquescent","PodatusLower","PodatusUpper","Porrectus1","Porrectus2","Porrectus3","Porrectus4","PunctumCavum","PunctumQuadratum","PunctumQuadratumLiquescent","PunctumQuadratumAscLiquescent","PunctumQuadratumDesLiquescent","PunctumInclinatum","PunctumInclinatumLiquescent","Quilisma","TerminatingAscLiquescent","TerminatingDesLiquescent","VerticalEpisemaAbove","VerticalEpisemaBelow","VirgaLong","VirgaShort","Virgula","getFontFilenameForProperties","url","italic","bold","replace","canAccessDOM","document","__getNeumeFromSvgElem","score","elem","note","notes","parentElement","querySelector","getAttribute","neume","MarkingPositionHint","Default","Above","Below","TextTypes","supertitle","display","defaultSize","containedInScore","titles","hasSupertitle","getFromScore","title","hasTitle","subtitle","hasSubtitle","leftRight","cssClass","hasTextLeft","hasTextRight","extraClass","getFromSvgElem","classList","contains","annotation","elementIndex","annotations","dropCap","al","hasAboveLinesText","notations","notation","notationIndex","alText","alIndex","choralSign","ctxt","staffInterval","lyric","hasLyrics","lyrics","lyricIndex","translation","hasTranslations","translationText","translationIndex","TextTypesByClass","forEach","entry","DefaultTrailingSpace","intraNeumeSpacing","interSyllabicMultiplier","isDefault","GlyphCode","StrophaLiquescent","UpperBrace","QuickSvg","ns","xmlns","xlink","hasDOMAccess","svg","node","createElementNS","setAttribute","setAttributeNS","defs","appendChild","clearNotations","removeChild","hasChildNodes","lastChild","line","x1","y1","x2","y2","g","tspan","str","textContent","use","nodeRef","svgFragmentForGlyph","glyph","svgSrc","path","createFragment","undefined","fill","nodesForGlyph","functionName","nodes","props","createNode","attributes","children","source","attr","hasOwnProperty","constructor","createSvgTree","className","class","Array","convertKeysToCamelCase","obj","keys","test","camelCase","whole","letter","toUpperCase","style","sourceGabc","child","fragment","parseFragment","well","createElement","container","innerHTML","il","firstChild","childNodes","translate","scale","sx","sy","TextMeasuringStrategy","Svg","Canvas","OpenTypeJS","ChantContext","textMeasuringStrategy","makeDefs","defsNode","textStyles","textColor","setFont","rubricColor","specialCharProperties","textBeforeSpecialChar","textAfterSpecialChar","specialCharMap","plusProperties","asteriskProperties","specialCharText","char","fontStyleDictionary","b","u","ul","sc","v","markupSymbolDictionary","prefix","padding","minLedgerSeparation","minSpaceAboveStaff","minSpaceBelowStaff","spaceBetweenSystems","glyphPunctumWidth","glyphPunctumHeight","maxExtraSpaceInStaffIntervals","activeClef","neumeLineColor","staffLineColor","dividerLineColor","defaultLanguage","pixelRatio","window","devicePixelRatio","svgTextMeasurer","body","insertBefore","makeCanvasIfNeeded","syllableConnector","scaleDefs","setGlyphScaling","accidentalSpaceMultiplier","interVerbalMultiplier","drawGuides","drawDebuggingBounds","activeNotations","currNotationIndex","minSyllablesLastLine","minNotesLastLine","condensingTolerance","autoColor","useExtraTextOnly","noteIdPrefix","insertFontsInDoc","setMergeAnnotationWithTextLeft","fontFamily","keyWithFontFamily","fontDictionary","Regular","font","baseStyle","opentypeFontDictionary","textType","textStyle","color","baseTextStyle","merge","mergeAnnotationWithTextLeft","__mergeAnnotationWithTextLeft","glyphScaling","createStyleCss","hyphen","Lyric","LyricType","SingleSyllable","multiplier","minLyricWordSpacing","hyphenWidth","staffHeight","staffLineWeight","ceil","neumeLineWeight","dividerLineWeight","episemaLineWeight","updateHyphenWidth","staffPosition","styleElement","getElementById","id","head","isNeume","hasNoWidth","canvas","canvasCtxt","getContext","setTransform","ChantLayoutElement","selected","highlighted","DividerLineVisualizer","staffPosition0","staffPosition1","divider","y0","calculateHeightFromStaffPosition","temp","fillStyle","fillRect","sourceIndex","getSvgProps","NeumeLineVisualizer","note0","note1","hanging","abs","VirgaLineVisualizer","LineaVisualizer","GlyphVisualizer","glyphCode","setGlyph","getDefProps","options","transform","makeDef","makeSvgTree","Path2D","noteIndex","nextNote","isSelected","model","result","glyphVisualizer","getSvgAttributes","RoundBraceVisualizer","isAbove","braceHeight","generatePathString","stroke","getSvgPathProps","accent","createSvgNode","createSvgFragment","dx","dy","cx1","cy","cx2","dp","toFixed","CurlyBraceVisualizer","addAcuteAccent","union","q","h","qy1","qx2","qy2","tx1","ty1","qy3","qx4","qy4","TextSpan","propertyArray","activeTags","extraProps","xOffset","newLine","assign","apply","MarkupStackFrame","tagName","symbol","extraProperties","__subsForTspans","TextElement","fontSize","textAnchor","dominantBaseline","generateSpansFromText","recalculateMetrics","spans","markupStack","spanStartIndex","newLineInNextSpan","filterFrames","frame","Symbol","closeSpan","spanText","span","markupRegex","vTagRegex","openedAsterisk","closeCurrentSpan","vTag","asterisk","plus","tilde","vowelLigature","specialChar","specialChar2","specialChar3","markupSymbol","closingTag","family","enclosedText","vMatch","lastIndex","iOffset","grecross","greextra","greextraGlyphs","pop","vowel","filter","findIndex","splice","createStackFrame","parseFloat","resize","measureSubstring","returnBBox","lines","widths","newLineSpans","subStringLength","numLines","bbox","myText","parseInt","rightAligned","firstLineMaxWidth","getCanvasFontForProperties","metrics","measureText","actualBoundingBoxLeft","actualBoundingBoxAscent","actualBoundingBoxDescent","DropCap","getFontForProperties","features","liga","smcp","spanFontSize","subBbox","getPath","getBoundingBox","subWidth","getAdvanceWidth","resetNewLines","maxWidth","createStyleNode","getBBox","measureSubstringBBox","reduce","percentage","lastWidth","lastMatch","regex","spanIndex","splitSpan","textLeft","textRight","newSpans","needsLayout","textAlign","translateWidth","translateHeight","count","getExtraStyleProperties","fillText","textLength","getCssClasses","trim","useStyleObject","lengthAdjust","getSpanOptions","extraStyleProperties","svgNode","escapeForTspan","setFontFamilyAttributes","string","String","BeginningSyllable","MiddleSyllable","EndingSyllable","Directive","LyricArray","getLeft","lyricArray","NaN","Number","MAX_VALUE","getRight","presumeConnectorNeeded","MIN_VALUE","l","allowsConnector","needsConnector","getConnectorWidth","hasOnlyOneLyric","originalText","indexOfLyric","mergeIn","newLyrics","mergeInArray","setNotation","lyricType","centerStartIndex","centerLength","connectorSpan","force","forceConnector","needs","setConnectorWidth","widthWithoutConnector","connectorWidth","defaultConnectorWidth","setNeedsConnector","activeLanguage","vowelSegmentWidth","getSubStringLength","lastIndexOf","dropCapSpan","clone","dropCapLowerCase","dropCapSourceGabcLength","classes","ChoralSign","positionHint","AboveLinesText","TranslationText","gabcSource","anchor","TitleTextElement","Supertitle","Title","Subtitle","TextLeftRight","headerKey","Annotation","Annotations","lineHeight","texts","updateBounds","draw","ChantNotationElement","leadingSpace","trailingSpace","keepWithNext","visualizers","chantLayoutElement","ignoreBounds","isEmpty","unshift","calculatedTrailingSpace","calculateLyricX","inner","getInnerSvgNodes","svgProps","__connectorSpan","annotationSpans","addAccent","makeLigature","AE","Ae","ae","OE","Oe","oe","MedicaeaFlat","HufnagelCustosUpShort","HufnagelCustosUpLong","HufnagelCustosUpMedium","HufnagelCustosDownShort","HufnagelCustosDownLong","HufnagelCustosDownMedium","MedicaeaCustosUpShort","MedicaeaCustosUpLong","MedicaeaCustosUpMedium","MedicaeaCustosDownShort","MedicaeaCustosDownLong","MedicaeaCustosDownMedium","MensuralCustosUpShort","MensuralCustosUpLong","MensuralCustosUpMedium","MensuralCustosDownShort","MensuralCustosDownLong","MensuralCustosDownMedium","MensuralFlat","HufnagelFlat","MedicaeaCClef","MedicaeaCClefChange","MedicaeaFClef","MedicaeaFClefChange","HufnagelCClef","HufnagelCClefChange","HufnagelFClef","HufnagelFClefChange","HugnagelCFClef","HufnagelCFClefChange","MensuralFlatHole","HufnagelFlatHole","MedicaeaFlatHole","StarSix","Dagger","StarHeight","Cross","Drawing1","Drawing2","RWithBarGoth","VWithBarGoth","Line1","Line2","Line3","Line4","Line5","ABarCaption","RBarCaption","VBarCaption","ABarCaptionSC","RBarCaptionSC","VBarCaptionSC","ABar","RBar","VBar","ABarSC","RBarSC","VBarSC","ABarSmall","RBarSmall","VBarSmall","ABarSmallSC","RBarSmallSC","VBarSmallSC","ABarCaptionSlant","RBarCaptionSlant","VBarCaptionSlant","ABarSlant","RBarSlant","VBarSlant","ABarSmallSlant","RBarSmallSlant","VBarSmallSlant","LiquescentType","Large","Small","Ascending","Descending","InitioDebilis","LargeAscending","LargeDescending","SmallAscending","SmallDescending","NoteShape","Virga","Inclinatum","Oriscus","NoteShapeModifiers","Cavum","Stemmed","Linea","Reverse","Note","liquescent","shape","shapeModifiers","episemata","morae","setStaffPosition","shapeModifier","Clef","defaultAccidental","isClef","activeAccidental","performLayout","accidentalGlyph","createGlyphVisualizer","addVisualizer","__defaultDoClef","stepToStaffOffset","octaveOffset","staffOffsetToStep","accidentalType","finishLayout","TextOnly","sourceLength","ChantLineBreak","justify","lb","ChantMapping","ChantScore","mappings","useDropCap","Titles","startingClef","compiled","autoColoring","updateNotations","startLine","endLine","lastLine","selection","elementSelection","element","indices","selectedIndices","insertion","afterElementIndex","includes","insertionCursor","insertionElement","insertionLine","chantLine","InsertionCursor","mapping","nonNoteElementCount","default","elements","recreateDropCap","generateDropCap","initializeLayout","finishedCallback","setTimeout","onFontLoaded","performLayoutAsync","layoutElementsAsync","timeout","Date","getTime","overrideTextLeft","mapAnnotationSpansToTextLeft","layoutTitles","currIndex","ChantLine","buildFromChantNotationIndex","notationsStartIndex","numNotationsOnLine","pages","updateSelection","pageHeightOffset","startLineIndex","pageHeight","copyLines","setCanvasSize","clearRect","zoom","version","editable","viewBox","cloneNode","createStyleTree","def","createStyle","lineFragment","fragmentDefs","createDropCap","Gabc","parseChantNotations","unsanitizedText","ChantDocument","defaults","layout","page","scores","copyLayout","to","from","unserializeFromJson","serializeToJson","notationBounds","staffLeft","staffRight","custos","ledgerLines","braces","nextLine","previousLine","lyricLineHeight","lyricLineBaseline","numLyricLines","spaceAfterNotations","spaceBetweenTextTracks","lastLyrics","lastNeumeIndex","extraTextOnlyIndex","altLineHeight","altLineBaseline","numAltLines","translationLineHeight","translationLineBaseline","numTranslationLines","notationBoundsOffset","extraTextOnlyHeight","extraTextOnlyLyricIndex","lastNotation","extraLines","lineWidth","lowestPossibleAnnotationY","lyricAndTextRect","altLineTextRect","totalHeight","strokeStyle","beginPath","moveTo","lineTo","layoutInsertionCursor","ledgerLine","functionNames","quickSvg","getInnerNodes","len","qx1","qx3","newElementStart","beginningLyrics","prev","prevNeume","prevLyrics","condensableSpaces","paddingLeft","DoubleBar","newLyric","elidesToNext","MAX_SAFE_INTEGER","minX","a","curr","rightNotationBoundary","lastTranslationTextWithEndNeume","lastNotationIndex","lastStartBrace","lastLyricsBeforeTextOnly","textOnlyStartIndex","actualRightBoundary","Custos","isDivider","forceBreak","fitsOnLine","positionNotationElement","candidateForExtraTextOnlyLine","currentLyric","nextNotation","firstOnLine","startExtraTextOnlyFromFirst","lastNotationWithLyrics","reverse","find","lastLyricRight","setMaxWidth","isTextOnlyBeforeDivider","firstDivider","every","notationsAfterBreak","countSyllables","countNotes","flatMap","cne","firstWithNoWidth","allowLineBreakBeforeNext","maxNumNotationsOnLine","findNeumesToJustify","extraSpace","getWhitespaceOnRight","toJustify","next","sum","condensable","endNeume","last","isLastLine","whitespace","rightEdge","minHyphenWidth","justifyElements","centerDividers","oldBoundsX","barWidth","leftPoint","rightPoint","FullBar","nextOrCurr","isAccidental","lastRightNeume","lastRightLyric","doJustify","extraSpaceBeforeCustos","increment","toJustifyIndex","nextToJustify","incrementOffsetAtNextChance","startBrace","k","startNote","BraceShape","RoundBrace","getAttachmentX","braceEnd","AccentedCurlyBrace","processElementForLedgerLine","endElem","offsetX","half","minY","maxY","positionNonLyricText","rightX","beyondStaffRight","ll","episema","spaceBetweenEpisemata","terminating","alignment","HorizontalEpisemaAlignment","Left","Center","Right","newY","newWidth","handleEndBrace","braceStart","nextNotationButOne","nextNoteButOne","BracePoint","BraceAttachment","space","fixedX","total","maxRight","currLyric","minLeft","firstOfSyllable","hasShifted","atLeastOneWithoutConnector","prevLyricRight","condensableSpacesSincePrevLyric","condensableSpaceSincePrevLyric","notationI","currLyricLeft","shift","spaceBetweenSyls","pLyrics","lastCondensable","useMidpoint","minIndex","maxIndex","curIndex","notationX","closenessToLeft","closenessToRight","Accent","HorizontalEpisema","minDistanceAway","punctumInclinatumShorten","prevNote","Ictus","collisionWithEpisema","horizontalOffset","verticalOffset","shortOffset","extraOffset","collisionWithStaffLine","CurlyBrace","attachment","auto","findNextNeume","pitchToStaffPosition","getGlyphCode","Divider","resetsAccidentals","QuarterBar","HalfBar","DominicanBar","parity","line0","line1","AccidentalType","Accidental","adjustStep","Markings","Signs","Neumes","__syllablesRegex","__altTranslationRegex","__notationsRegex","__notationsRegex_group_insideBraces","__bracketedCommandRegex","__braceSpecRegex","TrailingSpaceForAccidental","TrailingSpaceMultiple","regexHeaderEnd","regexHeaderLine","regexHeaderComment","GabcHeader","gabc","comments","cValues","original","txtHeader","arrayName","alternateKey","array","e","console","warn","elementCountForNotations","items","item","headerLength","getLength","splitWords","createMappingsFromWords","clef","before","after","oldIndexMap","overlap","startOld","startNew","subLength","inew","_overlap","iold","diffDescriptorsAndNewWords","newGabcSource","insertionIndex","oldInsertionIndex","newWords","results","lastTranslationNeumes","resultCode","resultValues","sourceIndexDiff","elementCount","createMappingFromWord","curNotation","prevIsAccidental","resetDependencies","resetAccidentals","staffPositionToPitch","automatic","needToEndBrace","transText","lastTranslationText","matches","currSyllable","lyricText","_","pre","main","post","notationData","parseNotations","firstOfParentheses","notationWithLyrics","m","indexOffset","proposedLyricType","createSyllableLyrics","lyricTexts","lyricTextWithoutVTags","vtagRegex","vtags","indexClosingBracket","getTrueIndex","indexWithoutVTags","accum","makeLyric","textIndex","centerEndIndex","elides","setForceConnector","baseSourceIndex","addToLastSourceGabc","addNotation","neumes","createNeumesFromNotes","prevNotation","RegExp","atom","gabcHeightToExsurgeHeight","noteArray","createNoteFromData","accidental","gabcHeightToExsurgePitch","bracketedNotations","finalTrailingSpace","firstNoteIndex","currNoteIndex","createNeume","includeCurrNote","includePrevNote","lastNoteIndex","addNote","unknownState","Punctum","handle","currNote","virgaState","apostrophaState","oriscusState","punctaInclinataState","punctumState","notesRemaining","state","ictus","podatusState","climacusState","clivisState","distrophaState","PunctaInclinata","PesQuassus","Clivis","Podatus","salicusState","scandicusState","pesSubpunctisState","torculusState","porrectusState","Climacus","Porrectus","PorrectusFlexus","PesSubpunctis","Salicus","salicusFlexusState","SalicusFlexus","Scandicus","scandicusFlexusState","ScandicusFlexus","bivirgaState","Bivirga","Trivirga","Apostropha","Distropha","tristrophaState","Tristropha","Torculus","prevNoteButOne","torculusResupinusState","TorculusResupinus","TorculusResupinusFlexus","mark","episemaNoteIndex","episemaNote","previousNote","previousMora","episemaHadModifier","newNote","shapeModifers","processInstructionForNote","instruction","sourceIndexOffset","cmd","above","attachmentPoint","gabcNotations","parseWords","gabcWords","parseWord","gabcWord","gabcHeight","charCodeAt","exsurgeHeight","NeumeBuilder","startingX","lastNote","lineIsHanging","previousNotation","withLineTo","noteAlignsRight","needsLine","linea","noteAt","lowerNote","upperNote","upperGlyph","lowerGlyph","upper","lower","lineFrom","prevStaffPosition","advanceWidth","multiple","start","Neume","requiresLedgerLine","positionMarkings","firstAbove","needsAbove","firstBelow","needsBelow","endI","position","positionEpisemata","bottomNote","topNote","positionEpisemataBelow","positionEpisemataAbove","positionPodatusEpisemata","positionPodatusMorae","firstNote","secondNote","thirdNote","hasTopEpisema","positionClivisMarkings","positionClivisMorae","positionClivisEpisemata","positionPodatusMarkings","first","second","third","fourth","build","getNoteGlyphCode","virgaAt","advanceBy","positionInclinataMorae","withInclinata","withClivis","glyphCodes","glyphAdvance","nextNoteStaffPosition","lowerStaffPos","upperStaffPos","builder","withLineEndingAt","withPodatus","positionPorrectusMarkings","thirdGlyph","withPorrectusSwash","positionPorrectusFlexusMarkings","fourthGlyph","positionTorculusMarkings","note2","note3","glyph1","glyph3","firstGlyph","fifth","fifthGlyph","setSupertitle","setTitle","setSubtitle","setTextLeft","setTextRight","elementName","setBoundsX","finalY","el"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AA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","file":"exsurge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"exsurge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"exsurge\"] = factory();\n\telse\n\t\troot[\"exsurge\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d98ac12dd16212a73fb6","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n'use strict';\n\n// import { Annotation, ChantContext } from './Exsurge.Drawing.js'\n// import { Gabc } from './Exsurge.Gabc.js'\n//\n// // client side support\n//\n// if (typeof document !== 'undefined' && document.registerElement) {\n//   var ChantVisualElementPrototype = Object.create(HTMLElement.prototype);\n//\n//   ChantVisualElementPrototype.createdCallback = function() {\n//     var ctxt = new ChantContext();\n//\n//     ctxt.setFont(\"'Crimson Text', serif\", 19.2);\n//\n//     var useDropCap = true;\n//     var useDropCapAttr = this.getAttribute(\"use-drop-cap\");\n//     if (useDropCapAttr === 'false')\n//       useDropCap = false;\n//\n//     var score = Gabc.loadChantScore(ctxt, this.innerText, useDropCap);\n//\n//     var annotationAttr = this.getAttribute(\"annotation\");\n//     if (annotationAttr) {\n//       // add an annotation\n//       score.annotation = new Annotation(ctxt, annotationAttr);\n//     }\n//\n//     var _element = this;\n//\n//     var width = 0;\n//     var doLayout = function() {\n//       var newWidth = _element.parentElement.clientWidth;\n//       if(width === newWidth) return;\n//       width = newWidth;\n//       // perform layout on the chant\n//       score.performLayout(ctxt, function() {\n//         score.layoutChantLines(ctxt, width, function() {\n//           // render the score to svg code\n//           _element.appendElement(score.createSvgNode(ctxt));\n//         });\n//       });\n//     }\n//     doLayout();\n//     if (window.addEventListener)\n//       window.addEventListener('resize',doLayout,false);\n//     else if (window.attachEvent)\n//       window.attachEvent('onresize',doLayout);\n//   }\n//\n//   ChantVisualElementPrototype.attachedCallback = function() {\n//\n//   }\n//\n//   // register the custom element\n//   // if(window.customElements && window.customElements.define) {\n//   //   window.customElements.define('chant-visual', ChantVisualElementPrototype);\n//   // } else {\n//     document.registerElement('chant-visual', {\n//       prototype: ChantVisualElementPrototype\n//     });\n//   // }\n// }\n\nexport * from './Exsurge.Core.js'\nexport * from './Exsurge.Text.js'\nexport * from './Exsurge.Glyphs.js'\nexport * from './Exsurge.Drawing.js'\nexport * from './Exsurge.Chant.js'\nexport * from './Exsurge.Chant.ChantLine.js'\nexport * from './Exsurge.Chant.Markings.js'\nexport * from './Exsurge.Chant.Signs.js'\nexport * from './Exsurge.Chant.Neumes.js'\nexport * from './Exsurge.Gabc.js'\nexport * from './Exsurge.Titles.js'\nexport * from './greextraGlyphs.js'\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nexport var Units = {\n  // enums\n  DeviceIndepenedent: 0, // device independent units: 96/inch\n  Centimeters: 1,\n  Millimeters: 2,\n  Inches: 3,\n\n  // constants for device independent units (diu)\n  DIU_PER_INCH: 96,\n  DIU_PER_CENTIMETER: 96 / 2.54,\n\n  ToDeviceIndependent: function (n, inputUnits) {\n    switch (inputUnits) {\n      case Centimeters:\n        return n * Units.DIU_PER_CENTIMETER;\n      case Millimeters:\n        return n * Units.DIU_PER_CENTIMETER / 10;\n      case Inches:\n        return n * Units.DIU_PER_INCH;\n      default:\n        return n;\n    }\n  },\n\n  FromDeviceIndependent: function (n, outputUnits) {\n    switch (outputUnits) {\n      case Centimeters:\n        return n / Units.DIU_PER_CENTIMETER;\n      case Millimeters:\n        return n / Units.DIU_PER_CENTIMETER * 10;\n      case Inches:\n        return n / Units.DIU_PER_INCH;\n      default:\n        return n;\n    }\n  },\n\n\n  StringToUnitsType: function(s) {\n    switch (s.ToLower()) {\n      case \"in\":\n      case \"inches\":\n        return Units.Inches;\n\n      case \"cm\":\n      case \"centimeters\":\n        return Units.Centimeters;\n\n      case \"mm\":\n      case \"millimeters\":\n        return Units.Millimeters;\n\n      case \"di\":\n      case \"device-independent\":\n        return Units.DeviceIndepenedent;\n\n      default:\n        return Units.DeviceIndepenedent;\n    }\n  },\n\n  UnitsTypeToString: function(units) {\n    switch (units) {\n      case Units.Inches: return \"in\";\n      case Units.Centimeters: return \"cm\";\n      case Units.Millimeters: return \"mm\";\n      case Units.DeviceIndepenedent: return \"device-independent\";\n      default: return \"device-independent\";\n    }\n  }\n}\n\nexport function DeviceIndependent(n) {\n  return n;\n}\n\nexport function Centimeters(n) {\n  return Units.ToDeviceIndependent(n, Units.Centimeters);\n}\n\nexport function Millimeters(n) {\n  return Units.ToDeviceIndependent(n, Units.Millimeters);\n}\n\nexport function Inches(n) {\n  return Units.ToDeviceIndependent(n, Units.Inches);\n}\n\nexport function ToCentimeters(n) {\n  return Units.FromDeviceIndependent(n, Units.Centimeters);\n}\n\nexport function ToMillimeters(n) {\n  return Units.FromDeviceIndependent(n, Units.Millimeters);\n}\n\nexport function ToInches(n) {\n  return Units.FromDeviceIndependent(n, Units.Inches);\n}\n\n\n/*\n * Point\n */\nexport class Point {\n  constructor(x, y) {\n    this.x = (typeof x !== 'undefined') ? x : 0;\n    this.y = (typeof y !== 'undefined') ? y : 0;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  equals(point) {\n    return this.x === point.x && this.y === point.y;\n  }\n}\n\n/*\n * Rect\n */\nexport class Rect {\n  constructor(x, y, width, height) {\n    this.x = (typeof x !== 'undefined') ? x : Infinity;\n    this.y = (typeof y !== 'undefined') ? y : Infinity;\n    this.width = (typeof width !== 'undefined') ? width : -Infinity;\n    this.height = (typeof height !== 'undefined') ? height : -Infinity;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  isEmpty() {\n    return (this.x === Infinity &&\n            this.y === Infinity &&\n            this.width === -Infinity &&\n            this.height === -Infinity);\n  }\n\n  // convenience method\n  right() {\n    return this.x + this.width;\n  }\n\n  bottom() {\n    return this.y + this.height;\n  }\n\n  equals(rect) {\n    return this.x === rect.x && this.y === rect.y &&\n           this.width === rect.width && this.height === rect.height;\n  }\n\n  // other can be a Point or a Rect\n  contains(other) {\n    if (other instanceof Point) {\n      return other.x >= this.x &&\n              other.x <= this.x + this.width &&\n              other.y >= this.y &&\n              other.y <= this.y + this.height;\n    } else { // better be instance of Rect\n      return this.x <= other.x &&\n              this.x + this.width >= other.x + other.width &&\n              this.y <= other.y &&\n              this.y + this.height >= other.y + other.height;\n    }\n  }\n\n  union(rect) {\n\n    var right = Math.max(this.x + this.width, rect.x + rect.width);\n    var bottom = Math.max(this.y + this.height, rect.y + rect.height);\n\n    this.x = Math.min(this.x, rect.x);\n    this.y = Math.min(this.y, rect.y);\n\n    this.width = right - this.x;\n    this.height = bottom - this.y;\n  }\n}\n\n/**\n * Margins\n *\n * @class\n */\nexport class Margins {\n  constructor(left, top, right, bottom) {\n    this.left = (typeof left !== 'undefined') ? left : 0;\n    this.top = (typeof top !== 'undefined') ? top : 0;\n    this.right = (typeof right !== 'undefined') ? right : 0;\n    this.bottom = (typeof bottom !== 'undefined') ? bottom : 0;\n  }\n\n  clone() {\n    return new Margins(this.left, this.top, this.right, this.bottom);\n  }\n\n  equals(margins) {\n    return this.left === margins.left &&\n        this.top === margins.top &&\n        this.right === margins.right &&\n        this.bottom === margins.bottom;\n  }\n}\n\n/**\n * Size\n *\n * @class\n */\nexport class Size {\n  constructor(width, height) {\n    this.width = (typeof width !== 'undefined') ? width : 0;\n    this.height = (typeof height !== 'undefined') ? height : 0;\n  }\n\n  clone() {\n    return new Size(this.width, this.height);\n  }\n\n  equals(size) {\n    return this.width === size.width && this.height === size.height;\n  }\n}\n\n\n/*\n * Pitches, notes\n */\nexport var Step = {\n  Do: 0,\n  Du: 1,\n  Re: 2,\n  Me: 3,\n  Mi: 4,\n  Fa: 5,\n  Fu: 6,\n  So: 7,\n  La: 9,\n  Te: 10,\n  Ti: 11\n};\n\n  // this little array helps map step values to staff positions. The numeric values of steps\n  // correspond to whole step increments (2) or half step increments (1). This gives us the ability\n  // to compare pitches precisely, but makes it challenging to place steps on the staff. this little\n  // array maps the steps to an incremental position the steps take on the staff line. This works\n  // so simply because chant only uses do and fa clefs, and only has a flatted ti (te), making\n  // for relatively easy mapping to staff line locations.\n  //                         Do Du Re Me Mi Fa Fu So    La Te Ti\nvar __StepToStaffPosition = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6];\nvar __StaffOffsetToStep = [Step.Do, Step.Re, Step.Mi, Step.Fa, Step.So, Step.La, Step.Ti]; // no accidentals in this one\n\n\nexport class Pitch {\n  constructor(step, octave) {\n    if(typeof octave === 'undefined') {\n      octave = Math.floor(step / 12)\n      step = step % 12;\n    }\n    this.step = step;\n    this.octave = octave;\n  }\n\n  toInt() {\n    return this.octave * 12 + this.step;\n  }\n\n  transpose(step) {\n    return new Pitch(this.toInt() + step);\n  }\n\n  isHigherThan(pitch) {\n    return this.toInt() > pitch.toInt();\n  }\n\n  isLowerThan(pitch) {\n    return this.toInt() < pitch.toInt();\n  }\n\n  equals(pitch) {\n    return this.toInt() === pitch.toInt();\n  }\n\n  static stepToStaffOffset(step) {\n    return __StepToStaffPosition[step];\n  }\n\n  static staffOffsetToStep(offset) {\n    while (offset < 0)\n      offset = __StaffOffsetToStep.length + offset;\n\n    return __StaffOffsetToStep[offset % __StaffOffsetToStep.length];\n  }\n}\n\nexport function generateRandomGuid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4();\n}\n\nexport function getCssForProperties(properties) {\n  return Object.entries(properties)\n    .map(([key, val]) =>\n      key && val && key !== \"class\" ? `${key}: ${val};` : \"\"\n    )\n    .join(\"\");\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Core.js","//\n\n/**\n * @class\n */\nexport class Language {\n  constructor(name) {\n    this.name = typeof name !== \"undefined\" ? name : \"<unknown>\";\n    this.centerNeume = false;\n  }\n\n  /**\n   * @param {String} text The string to parsed into words.\n   * @return {Word[]} the resulting parsed words from syllabification\n   */\n  syllabify(text) {\n    var parsedWords = [];\n\n    if (typeof text === \"undefined\" || text === \"\") return parsedWords;\n\n    // Divide the text into words separated by whitespace\n    var words = text.split(/[\\s]+/);\n\n    for (var i = 0, end = words.length; i < end; i++)\n      parsedWords.push(this.syllabifyWord(words[i]));\n\n    return parsedWords;\n  }\n}\n\nexport class English extends Language {\n  constructor() {\n    super(\"English\");\n    this.centerNeume = true;\n    this.regexLetter = /[a-z\\u00c0-\\u02af\\u0300-\\u036f\\u1e00-\\u1eff‿]+/i;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n    var match = this.regexLetter.exec(s.slice(startIndex));\n    if (match)\n      return {\n        found: true,\n        startIndex: startIndex + match.index,\n        length: match[0].length\n      };\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\n/**\n * @class\n */\nexport class Latin extends Language {\n  /**\n   * @constructs\n   */\n  constructor() {\n    super(\"Latin\");\n\n    // fixme: ui is only diphthong in the exceptional cases below (according to Wheelock's Latin)\n    this.diphthongs = [\"ae\", \"au\", \"oe\", \"aé\", \"áu\", \"oé\"];\n    // for centering over the vowel, we will need to know any combinations that might be diphthongs:\n    this.possibleDiphthongs = this.diphthongs.concat([\n      \"ei\",\n      \"eu\",\n      \"ui\",\n      \"éi\",\n      \"éu\",\n      \"úi\"\n    ]);\n    this.regexVowel = /(i|(?:[qg]|^)u)?([eé][iu]|[uú]i|[ao][eé]|[aá]u|[aeiouáéíóúäëïöüāēīōūăĕĭŏŭåe̊o̊ůæœǽyýÿ])/i;\n\n    // some words that are simply exceptions to standard syllabification rules!\n    var wordExceptions = new Object();\n\n    // ui combos pronounced as diphthongs\n    wordExceptions[\"huius\"] = [\"hui\", \"us\"];\n    wordExceptions[\"cuius\"] = [\"cui\", \"us\"];\n    wordExceptions[\"huic\"] = [\"huic\"];\n    wordExceptions[\"cui\"] = [\"cui\"];\n    wordExceptions[\"hui\"] = [\"hui\"];\n\n    // eu combos pronounced as diphthongs\n    wordExceptions[\"euge\"] = [\"eu\", \"ge\"];\n    wordExceptions[\"seu\"] = [\"seu\"];\n\n    this.vowels = [\n      \"a\",\n      \"e\",\n      \"i\",\n      \"o\",\n      \"u\",\n      \"á\",\n      \"é\",\n      \"í\",\n      \"ó\",\n      \"ú\",\n      \"ä\",\n      \"ë\",\n      \"ï\",\n      \"ö\",\n      \"ü\",\n      \"ā\",\n      \"ē\",\n      \"ī\",\n      \"ō\",\n      \"ū\",\n      \"ă\",\n      \"ĕ\",\n      \"ĭ\",\n      \"ŏ\",\n      \"ŭ\",\n      \"å\",\n      \"e̊\",\n      \"o̊\",\n      \"ů\",\n      \"æ\",\n      \"œ\",\n      \"ǽ\", // no accented œ in unicode?\n      \"y\",\n      \"ý\",\n      \"ÿ\"\n    ]; // y is treated as a vowel; not native to Latin but useful for words borrowed from Greek\n\n    this.vowelsThatMightBeConsonants = [\"i\", \"u\"];\n\n    this.muteConsonantsAndF = [\"b\", \"c\", \"d\", \"g\", \"p\", \"t\", \"f\"];\n\n    this.liquidConsonants = [\"l\", \"r\"];\n  }\n\n  // c must be lowercase!\n  isVowel(c) {\n    for (var i = 0, end = this.vowels.length; i < end; i++)\n      if (this.vowels[i] === c) return true;\n\n    return false;\n  }\n\n  isVowelThatMightBeConsonant(c) {\n    for (var i = 0, end = this.vowelsThatMightBeConsonants.length; i < end; i++)\n      if (this.vowelsThatMightBeConsonants[i] === c) return true;\n\n    return false;\n  }\n\n  // substring should be a vowel and the character following\n  isVowelActingAsConsonant(substring) {\n    return (\n      this.isVowelThatMightBeConsonant(substring[0]) &&\n      this.isVowel(substring[1])\n    );\n  }\n\n  /**\n   * f is not a mute consonant, but we lump it together for syllabification\n   * since it is syntactically treated the same way\n   *\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isMuteConsonantOrF(c) {\n    for (var i = 0, end = this.muteConsonantsAndF.length; i < end; i++)\n      if (this.muteConsonantsAndF[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is a liquid consonant\n   */\n  isLiquidConsonant(c) {\n    for (var i = 0, end = this.liquidConsonants.length; i < end; i++)\n      if (this.liquidConsonants[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isDiphthong(s) {\n    for (var i = 0, end = this.diphthongs.length; i < end; i++)\n      if (this.diphthongs[i] === s) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isPossibleDiphthong(s) {\n    for (var i = 0, end = this.possibleDiphthongs.length; i < end; i++)\n      if (this.possibleDiphthongs[i] === s) return true;\n\n    return false;\n  }\n\n  /**\n   * Rules for Latin syllabification (from Collins, \"A Primer on Ecclesiastical Latin\")\n   *\n   * Divisions occur when:\n   *   1. After open vowels (those not followed by a consonant) (e.g., \"pi-us\" and \"De-us\")\n   *   2. After vowels followed by a single consonant (e.g., \"vi-ta\" and \"ho-ra\")\n   *   3. After the first consonant when two or more consonants follow a vowel\n   *      (e.g., \"mis-sa\", \"minis-ter\", and \"san-ctus\").\n   *\n   * Exceptions:\n   *   1. In compound words the consonants stay together (e.g., \"de-scribo\").\n   *   2. A mute consonant (b, c, d, g, p, t) or f followed by a liquid consonant (l, r)\n   *      go with the succeeding vowel: \"la-crima\", \"pa-tris\"\n   *\n   * In addition to these rules, Wheelock's Latin provides this sound exception:\n   *   -  Also counted as single consonants are qu and the aspirates ch, ph,\n   *      th, which should never be separated in syllabification:\n   *      architectus, ar-chi-tec-tus; loquacem, lo-qua-cem.\n   *\n   */\n  syllabifyWord(word) {\n    var syllables = [];\n    var haveCompleteSyllable = false;\n    var previousWasVowel = false;\n    var workingString = word.toLowerCase();\n    var startSyllable = 0;\n\n    var c, lookahead, haveLookahead;\n\n    // a helper function to create syllables\n    var makeSyllable = function(length) {\n      if (haveCompleteSyllable) {\n        syllables.push(word.substr(startSyllable, length));\n        startSyllable += length;\n      }\n\n      haveCompleteSyllable = false;\n    };\n\n    for (var i = 0, wordLength = workingString.length; i < wordLength; i++) {\n      c = workingString[i];\n\n      // get our lookahead in case we need them...\n      lookahead = \"*\";\n      haveLookahead = i + 1 < wordLength;\n\n      if (haveLookahead) lookahead = workingString[i + 1];\n\n      var cIsVowel = this.isVowel(c);\n\n      // i is a special case for a vowel. when i is at the beginning\n      // of the word (Iesu) or i is between vowels (alleluia),\n      // then the i is treated as a consonant (y)\n      if (c === \"i\") {\n        if (i === 0 && haveLookahead && this.isVowel(lookahead))\n          cIsVowel = false;\n        else if (previousWasVowel && haveLookahead && this.isVowel(lookahead)) {\n          cIsVowel = false;\n        }\n      }\n\n      if (c === \"-\") {\n        // a hyphen forces a syllable break, which effectively resets\n        // the logic...\n\n        haveCompleteSyllable = true;\n        previousWasVowel = false;\n        makeSyllable(i - startSyllable);\n        startSyllable++;\n      } else if (cIsVowel) {\n        // once we get a vowel, we have a complete syllable\n        haveCompleteSyllable = true;\n\n        if (\n          previousWasVowel &&\n          !this.isDiphthong(workingString[i - 1] + \"\" + c)\n        ) {\n          makeSyllable(i - startSyllable);\n          haveCompleteSyllable = true;\n        }\n\n        previousWasVowel = true;\n      } else if (haveLookahead) {\n        if (\n          (c === \"q\" && lookahead === \"u\") ||\n          (lookahead === \"h\" && (c === \"c\" || c === \"p\" || c === \"t\"))\n        ) {\n          // handle wheelock's exceptions for qu, ch, ph and th\n          makeSyllable(i - startSyllable);\n          i++; // skip over the 'h' or 'u'\n        } else if (previousWasVowel && this.isVowel(lookahead)) {\n          // handle division rule 2\n          makeSyllable(i - startSyllable);\n        } else if (\n          this.isMuteConsonantOrF(c) &&\n          this.isLiquidConsonant(lookahead)\n        ) {\n          // handle exception 2\n          makeSyllable(i - startSyllable);\n        } else if (haveCompleteSyllable) {\n          // handle division rule 3\n          makeSyllable(i + 1 - startSyllable);\n        }\n\n        previousWasVowel = false;\n      }\n    }\n\n    // if we have a complete syllable, we can add it as a new one. Otherwise\n    // we tack the remaining characters onto the last syllable.\n    if (haveCompleteSyllable) syllables.push(word.substr(startSyllable));\n    else if (startSyllable > 0)\n      syllables[syllables.length - 1] += word.substr(startSyllable);\n\n    return syllables;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n    var match = this.regexVowel.exec(s.slice(startIndex));\n    if (match) {\n      if (match[1]) {\n        // the first group should be ignored, as it is to separate an i or u that is used as a consonant.\n        match.index += match[1].length;\n      }\n      return {\n        found: true,\n        startIndex: startIndex + match.index,\n        length: match[2].length\n      };\n    }\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\n/**\n * @class\n */\nexport class Spanish extends Language {\n  constructor() {\n    super(\"Spanish\");\n\n    this.vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"á\", \"é\", \"í\", \"ó\", \"ú\", \"ü\"];\n\n    this.weakVowels = [\"i\", \"u\", \"ü\", \"y\"];\n\n    this.strongVowels = [\"a\", \"e\", \"o\", \"á\", \"é\", \"í\", \"ó\", \"ú\"];\n\n    this.diphthongs = [\n      \"ai\",\n      \"ei\",\n      \"oi\",\n      \"ui\",\n      \"ia\",\n      \"ie\",\n      \"io\",\n      \"iu\",\n      \"au\",\n      \"eu\",\n      \"ou\",\n      \"ua\",\n      \"ue\",\n      \"uo\",\n      \"ái\",\n      \"éi\",\n      \"ói\",\n      \"úi\",\n      \"iá\",\n      \"ié\",\n      \"ió\",\n      \"iú\",\n      \"áu\",\n      \"éu\",\n      \"óu\",\n      \"uá\",\n      \"ué\",\n      \"uó\",\n      \"üe\",\n      \"üi\"\n    ];\n\n    this.uDiphthongExceptions = [\"gue\", \"gui\", \"qua\", \"que\", \"qui\", \"quo\"];\n  }\n\n  // c must be lowercase!\n  isVowel(c) {\n    for (var i = 0, end = this.vowels.length; i < end; i++)\n      if (this.vowels[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isWeakVowel(c) {\n    for (var i = 0, end = this.weakVowels.length; i < end; i++)\n      if (this.weakVowels[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isStrongVowel(c) {\n    for (var i = 0, end = this.strongVowels.length; i < end; i++)\n      if (this.strongVowels[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isDiphthong(s) {\n    for (var i = 0, end = this.diphthongs.length; i < end; i++)\n      if (this.diphthongs[i] === s) return true;\n\n    return false;\n  }\n\n  createSyllable(text) {\n    /*\n    var accented = false;\n    var ellidesToNext = false;\n\n    if (text.length > 0) {\n\n        if (text[0] == '`') {\n            accented = true;\n            text = text.substr(1);\n        }\n\n        if (text[text.length - 1] == '_') {\n            ellidesToNext = true;\n            text = text.substr(0, text.length - 1);\n        }\n    }\n\n    var s = new Syllable(text);\n\n    s.isMusicalAccent = accented;\n    s.elidesToNext = ellidesToNext;*/\n\n    return text;\n  }\n\n  /**\n   */\n  syllabifyWord(word) {\n    var syllables = [];\n\n    var haveCompleteSyllable = false;\n    var previousIsVowel = false;\n    var previousIsStrongVowel = false; // only valid if previousIsVowel == true\n    var startSyllable = 0;\n\n    // fixme: first check for prefixes\n\n    for (var i = 0; i < word.length; i++) {\n      var c = word[i].toLowerCase();\n\n      if (this.isVowel(c)) {\n        // we have a complete syllable as soon as we have a vowel\n        haveCompleteSyllable = true;\n\n        var cIsStrongVowel = this.isStrongVowel(c);\n\n        if (previousIsVowel) {\n          // if we're at a strong vowel, then we finish out the last syllable\n          if (cIsStrongVowel) {\n            if (previousIsStrongVowel) {\n              syllables.push(\n                this.createSyllable(\n                  word.substr(startSyllable, i - startSyllable)\n                )\n              );\n              startSyllable = i;\n            }\n          }\n        }\n\n        previousIsVowel = true;\n        previousIsStrongVowel = cIsStrongVowel;\n      } else {\n        if (!haveCompleteSyllable) {\n          // do nothing since we don't have a complete syllable yet...\n        } else {\n          // handle explicit syllable breaks\n          if (word[i] === \"-\") {\n            // start new syllable\n            syllables.push(\n              this.createSyllable(word.substr(startSyllable, i - startSyllable))\n            );\n            startSyllable = ++i;\n          } else {\n            var numberOfConsonants = 1,\n              consonant2;\n\n            // count how many more consonants there are\n            for (var j = i + 1; j < word.length; j++) {\n              if (this.isVowel(word[j])) break;\n              numberOfConsonants++;\n            }\n\n            if (numberOfConsonants === 1) {\n              // start new syllable\n              syllables.push(\n                this.createSyllable(\n                  word.substr(startSyllable, i - startSyllable)\n                )\n              );\n              startSyllable = i;\n            } else if (numberOfConsonants === 2) {\n              consonant2 = word[i + 1].toLowerCase();\n              if (\n                consonant2 === \"l\" ||\n                consonant2 === \"r\" ||\n                (c === \"c\" && consonant2 === \"h\")\n              ) {\n                // split before the consonant pair\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, i - startSyllable)\n                  )\n                );\n                startSyllable = i++;\n              } else {\n                //split the consonants\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, ++i - startSyllable)\n                  )\n                );\n                startSyllable = i;\n              }\n            } else if (numberOfConsonants === 3) {\n              consonant2 = word[i + 1].toLowerCase();\n\n              // if second consonant is s, divide cc-c, otherwise divide c-cc\n              if (consonant2 === \"s\") {\n                i += 2;\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, i - startSyllable)\n                  )\n                );\n              } else\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, ++i - startSyllable)\n                  )\n                );\n\n              startSyllable = i;\n            } else if (numberOfConsonants === 4) {\n              // four always get split cc-cc\n              syllables.push(\n                this.createSyllable(\n                  word.substr(startSyllable, i - startSyllable + 2)\n                )\n              );\n              startSyllable = i + 2;\n              i += 3;\n            }\n          }\n\n          haveCompleteSyllable = false;\n        }\n\n        previousIsVowel = false;\n      }\n    }\n\n    // if we have a complete syllable, we can add it as a new one. Otherwise\n    // we tack the remaining characters onto the last syllable.\n    if (haveCompleteSyllable) syllables.push(word.substr(startSyllable));\n    else if (startSyllable > 0)\n      syllables[syllables.length - 1] += word.substr(startSyllable);\n    else if (syllables.length === 0) syllables.push(this.createSyllable(word));\n\n    return syllables;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n    var i, end, index;\n    var workingString = s.toLowerCase();\n\n    // do we have a diphthongs?\n    for (i = 0, end = this.diphthongs.length; i < end; i++) {\n      var d = this.diphthongs[i];\n      index = workingString.indexOf(d, startIndex);\n\n      if (index >= 0) {\n        // check the exceptions...\n        if (d[0] === \"u\" && index > 0) {\n          var tripthong = s.substr(index - 1, 3).toLowerCase();\n\n          for (\n            let j = 0, endj = this.uDiphthongExceptions.length;\n            i < endj;\n            j++\n          ) {\n            if (tripthong === this.uDiphthongExceptions[j]) {\n              // search from after the u...\n              return this.findVowelSegment(s, index + 1);\n            }\n          }\n        }\n\n        return { found: true, startIndex: index, length: d.length };\n      }\n    }\n\n    // no diphthongs. Let's look for single vowels then...\n    for (i = 0, end = this.vowels.length; i < end; i++) {\n      index = workingString.indexOf(this.vowels[i], startIndex);\n\n      if (index >= 0) return { found: true, startIndex: index, length: 1 };\n    }\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\nexport const language = {\n  english: new English(),\n  latin: new Latin(),\n  spanish: new Spanish()\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Text.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// generated based on the svg data\nexport let Glyphs = {\n  None: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    origin: {\n      x: 0,\n      y: 0\n    },\n    align: \"left\"\n  },\n  AcuteAccent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M4 0C-.614.52-.614.52-.803-3.182l60.768-108.422c4.52-7.182 10.543-13.67 18.075-13.67 5.27 0 14.31 1.264 23.346 7.793 7.53 5.223 8.803 11.752 8.803 16.975 0 3.917-.52 11.1-8.05 17.628L4 0z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 0, // TODO: figure out a better way to align this horizontally.  width should be 110.992,\n      height: 125.794\n    },\n    origin: {\n      x: 0.803,\n      y: 125.274\n    },\n    align: \"left\"\n  },\n  GraveAccent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M105.386.26C110 .78 110 .78 110.189-2.922l-60.768-108.422c-4.52-7.182-10.543-13.67-18.075-13.67-5.27 0-14.31 1.264-23.346 7.793-7.53 5.223-8.803 11.752-8.803 16.975 0 3.917.52 11.1 8.05 17.628L105.386.26z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 0, //110.992,\n      height: 125.794\n    },\n    origin: {\n      x: 0, // -110.992,\n      y: 125.274\n    },\n    align: \"left\"\n  },\n  Circle: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 -50A50 50 0 0 0 100 -50 50 50 0 0 0 0 -50M10 -50A40 40 0 0 1 90 -50 40 40 0 0 1 10 -50\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    },\n    origin: {\n      x: -50,\n      y: 100\n    }\n  },\n  Semicircle: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 -50A50 50 0 0 0 100 -50 5 5 0 0 0 90 -50 40 40 0 0 1 10 -50 5 5 0 0 0 0 -50\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 55\n    },\n    origin: {\n      x: -50,\n      y: 50\n    }\n  },\n  ReversedSemicircle: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 0A50 50 0 0 1 100 0 5 5 0 0 1 90 0 40 40 0 0 0 10 0 5 5 0 0 1 0 0\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 55\n    },\n    origin: {\n      x: -50,\n      y: 50\n    }\n  },\n  Stropha: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M1.22-73.438c4.165 13.02 12.238 27.084 24.217 42.188L49.657 0 34.812 27.344C18.666 55.47-.084 72.396-21.438 78.124c4.687-3.645 7.03-8.593 7.03-14.843 0-8.853-4.947-20.572-14.843-35.155L-48 0 1.22-73.438z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 97.657,\n      height: 151.562\n    },\n    origin: {\n      x: 48,\n      y: 73.438\n    },\n    align: \"left\"\n  },\n  BeginningAscLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 152.344\n    },\n    origin: {\n      x: 50,\n      y: 88.344\n    },\n    align: \"left\"\n  },\n  BeginningDesLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 151.562\n    },\n    origin: {\n      x: 50,\n      y: 75.562\n    },\n    align: \"left\"\n  },\n  CustosDescLong: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M39.063 273.472c5.73.52 7.29-6.25 4.687-20.312V-65.59c-13.542 2.083-24.22 5.468-32.03 10.156C3.905-50.226 0-43.714 0-35.904V71.91c5.73-5.21 10.677-8.594 14.844-10.157 5.73-1.562 12.24-2.343 19.53-2.343v196.875c0 11.458 1.563 17.187 4.688 17.187\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 46.353,\n      height: 339.582\n    },\n    origin: {\n      x: 0,\n      y: 65.59\n    },\n    align: \"left\"\n  },\n  CustosDescShort: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M34.375 191.923c0 8.333 1.563 12.24 4.688 11.72 3.125-.522 4.687-7.033 4.687-19.533v-250c-13.542 2.084-24.22 5.47-32.03 10.157C3.905-50.525 0-44.015 0-36.203V71.61c5.73-5.208 10.677-8.593 14.844-10.156 5.73-1.562 12.24-2.344 19.53-2.344v132.813z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 43.75,\n      height: 270.053\n    },\n    origin: {\n      x: 0,\n      y: 65.89\n    },\n    align: \"left\"\n  },\n  CustosLong: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M39.063-269.562c5.73-.52 7.29 6.25 4.687 20.312V69.5c-13.542-2.083-24.22-5.47-32.03-10.156C3.905 54.134 0 47.624 0 39.812V-68c5.73 5.208 10.677 8.594 14.844 10.156 5.73 1.563 12.24 2.344 19.53 2.344v-196.875c0-11.458 1.563-17.187 4.688-17.187z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 46.353,\n      height: 339.582\n    },\n    origin: {\n      x: 0,\n      y: 270.082\n    },\n    align: \"left\"\n  },\n  CustosShort: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M34.375-188.125c0-8.333 1.563-12.24 4.688-11.72 3.125.522 4.687 7.033 4.687 19.532v250c-13.542-2.083-24.22-5.468-32.03-10.156C3.905 54.324 0 47.813 0 40V-67.813c5.73 5.21 10.677 8.594 14.844 10.157 5.73 1.562 12.24 2.344 19.53 2.343v-132.812z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 43.75,\n      height: 270.052\n    },\n    origin: {\n      x: 0,\n      y: 200.365\n    },\n    align: \"left\"\n  },\n  DoClef: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 98.406V-97.688C0-118 5.99-134.275 17.97-146.516c11.978-12.24 27.603-18.36 46.874-18.36 10.937 0 19.53 3.126 25.78 9.376s9.376 14.583 9.376 25v107.813l-6.25-5.47c-4.167-3.645-10.287-7.42-18.36-11.327-8.072-3.907-16.796-5.86-26.17-5.86-11.46 0-21.486 4.427-30.08 13.282-8.593 8.854-12.89 19.53-12.89 32.03s4.297 23.308 12.89 32.423c8.594 9.115 18.62 13.672 30.08 13.672 9.374 0 18.098-1.822 26.17-5.468 8.073-3.646 14.193-7.292 18.36-10.938l6.25-6.25V132c0 9.896-3.125 18.1-9.375 24.61-6.25 6.51-14.844 9.765-25.78 9.765-19.272 0-34.897-6.25-46.876-18.75C5.99 135.125 0 118.72 0 98.405z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 331.251\n    },\n    origin: {\n      x: 0,\n      y: 164.876\n    },\n    align: \"left\"\n  },\n  FaClef: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M85.156-32v193.75c0 9.375-1.562 14.323-4.687 14.844-1.564 0-2.605-.52-3.126-1.563-.52-1.04-.782-2.603-.78-4.686V56.28c-8.335-8.332-19.793-12.5-34.376-12.5-17.71 0-31.77 3.907-42.188 11.72V-32c0-18.23 14.193-27.344 42.578-27.344 28.385 0 42.578 9.115 42.578 27.344zM98.438 93V-92.156c0-19.27 5.73-34.896 17.187-46.875 11.458-11.98 26.562-17.97 45.313-17.97 10.937 0 19.14 2.865 24.61 8.594 5.467 5.73 8.202 13.542 8.202 23.437v103.126l-5.47-4.687c-3.645-3.647-9.374-7.293-17.186-10.94-7.813-3.645-15.886-5.467-24.22-5.468-11.978 0-22.004 4.167-30.077 12.5-8.073 8.334-12.11 18.36-12.11 30.08 0 11.717 4.037 22.004 12.11 30.858s18.1 13.28 30.078 13.28c8.333 0 16.406-1.822 24.22-5.468 7.81-3.645 13.54-7.03 17.186-10.156l5.47-5.468V125.81c0 9.896-2.865 17.84-8.594 23.83-5.73 5.988-13.802 8.983-24.22 8.983-18.75 0-33.853-6.12-45.31-18.36-11.46-12.24-17.19-27.994-17.19-47.265z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 193.752,\n      height: 333.595\n    },\n    origin: {\n      x: 0.001,\n      y: 157.001\n    },\n    align: \"left\"\n  },\n  Flat: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M7.813-204.406c4.166 0 6.25 5.208 6.25 15.625L12.5-10.657C33.854 13.302 54.167 25.28 73.438 25.28c9.374 0 14.062-4.686 14.062-14.06 0-6.25-1.042-11.72-3.125-16.407-2.083-4.688-7.03-9.766-14.844-15.235-7.81-5.47-13.02-8.984-15.624-10.547L27.344-45.81V-80.97c17.187 0 33.073 4.82 47.656 14.454C89.583-56.88 96.875-47.376 96.875-38c0 67.708-.26 101.562-.78 101.563-38.543 0-69.532-12.24-92.97-36.72C0-52.322-1.042-123.936 0-188c0-10.937 2.604-16.406 7.813-16.406z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 97.917,\n      height: 267.969\n    },\n    origin: {\n      x: 1.042,\n      y: 204.406\n    },\n    align: \"left\"\n  },\n  Mora: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M47.478-24c6.957 0 12.793 2.288 17.49 6.883C69.662-12.52 72-6.904 72-.267c0 6.64-2.337 12.352-7.033 17.118C60.27 21.618 54.435 24 47.477 24c-6.26 0-11.748-2.383-16.444-7.15C26.337 12.086 24 6.374 24-.265c0-6.638 2.337-12.255 7.033-16.85C35.73-21.713 41.217-24 47.478-24z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 48,\n      height: 48\n    },\n    origin: {\n      x: -24,\n      y: 24\n    },\n    align: \"left\"\n  },\n  Natural: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M7.906-166.563c-2.864 0-5.614.52-8.218 1.563v13.28l.78 56.25.782 78.907v85.157c.52 3.646 2.604 5.73 6.25 6.25l23.438-3.906 23.437-3.907v29.69c0 42.186-.26 63.54-.78 64.06l6.25 2.345c1.04.52 2.082.78 3.124.78 2.603 0 4.947-1.3 7.03-3.905L67.656-71.25c-.52-2.604-2.083-3.906-4.687-3.906-7.814 0-17.19 1.04-28.126 3.125l-19.53 3.124.78-38.28V-165c-2.604-1.042-5.323-1.562-8.188-1.563zM55.938-40v71.875l-41.407 7.03c0-48.436.262-72.655.783-72.655L55.938-40z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 70.311,\n      height: 330.469\n    },\n    origin: {\n      x: 0.312,\n      y: 166.563\n    },\n    align: \"left\"\n  },\n  Sharp: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"m41.725,-73.773c-5.421,-0.241-10.878,5.856-6.549,12.357L67.061,-20.473 61.264,-12.5 13.436,-71.199c-5.634,-5.934-16.988,1.032-11.232,9.783L50.756,0.182 2.203,61.416c-6.745,7.984 3.442,17.859 11.232,9.783L61.264,12.5l5.797,7.973-31.885,40.943c-5.578,6.844 5.588,16.005 11.594,9.783L77.568,33.154 108.367,71.199c4.894,6.717 17.343,-1.575 11.232,-9.783L87.715,20.473 93.873,12.5 141.34,71.199c6.725,7.67 17.509,-2.248 11.596,-9.783L104.02,0.182 152.936,-61.416c5.52,-7.02-5.541,-16.309-11.596,-9.783L93.873,-12.5l-6.158,-7.973 31.884766,-40.943c5.407,-7.045-5.505,-15.924-11.232,-9.783L77.568,-33.154 46.77,-71.199c-1.435,-1.708-3.238,-2.494-5.044922,-2.574zM77.568,-8.516 84.09,0.182 77.568,8.516 70.684,0.182Z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 154.646,\n      height: 147.987\n    },\n    origin: {\n      x: 0,\n      y: 74.098\n    },\n    align: \"left\"\n  },\n  OriscusAsc: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M50 30.25c0 12.5-3.125 21.354-9.375 26.562-3.125 2.605-7.813 3.907-14.063 3.907-3.125 0-5.99-.522-8.593-1.564-2.605-1.04-5.6-2.474-8.986-4.297C5.6 53.035 2.734 51.603.39 50.56c-2.343-1.04-5.338-2.474-8.984-4.296-3.646-1.823-6.77-3.256-9.375-4.297-2.603-1.043-5.468-1.564-8.593-1.564-6.25 0-10.937 1.563-14.062 4.688C-46.875 50.824-50 59.677-50 71.656v-106.25c0-13.02 3.125-21.875 9.375-26.562 3.125-2.604 7.813-3.906 14.063-3.907 3.125 0 5.99.52 8.593 1.563 2.605 1.042 5.73 2.474 9.376 4.297 3.646 1.823 6.51 2.995 8.594 3.516l10.938 5.468c6.25 3.126 11.458 4.69 15.624 4.69 6.25 0 10.938-1.564 14.063-4.69C46.875-55.426 50-64.02 50-76V30.25z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 147.656\n    },\n    origin: {\n      x: 50,\n      y: 76\n    },\n    align: \"left\"\n  },\n  OriscusDes: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 30.844v-106.25c0 11.458 3.125 20.052 9.375 25.78 3.125 3.126 7.813 4.69 14.063 4.688 4.687 0 13.41-3.255 26.17-9.765 12.762-6.51 21.746-9.766 26.954-9.766 6.25 0 10.938 1.303 14.063 3.907C46.875-55.874 50-47.02 50-34V72.25c0-11.98-3.125-20.833-9.375-26.563C37.5 42.563 32.812 41 26.562 41 21.875 41 13.023 44.385 0 51.156c-4.167 2.604-8.594 4.948-13.28 7.032-4.69 2.083-9.116 3.124-13.283 3.124-6.25 0-10.937-1.302-14.062-3.906C-46.875 52.198-50 43.344-50 30.844z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 147.656\n    },\n    origin: {\n      x: 50,\n      y: 75.406\n    },\n    align: \"left\"\n  },\n  OriscusLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M 19.055,78.887 C 20.242,78.487 21.532,77.890 22.925,77.097 24.318,76.304 26.700882,74.417 30.074,71.438 33.447,68.458 36.524,64.985 39.303,61.019 42.083,57.052 44.563,51.396 46.743,44.05 48.923,36.704 50.013,28.671 50.013,19.950525 L 50.013,-34.226 C 50.013,-54.464 42.074,-64.584 26.195,-64.584 20.248,-64.584 11.519,-61.410 0.007,-55.064 -11.506,-48.717 -20.235,-45.544 -26.182,-45.544 -34.515,-45.544 -40.568,-48.520 -44.340791,-54.473 -48.114,-60.426 -50.000,-67.369 -50.000,-75.303 L -50.000,30.07 C -50.000,49.909 -42.060754,59.829 -26.182,59.829 -21.023,59.829 -12.39,56.455 -0.284,49.709 11.822,42.963 20.648,39.59 26.195,39.59 29.369,40.777 30.362,44.25 29.17479,50.009 27.988,55.768 26.001,62.020829 23.216,68.767 z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 147.656\n    },\n    origin: {\n      x: 50,\n      y: 75.406\n    },\n    align: \"left\"\n  },\n  PodatusLower: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-4.688-30.28c22.396 0 34.636-.262 36.72-.782 5.728-1.563 8.593-5.21 8.593-10.938H50v97.656c0 2.604-1.302 4.167-3.906 4.688-5.21.52-21.355.78-48.438.78-23.958 0-38.54-.26-43.75-.78-2.604 0-3.906-1.302-3.906-3.906v-82.032c0-3.646 1.302-5.468 3.906-5.468h2.344c2.604.52 15.625.78 39.063.78z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 103.124\n    },\n    origin: {\n      x: 50,\n      y: 42\n    },\n    align: \"left\"\n  },\n  PodatusUpper: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-46.094-63.78c13.542 0 24.61 2.473 33.203 7.42C-4.298-51.41 0-43.99 0-34.093V62h-9.375c0-10.938-2.604-19.14-7.812-24.61-5.21-5.468-14.844-8.203-28.907-8.202-18.23 0-33.333 4.166-45.312 12.5v-75.782c0-19.79 15.104-29.687 45.312-29.687z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 91.406,\n      height: 125.781\n    },\n    origin: {\n      x: 91.406,\n      y: 63.781\n    },\n    align: \"right\"\n  },\n  Porrectus1: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M233.594 162.875c-58.855 0-107.032-6.25-144.53-18.75C34.895 125.895-11.46 99.855-50 66V-52.75C-21.354-24.625 26.302 6.885 92.97 41.78 123.697 57.928 163.54 66 212.5 66c21.354 0 34.635-9.896 39.844-29.688V151.94c0 7.29-6.25 10.937-18.75 10.937z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 302.344,\n      height: 215.627\n    },\n    origin: {\n      x: 50,\n      y: 52.75\n    },\n    align: \"left\"\n  },\n  Porrectus2: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M309.375 259.375c-50.52 0-110.938-22.396-181.25-67.188C48.437 141.667-10.938 94.272-50 50V-68.75C0-3.125 60.417 52.083 131.25 96.875c58.333 36.98 110.677 58.854 157.03 65.625h7.033c16.145 0 26.822-9.896 32.03-29.688v114.844c0 7.812-5.99 11.72-17.968 11.72z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 377.343,\n      height: 328.126\n    },\n    origin: {\n      x: 50,\n      y: 68.75\n    },\n    align: \"left\"\n  },\n  Porrectus3: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M309.375 355.78c-48.96-16.666-109.115-55.468-180.47-116.405C79.428 198.23 19.793 134.687-50 48.75V-70C20 40 94.104 103.79 135.25 148.063 190 200 230 230 288.28 258.906c4.168 2.083 8.334 3.125 12.5 3.125 12.5 0 21.355-10.937 26.564-32.81v114.06c0 9.376-3.386 14.063-10.156 14.064-2.084 0-4.688-.522-7.813-1.563z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 377.344,\n      height: 427.345\n    },\n    origin: {\n      x: 50,\n      y: 70\n    },\n    align: \"left\"\n  },\n  Porrectus4: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M350 453.438c-52.754-22.397-120-77.345-201.74-164.844C90.87 227.656 24.784 147.708-50 48.75V-70C-8.84-1.25 58.406 86.51 151.74 193.28c60.868 69.793 119.13 124.22 174.782 163.282 5.797 3.646 11.014 5.47 15.652 5.47 12.173 0 21.45-11.72 27.826-35.157V441.72c0 9.373-3.19 14.06-9.565 14.06-2.9 0-6.377-.78-10.435-2.342z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 420,\n      height: 525.78\n    },\n    origin: {\n      x: 50,\n      y: 70\n    },\n    align: \"left\"\n  },\n  PunctumCavum: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\n      },\n      {\n        type: \"negative\",\n        data:\n          \"M.08-42.56c9.585.206 20.126.53 27.954 6.822 4.96 3.9 4.71 10.792 4.574 16.482v51.278C22.09 27.066 7.283 26.072.168 26.01c-7.72.23-21.895.935-32.616 4.674.04-19.197-.083-38.395.064-57.59.567-7.5 7.834-12.33 14.62-13.774 5.818-1.498 11.857-1.86 17.844-1.88z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 123.438\n    },\n    origin: {\n      x: 50,\n      y: 60.906\n    },\n    align: \"left\"\n  },\n  PunctumQuadratum: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 123.438\n    },\n    origin: {\n      x: 50,\n      y: 60.906\n    },\n    align: \"left\"\n  },\n  PunctumQuadratumLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0-36.5436c19.999799999999997 0 30 5.781 30 17.3436v56.717999999999996C23.437199999999997 30.956999999999997 13.4376 27.6756 0 27.6756s-23.4378 3.2819999999999996-30 9.843599999999999V-19.2c0-11.562 10.000200000000001-17.3436 30-17.3436z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 123.438\n    },\n    origin: {\n      x: 50,\n      y: 60.906\n    },\n    align: \"left\"\n  },\n  PunctumQuadratumAscLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 152.344\n    },\n    origin: {\n      x: 50,\n      y: 88.344\n    },\n    align: \"left\"\n  },\n  PunctumQuadratumDesLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 151.562\n    },\n    origin: {\n      x: 50,\n      y: 75.562\n    },\n    align: \"left\"\n  },\n  PunctumInclinatum: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M0-75.78L50 0 0 75-50 0 0-75.78z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 150.78\n    },\n    origin: {\n      x: 50,\n      y: 75.78\n    },\n    align: \"left\"\n  },\n  PunctumInclinatumLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M 0,-53.164 35,-0.117 0,52.383 -35,-0.117 0,-53.164 z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 105.546\n    },\n    origin: {\n      x: 50,\n      y: 53.164\n    },\n    align: \"left\"\n  },\n  Quilisma: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 34.938V-51c5.73 20.833 13.02 31.25 21.875 31.25 7.813 0 12.5-15.625 14.063-46.875 3.645 12.5 6.9 21.224 9.765 26.172s6.9 7.422 12.11 7.422c5.208 0 9.374-14.324 12.5-42.97 5.73 22.917 10.677 34.375 14.843 34.375 5.73 0 10.677-15.885 14.844-47.656v100c0 17.707-3.125 26.56-9.375 26.56-4.688 0-9.115-5.988-13.28-17.968-2.085 21.875-8.074 32.813-17.97 32.813-7.813 0-16.146-7.292-25-21.875-4.688 20.312-10.677 30.47-17.97 30.47-5.207 0-9.244-2.605-12.108-7.814C-48.568 47.698-50 41.708-50 34.938z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 150\n    },\n    origin: {\n      x: 50,\n      y: 89.282\n    },\n    align: \"left\"\n  },\n  TerminatingAscLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-9.375 40.22c0-11.98-4.948-17.97-14.844-17.97-10.936 0-19.53 3.646-25.78 10.938v-53.126c0-6.77 2.604-12.76 7.813-17.968 5.208-5.21 10.677-8.594 16.406-10.157 2.603-.52 5.207-.78 7.81-.78 3.647 0 7.032.78 10.157 2.343C-2.603-43.896 0-39.73 0-34V73.03h-9.375V40.22z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 49.999,\n      height: 121.873\n    },\n    origin: {\n      x: 49.999,\n      y: 48.843\n    },\n    align: \"right\"\n  },\n  TerminatingDesLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-9.375-48.156V-80.97H0V26.845c0 5.73-2.604 9.896-7.813 12.5-3.125 1.562-6.51 2.343-10.156 2.343-2.603 0-5.207-.26-7.81-.78-5.73-1.563-11.2-4.95-16.407-10.157C-47.398 25.542-50 19.292-50 12v-52.344c6.25 7.292 14.844 10.938 25.78 10.938 9.897 0 14.845-6.25 14.845-18.75z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 50,\n      height: 122.658\n    },\n    origin: {\n      x: 50,\n      y: 80.97\n    },\n    align: \"right\"\n  },\n  VerticalEpisemaAbove: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M-8-4c2 3 6 4 8 4s6-1 8-4v-52c-2-3-6-4-8-4s-6 1-8 4z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 16,\n      height: 60\n    },\n    origin: {\n      x: 8,\n      y: 60\n    },\n    align: \"left\"\n  },\n  VerticalEpisemaBelow: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M-8 56c2 3 6 4 8 4s6-1 8-4v-52c-2-3-6-4-8-4s-6 1-8 4z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 16,\n      height: 60\n    },\n    origin: {\n      x: 8,\n      y: 0\n    },\n    align: \"left\"\n  },\n  VirgaLong: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M50-38v285.156c0 6.77-2.344 10.937-7.03 12.5-1.564 0-2.605-.78-3.126-2.344-.52-1.562-.782-10.156-.782-25.78V54.186C29.168 45.334 16.146 40.907 0 40.907c-22.917 0-39.583 5.208-50 15.624V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 326.562\n    },\n    origin: {\n      x: 50,\n      y: 66.906\n    },\n    align: \"left\"\n  },\n  VirgaShort: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M50-38v211.72c0 7.29-2.344 11.457-7.03 12.5-1.564 0-2.606-.783-3.126-2.345-.52-1.563-.782-10.156-.782-25.78V54.187C29.167 45.332 16.146 40.906 0 40.906c-22.917 0-39.583 5.21-50 15.625V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 253.126\n    },\n    origin: {\n      x: 50,\n      y: 66.906\n    },\n    align: \"left\"\n  },\n  Virgula: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M8.178-55.66c0-22.137 12.092-33.2 36.287-33.2 11.835 0 23.53 5.66 35.108 16.98C91.15-60.547 96.94-41.766 96.94-15.534c0 53.515-31.646 87.487-94.937 101.895-2.048-2.06-3.077-5.146-3.077-9.273 0-1.03.247-1.8.76-2.316 42.71-19.027 64.075-41.678 64.075-67.92 0-11.322-2.325-20.326-6.945-27.016-4.62-6.69-9.52-11.052-14.676-13.11-5.147-2.048-11.836-3.85-20.07-5.403C12.81-39.707 8.18-45.37 8.18-55.66z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 98.014,\n      height: 175.221\n    },\n    origin: {\n      x: 1.074,\n      y: 88.86\n    },\n    align: \"left\"\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Glyphs.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport {\n  getCssForProperties, Point,\n  Rect\n} from \"./Exsurge.Core.js\";\nimport { Glyphs } from \"./Exsurge.Glyphs.js\";\nimport { language } from \"./Exsurge.Text.js\";\nimport { addAccent } from \"./addAccent.js\";\nimport { makeLigature } from \"./makeLigature.js\";\nimport { greextraGlyphs } from \"./greextraGlyphs.js\";\n\nfunction getFontFilenameForProperties(properties = {}, url = \"{}\") {\n  var italic = properties[\"font-style\"] === \"italic\" ? \"Italic\" : \"\",\n    bold = properties[\"font-weight\"] === \"bold\" ? \"Bold\" : \"\";\n  return url.replace(\n    \"{}\",\n    `${italic || bold ? `${bold}${italic}` : `Regular`}`\n  );\n}\n\n// load in the web font for special chant characters here:\n// var __exsurgeCharactersFont = require(\"url?limit=30000!../assets/fonts/ExsurgeChar.otf\")\n\nconst canAccessDOM = typeof document !== \"undefined\";\n\nconst __getNeumeFromSvgElem = (score, elem) => {\n  let note =\n    score.notes[\n      elem.parentElement\n        .querySelector(\"[element-index]\")\n        .getAttribute(\"element-index\")\n    ];\n  return note.neume || note;\n};\n\n// for positioning markings on notes\nexport var MarkingPositionHint = {\n  Default: 0,\n  Above: 1,\n  Below: 2\n};\n\n/**\n * List of types of text and their defaults relative to lyrics\n * @type Array\n */\nexport const TextTypes = {\n  supertitle: {\n    display: \"Supertitle\",\n    defaultSize: (size) => (size * 7) / 6, // 14pt\n    containedInScore: (score) => score.titles.hasSupertitle(),\n    getFromScore: (score) => score.titles.supertitle\n  },\n  title: {\n    display: \"Title\",\n    defaultSize: (size) => (size * 3) / 2, // 18pt\n    containedInScore: (score) => score.titles.hasTitle(),\n    getFromScore: (score) => score.titles.title\n  },\n  subtitle: {\n    display: \"Subtitle\",\n    defaultSize: (size) => size, // 12pt\n    containedInScore: (score) => score.titles.hasSubtitle(),\n    getFromScore: (score) => score.titles.subtitle\n  },\n  leftRight: {\n    display: \"Left / Right Text\",\n    cssClass: \"textLeftRight\",\n    defaultSize: (size) => size * 0.9,\n    containedInScore: (score) =>\n      score.titles.hasTextLeft() || score.titles.hasTextRight(),\n    getFromScore: (score, elem) => score.titles[elem.extraClass],\n    getFromSvgElem: (score, elem) =>\n      score.titles[\n        elem.classList.contains(\"textRight\") ? \"textRight\" : \"textLeft\"\n      ]\n  },\n  annotation: {\n    display: \"Annotation\",\n    defaultSize: (size) => (size * 2) / 3,\n    containedInScore: (score) =>\n      !!score.annotation,\n    getFromScore: (score, { elementIndex = 0 }) =>\n      score.annotation &&\n      (score.annotation.annotations\n        ? score.annotation.annotations[elementIndex]\n        : score.annotation)\n  },\n  dropCap: {\n    display: \"Drop Cap\",\n    defaultSize: (size) => size * 4,\n    containedInScore: (score) => !!score.dropCap,\n    getFromScore: (score) => score.dropCap\n  },\n  al: {\n    display: \"Above Staff\",\n    cssClass: \"aboveLinesText\",\n    defaultSize: (size) => size,\n    containedInScore: (score) => score.hasAboveLinesText,\n    getFromScore: (score, elem) =>\n      score.notations[elem.notation.notationIndex].alText[elem.alIndex],\n    getFromSvgElem: (score, elem) =>\n      __getNeumeFromSvgElem(score, elem).alText[\n        elem.getAttribute(\"al-index\") || 0\n      ]\n  },\n  choralSign: {\n    display: \"Choral Sign\",\n    size: (ctxt) => ctxt.staffInterval * 1.5,\n    containedInScore: (score) => false,\n    getFromScore: (score, elem) =>\n      score.notes[elem.note.elementIndex].choralSign\n  },\n  lyric: {\n    display: \"Lyric\",\n    defaultSize: (size) => size * 0.9,\n    containedInScore: (score) => score.hasLyrics,\n    getFromScore: (score, elem) =>\n      score.notations[elem.notation.notationIndex].lyrics[elem.lyricIndex],\n    getFromSvgElem: (score, elem) =>\n      __getNeumeFromSvgElem(score, elem).lyrics[\n        elem.getAttribute(\"lyric-index\") || 0\n      ]\n  },\n  translation: {\n    display: \"Translation\",\n    defaultSize: (size) => size * 0.75,\n    containedInScore: (score) => score.hasTranslations,\n    getFromScore: (score, elem) =>\n      score.notations[elem.notation.notationIndex].translationText[\n        elem.translationIndex\n      ],\n    getFromSvgElem: (score, elem) =>\n      __getNeumeFromSvgElem(score, elem).translationText[\n        elem.getAttribute(\"translation-index\") || 0\n      ]\n  }\n};\nexport const TextTypesByClass = {};\nObject.entries(TextTypes).forEach(([key, entry]) => {\n  let cssClass = (entry.cssClass = entry.cssClass || key);\n  entry.key = key;\n  TextTypesByClass[cssClass] = entry;\n});\n\nexport const DefaultTrailingSpace = (ctxt) =>\n  ctxt.intraNeumeSpacing * ctxt.interSyllabicMultiplier;\nDefaultTrailingSpace.isDefault = true;\n\nexport let GlyphCode = {\n  None: \"None\",\n\n  AcuteAccent: \"AcuteAccent\",\n  GraveAccent: \"GraveAccent\",\n  Circle: \"Circle\",\n  Semicircle: \"Semicircle\",\n  ReversedSemicircle: \"ReversedSemicircle\",\n  Stropha: \"Stropha\",\n  StrophaLiquescent: \"StrophaLiquescent\",\n\n  BeginningAscLiquescent: \"BeginningAscLiquescent\",\n  BeginningDesLiquescent: \"BeginningDesLiquescent\",\n\n  CustosDescLong: \"CustosDescLong\",\n  CustosDescShort: \"CustosDescShort\",\n  CustosLong: \"CustosLong\",\n  CustosShort: \"CustosShort\",\n\n  // clefs and other markings\n  DoClef: \"DoClef\",\n  FaClef: \"FaClef\",\n  Flat: \"Flat\",\n  Mora: \"Mora\",\n  Natural: \"Natural\",\n  OriscusAsc: \"OriscusAsc\",\n  OriscusDes: \"OriscusDes\",\n  OriscusLiquescent: \"OriscusLiquescent\",\n\n  PodatusLower: \"PodatusLower\",\n  PodatusUpper: \"PodatusUpper\",\n\n  Porrectus1: \"Porrectus1\", // 1 staff line difference,\n  Porrectus2: \"Porrectus2\", // 2 lines difference, etc...\n  Porrectus3: \"Porrectus3\",\n  Porrectus4: \"Porrectus4\",\n\n  PunctumCavum: \"PunctumCavum\",\n  PunctumQuadratum: \"PunctumQuadratum\",\n  PunctumQuadratumLiquescent: \"PunctumQuadratumLiquescent\",\n  PunctumQuadratumAscLiquescent: \"PunctumQuadratumAscLiquescent\",\n  PunctumQuadratumDesLiquescent: \"PunctumQuadratumDesLiquescent\",\n  PunctumInclinatum: \"PunctumInclinatum\",\n  PunctumInclinatumLiquescent: \"PunctumInclinatumLiquescent\",\n  Quilisma: \"Quilisma\",\n\n  Sharp: \"Sharp\",\n  TerminatingAscLiquescent: \"TerminatingAscLiquescent\",\n  TerminatingDesLiquescent: \"TerminatingDesLiquescent\",\n  VerticalEpisemaAbove: \"VerticalEpisemaAbove\",\n  VerticalEpisemaBelow: \"VerticalEpisemaBelow\",\n  VirgaLong: \"VirgaLong\",\n  VirgaShort: \"VirgaShort\",\n  Virgula: \"Virgula\",\n\n  UpperBrace: \"UpperBrace\"\n}; // GlyphCode\n\nexport var QuickSvg = {\n  // namespaces\n  ns: \"http://www.w3.org/2000/svg\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\",\n  xlink: \"http://www.w3.org/1999/xlink\",\n\n  hasDOMAccess: function () {\n    return canAccessDOM;\n  },\n\n  // create the root level svg object\n  svg: function (width, height) {\n    var node = document.createElementNS(this.ns, \"svg\");\n\n    node.setAttribute(\"xmlns\", this.ns);\n    node.setAttribute(\"version\", \"1.1\");\n    node.setAttributeNS(this.xmlns, \"xmlns:xlink\", this.xlink);\n\n    node.setAttribute(\"width\", width);\n    node.setAttribute(\"height\", height);\n\n    // create the defs element\n    var defs = document.createElementNS(this.ns, \"defs\");\n    node.appendChild(defs);\n\n    node.defs = defs;\n\n    node.clearNotations = function () {\n      // clear out all children except defs\n      node.removeChild(defs);\n\n      while (node.hasChildNodes()) node.removeChild(node.lastChild);\n\n      node.appendChild(defs);\n    };\n\n    return node;\n  },\n\n  rect: function (width, height) {\n    var node = document.createElementNS(this.ns, \"rect\");\n\n    node.setAttribute(\"width\", width);\n    node.setAttribute(\"height\", height);\n\n    return node;\n  },\n\n  line: function (x1, y1, x2, y2) {\n    var node = document.createElementNS(this.ns, \"line\");\n\n    node.setAttribute(\"x1\", x1);\n    node.setAttribute(\"y1\", y1);\n    node.setAttribute(\"x2\", x2);\n    node.setAttribute(\"y2\", y2);\n\n    return node;\n  },\n\n  g: function () {\n    var node = document.createElementNS(this.ns, \"g\");\n\n    return node;\n  },\n\n  text: function () {\n    var node = document.createElementNS(this.ns, \"text\");\n\n    return node;\n  },\n\n  tspan: function (str) {\n    var node = document.createElementNS(this.ns, \"tspan\");\n    node.textContent = str;\n\n    return node;\n  },\n\n  // nodeRef should be the id of the object in defs (without the #)\n  use: function (nodeRef) {\n    var node = document.createElementNS(this.ns, \"use\");\n    node.setAttributeNS(this.xlink, \"xlink:href\", \"#\" + nodeRef);\n\n    return node;\n  },\n\n  svgFragmentForGlyph: function (glyph) {\n    var svgSrc = \"\";\n    for (var i = 0; i < glyph.paths.length; ++i) {\n      var path = glyph.paths[i];\n      svgSrc += QuickSvg.createFragment(path.data ? \"path\" : \"g\", {\n        d: path.data || undefined,\n        fill: path.type === \"negative\" ? \"#fff\" : undefined\n      });\n    }\n    return svgSrc;\n  },\n\n  nodesForGlyph: function (glyph, functionName = \"createNode\") {\n    var nodes = [];\n    for (var i = 0; i < glyph.paths.length; ++i) {\n      var path = glyph.paths[i];\n      let props = {};\n      if (path.data) props.d = path.data;\n      if (path.type === \"negative\") props.fill = \"#fff\";\n      nodes.push(QuickSvg[functionName](path.data ? \"path\" : \"g\", props));\n    }\n    return nodes;\n  },\n\n  createNode: function (name, attributes, children) {\n    var node = document.createElementNS(this.ns, name);\n    if (attributes && attributes.source) {\n      node.source = attributes.source;\n      delete attributes.source;\n    }\n    for (var attr in attributes) {\n      if (\n        attributes.hasOwnProperty(attr) &&\n        typeof attributes[attr] !== \"undefined\"\n      ) {\n        var val = attributes[attr];\n        var match = attr.match(/^([^:]+):([^:]+)$/);\n        if (match) {\n          node.setAttributeNS(this[match[1]], match[2], val);\n        } else {\n          node.setAttribute(attr, val);\n        }\n      }\n    }\n    if (children) {\n      if (typeof children === \"string\") {\n        node.textContent = children;\n      } else if (children.constructor === [].constructor) {\n        for (var i = 0; i < children.length; ++i) {\n          node.appendChild(children[i]);\n        }\n      } else {\n        node.appendChild(children);\n      }\n    }\n    return node;\n  },\n\n  createSvgTree(name, props, ...children) {\n    if (\"class\" in props) {\n      props.className = props.class;\n      delete props.class;\n    }\n    if (children.length === 1 && children[0] instanceof Array) {\n      children = children[0];\n    }\n    const convertKeysToCamelCase = (obj) => {\n      for (let key of Object.keys(obj)) {\n        if (/[-:][a-z]/.test(key)) {\n          if (/^\\w+-index$/.test(key)) continue;\n          let camelCase = key.replace(/[-:]([a-z])/g, (whole, letter) =>\n            letter.toUpperCase()\n          );\n          obj[camelCase] = obj[key];\n          delete obj[key];\n        }\n      }\n    };\n    convertKeysToCamelCase(props);\n    if (props.style) convertKeysToCamelCase(props.style);\n    let source = props.source;\n    if (source && source.sourceGabc) {\n      props[\"source-gabc\"] = source.sourceGabc;\n    }\n    return { name, props, children };\n  },\n\n  createFragment: function (name, attributes, child) {\n    if (child === undefined || child === null) child = \"\";\n\n    var fragment = \"<\" + name + \" \";\n\n    for (var attr in attributes) {\n      if (\n        attributes.hasOwnProperty(attr) &&\n        typeof attributes[attr] !== \"undefined\"\n      )\n        fragment += attr + '=\"' + attributes[attr] + '\" ';\n    }\n\n    fragment += \">\" + child + \"</\" + name + \">\";\n\n    return fragment;\n  },\n\n  parseFragment: function (fragment) {\n    // create temporary holder\n    var well = document.createElement(\"svg\");\n\n    // act as a setter if svg is given\n    if (fragment) {\n      var container = this.g();\n\n      // dump raw svg\n      // do this to allow the browser to automatically create svg nodes?\n      well.innerHTML =\n        \"<svg>\" +\n        fragment\n          .replace(/\\n/, \"\")\n          .replace(/<(\\w+)([^<]+?)\\/>/g, \"<$1$2></$1>\") +\n        \"</svg>\";\n\n      // transplant nodes\n      for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\n        container.appendChild(well.firstChild.firstChild);\n\n      return container;\n    }\n  },\n\n  translate: function (node, x, y) {\n    node.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n    return node;\n  },\n\n  scale: function (node, sx, sy) {\n    node.setAttribute(\"transform\", \"scale(\" + sx + \",\" + sy + \")\");\n    return node;\n  }\n};\n\nexport var TextMeasuringStrategy = {\n  // shapes\n  Svg: 0,\n  Canvas: 1,\n  OpenTypeJS: 2\n};\n\n/*\n * ChantContext\n */\nexport class ChantContext {\n  constructor(\n    textMeasuringStrategy = QuickSvg.hasDOMAccess()\n      ? TextMeasuringStrategy.Canvas\n      : TextMeasuringStrategy.OpenTypeJS\n  ) {\n    this.textMeasuringStrategy = textMeasuringStrategy;\n    this.getFontFilenameForProperties = getFontFilenameForProperties;\n    this.defs = {};\n    this.makeDefs = [];\n    if (QuickSvg.hasDOMAccess()) {\n      this.defsNode = QuickSvg.createNode(\"defs\");\n    }\n\n    // font styles\n    this.textStyles = {};\n    this.textColor = \"#000\";\n    this.setFont(\"'Palatino Linotype', 'Book Antiqua', Palatino, serif\", 16);\n\n    this.rubricColor = \"#d00\";\n    this.specialCharProperties = {\n      \"font-family\": \"'Exsurge Characters'\",\n      fill: this.rubricColor,\n      class: 'rubric'\n    };\n    this.textBeforeSpecialChar = \"\";\n    this.textAfterSpecialChar = \".\";\n    this.specialCharMap = {\n      \"℣\": 'v',\n      \"℟\": 'r',\n      \"+\": \"+\",\n      \"*\": \"*\"\n    };\n    this.plusProperties = {};\n    this.asteriskProperties = {};\n    this.specialCharText = (char) => this.specialCharMap[char] || char;\n\n    this.fontStyleDictionary = {\n      b: { \"font-weight\": \"bold\" },\n      i: { \"font-style\": \"italic\" },\n      u: { \"text-decoration\": \"underline\" },\n      ul: { \"text-decoration\": \"underline\" },\n      c: { fill: this.rubricColor, class: 'rubric' },\n      sc: {\n        \"font-variant\": \"small-caps\",\n        \"font-variant-caps\": \"small-caps\",\n        \"font-feature-settings\": \"'smcp'\",\n        \"-webkit-font-feature-settings\": \"'smcp'\"\n      },\n      v: {}\n    };\n\n    this.markupSymbolDictionary = {\n      \"*\": \"b\",\n      \"_\": \"i\",\n      \"^\": \"c\",\n      \"%\": \"sc\"\n    };\n\n    this.textStyles.al.prefix = \"<i>\";\n\n    this.textStyles.translation.prefix = \"<i>\";\n\n    this.textStyles.dropCap.padding = 1; // minimum padding on either side of drop cap in staffIntervals\n\n    this.textStyles.annotation.padding = 1; // minimum padding on either side of annotation in staffIntervals\n\n    this.minLedgerSeparation = 2; // multiple of staffInterval\n    this.minSpaceAboveStaff = 2; // multiple of staffInterval\n    this.minSpaceBelowStaff = 1; // multiple of staffInterval\n    this.spaceBetweenSystems = 1.5; // multiple of staffInterval\n\n    // everything depends on the scale of the punctum\n    this.glyphPunctumWidth = Glyphs.PunctumQuadratum.bounds.width;\n    this.glyphPunctumHeight = Glyphs.PunctumQuadratum.bounds.height;\n\n    // max space to add between notations when justifying, in multiples of this.staffInterval\n    this.maxExtraSpaceInStaffIntervals = 0.5;\n\n    // for keeping track of the clef\n    this.activeClef = null;\n\n    this.neumeLineColor = \"#000\";\n    this.staffLineColor = \"#000\";\n    this.dividerLineColor = \"#000\";\n\n    this.defaultLanguage = language.latin;\n\n    // calculate the pixel ratio for drawing to a canvas\n    this.pixelRatio =\n      typeof window === 'undefined'\n        ? 1.0\n        : (window.devicePixelRatio || 1.0);\n\n    //this.canvasCtxt.scale(this.pixelRatio, this.pixelRatio);\n\n    if (textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n      this.svgTextMeasurer = QuickSvg.svg(0, 0);\n      this.svgTextMeasurer.setAttribute(\"id\", \"TextMeasurer\");\n      this.svgTextMeasurer.setAttribute(\"style\", \"position:absolute\");\n      document.body.insertBefore(\n        this.svgTextMeasurer,\n        document.body.firstChild\n      );\n    } else if (textMeasuringStrategy === TextMeasuringStrategy.Canvas) {\n      this.makeCanvasIfNeeded();\n    }\n\n    // for connecting neume syllables...\n    this.syllableConnector = \"-\";\n\n    // set whether to scale the def tags (scaleDefs = true) or the use tags.\n    this.scaleDefs = true;\n\n    // fixme: for now, we just set these using the glyph scales as noted above, presuming a\n    // staff line size of 0.5 in. Really what we should do is scale the punctum size based\n    // on the text metrics, right? 1 punctum ~ x height size?\n    this.setGlyphScaling(1.0 / 16.0);\n\n    // minimum space between puncta of different syllables, in multiples of this.intraNeumeSpacing\n    this.interSyllabicMultiplier = 2.5;\n\n    // space between an accidental and the following note, in multiples of this.intraNeumeSpacing\n    this.accidentalSpaceMultiplier = 2;\n\n    // space added between puncta of different words, in multiples of this.intraNeumeSpacing\n    this.interVerbalMultiplier = 1;\n\n    this.drawGuides = false;\n    this.drawDebuggingBounds = true;\n\n    // we keep track of where we are in processing notations, so that\n    // we can maintain the context for notations to know about.\n    //\n    // these are only gauranteed to be valid during the performLayout phase!\n    this.activeNotations = null;\n    this.currNotationIndex = -1;\n\n    this.minSyllablesLastLine = 0;\n    this.minNotesLastLine = 0;\n\n    // chant notation elements are normally separated by a minimum fixed amount of space\n    // on the staff line. It can happen, however, that two text elements are almost close\n    // enough to merge, only to be separated much more by the required hyphen (or other\n    // connecting string).\n    //\n    // This tolerance value allows a little bit of flexibility to merge two close lyrical\n    // elements, thus bringing the chant notation elements a bit closer than otherwise\n    // would be normally allowed.\n    //\n    // condensing tolerance is a percentage value (0.0-1.0, inclusive) that indicates\n    // how much the default spacing can shrink. E.g., a value of 0.20 allows the layout\n    // engine to separate two glyphs by only 80% of the normal inter-neume spacing value.\n    this.condensingTolerance = 0.3;\n\n    // if auto color is true, then exsurge tries to automatically colorize\n    // some elements of the chant (directives become rubric color, etc.)\n    this.autoColor = true;\n\n    this.useExtraTextOnly = true;\n\n    this.noteIdPrefix = 'note-';\n\n    this.insertFontsInDoc();\n    this.setMergeAnnotationWithTextLeft(true);\n  }\n\n  getFontForProperties(properties = {}, fontFamily) {\n    let key = this.getFontFilenameForProperties(properties),\n      keyWithFontFamily = this.getFontFilenameForProperties(properties, fontFamily);\n    return (\n      this.fontDictionary &&\n      (this.fontDictionary[keyWithFontFamily] ||\n        this.fontDictionary[fontFamily] ||\n        this.fontDictionary.Regular)\n    );\n  }\n\n  setFont(font, size = 16, baseStyle = {}, opentypeFontDictionary) {\n    for (let [key, textType] of Object.entries(TextTypes)) {\n      let textStyle = (this.textStyles[key] = this.textStyles[key] || {});\n      textStyle.size = textType.defaultSize\n        ? textType.defaultSize(size, this)\n        : textType.size(this);\n      textStyle.font = font;\n      textStyle.color = this.textColor || \"#000\";\n    }\n\n    this.baseTextStyle = baseStyle;\n\n    if (opentypeFontDictionary) {\n      this.textMeasuringStrategy = TextMeasuringStrategy.OpenTypeJS;\n      this.fontDictionary = opentypeFontDictionary;\n    }\n  }\n\n  setRubricColor(color) {\n    this.rubricColor = color;\n    this.specialCharProperties.fill = color;\n    this.fontStyleDictionary.c.fill = color;\n  }\n\n  setMergeAnnotationWithTextLeft(merge) {\n    this.mergeAnnotationWithTextLeft = merge ? __mergeAnnotationWithTextLeft : undefined;\n  }\n\n  setScaleDefs(scaleDefs) {\n    scaleDefs = !!scaleDefs;\n    if (this.scaleDefs !== scaleDefs) {\n      this.scaleDefs = scaleDefs;\n      this.setGlyphScaling(this.glyphScaling);\n    }\n  }\n\n  createStyleCss() {\n    var style = \"\";\n    for (let [key, textType] of Object.entries(TextTypes)) {\n      var cssClass = textType.cssClass,\n        { color, font, size } = this.textStyles[key];\n      style += `svg.Exsurge .${cssClass}{fill:${color};font-family:${font};font-size:${size}px;font-kerning:normal}`;\n    }\n    return style;\n  }\n\n  createStyleNode() {\n    var node = QuickSvg.createNode(\"style\", {});\n    node.textContent = this.createStyleCss();\n    return node;\n  }\n\n  createStyleTree() {\n    return { name: \"style\", props: {}, children: [this.createStyleCss()] };\n  }\n\n  createStyle() {\n    return \"<style>\" + this.createStyleCss() + \"</style>\";\n  }\n\n  updateHyphenWidth() {\n    // measure the size of a hyphen for the lyrics\n    var hyphen = new Lyric(\n      this,\n      this.syllableConnector,\n      LyricType.SingleSyllable\n    );\n    var multiplier =\n      this.minLyricWordSpacing /\n        (this.hyphenWidth || this.minLyricWordSpacing) || 1;\n    this.hyphenWidth = hyphen.bounds.width;\n\n    this.minLyricWordSpacing = multiplier * this.hyphenWidth;\n  }\n\n  setStaffHeight(staffHeight) {\n    this.setGlyphScaling(staffHeight / 600);\n  }\n\n  setGlyphScaling(glyphScaling) {\n    this.glyphScaling = glyphScaling;\n\n    this.staffInterval = this.glyphPunctumWidth * this.glyphScaling;\n\n    // setup the line weights for the various elements.\n    this.staffLineWeight = Math.ceil((5 * this.staffInterval) / 8) / 5;\n    this.neumeLineWeight = this.staffLineWeight; // the weight of connecting lines in the glyphs.\n    this.dividerLineWeight = this.neumeLineWeight; // of quarter bar, half bar, etc.\n    this.episemaLineWeight = this.neumeLineWeight * 1.25; // of horizontal episemata\n\n    this.intraNeumeSpacing = this.staffInterval / 2.0;\n\n    while (this.defsNode && this.defsNode.firstChild)\n      this.defsNode.removeChild(this.defsNode.firstChild);\n    for (var i = 0; i < this.makeDefs.length; ++i) {\n      this.makeDefs[i]();\n    }\n\n    this.updateHyphenWidth();\n  }\n\n  calculateHeightFromStaffPosition(staffPosition) {\n    return -staffPosition * this.staffInterval;\n  }\n\n  insertFontsInDoc() {\n    if (!canAccessDOM) return;\n\n    var styleElement = document.getElementById(\"exsurge-fonts\");\n\n    if (styleElement === null) {\n      // create it since it doesn't exist yet.\n      styleElement = document.createElement(\"style\");\n      styleElement.id = \"exsurge-fonts\";\n\n      // styleElement.appendChild(document.createTextNode(\"@font-face{font-family: 'Exsurge Characters';font-weight: normal;font-style: normal;src: url(\" + __exsurgeCharactersFont + \") format('opentype');}\"));\n\n      document.head.appendChild(styleElement);\n    }\n  }\n\n  // returns the next neume starting at this.currNotationIndex, or null\n  // if there isn't a neume after this one...\n  findNextNeume() {\n    if (typeof this.currNotationIndex === \"undefined\")\n      throw \"findNextNeume() called without a valid currNotationIndex set\";\n\n    for (var i = this.currNotationIndex + 1; i < this.notations.length; i++) {\n      var notation = this.notations[i];\n\n      if (notation.isNeume && !notation.hasNoWidth) return notation;\n    }\n\n    return null;\n  }\n\n  makeCanvasIfNeeded() {\n    if (!this.canvas) {\n      this.canvas = document.createElement(\"canvas\");\n      this.canvasCtxt = this.canvas.getContext(\"2d\");\n    }\n  }\n\n  setCanvasSize(width, height, scale = 1) {\n    this.makeCanvasIfNeeded();\n\n    this.canvas.style.width = width * scale + \"px\";\n    this.canvas.style.height = height * scale + \"px\";\n    scale *= this.pixelRatio;\n    this.canvas.width = width * scale;\n    this.canvas.height = height * scale;\n\n    this.canvasCtxt.setTransform(scale, 0, 0, scale, 0, 0);\n  }\n}\n\n/*\n * ChantLayoutElement\n */\nexport class ChantLayoutElement {\n  constructor() {\n    this.bounds = new Rect();\n    this.origin = new Point(0, 0);\n\n    this.selected = false;\n    this.highlighted = false;\n  }\n\n  // draws the element on an html5 canvas\n  draw(ctxt) {\n    throw \"ChantLayout Elements must implement draw(ctxt)\";\n  }\n\n  // returns svg element\n  createSvgNode(ctxt) {\n    throw \"ChantLayout Elements must implement createSvgNode(ctxt)\";\n  }\n\n  // returns svg code for the element, used for printing support\n  createSvgFragment(ctxt) {\n    throw \"ChantLayout Elements must implement createSvgFragment(ctxt)\";\n  }\n}\n\nexport class DividerLineVisualizer extends ChantLayoutElement {\n  constructor(ctxt, staffPosition0, staffPosition1, divider) {\n    super();\n\n    this.divider = divider;\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition0);\n    var y1 = ctxt.calculateHeightFromStaffPosition(staffPosition1);\n\n    if (y0 > y1) {\n      var temp = y0;\n      y0 = y1;\n      y1 = temp;\n    }\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.dividerLineWeight;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = this.bounds.width / 2;\n    this.origin.y = y0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.dividerLineColor;\n\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.dividerLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    let props = {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: ctxt.dividerLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.dividerLineColor,\n      class: \"dividerLine\"\n    };\n    if (this.divider) {\n      if (this.divider.selected) props.class += \" selected\";\n      props[\"source-index\"] = this.divider.sourceIndex;\n      props[\"element-index\"] = this.divider.elementIndex;\n      props.source = this.divider;\n    }\n    return props;\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\nexport class NeumeLineVisualizer extends ChantLayoutElement {\n  constructor(ctxt, note0, note1, hanging) {\n    super();\n\n    var staffPosition0 = note0.staffPosition;\n    var staffPosition1 = note1.staffPosition;\n\n    // note0 should be the upper one for our calculations here\n    if (staffPosition0 < staffPosition1) {\n      var temp = staffPosition0;\n      staffPosition0 = staffPosition1;\n      staffPosition1 = temp;\n    }\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition0);\n    var y1 = 0;\n\n    if (hanging) {\n      // if the difference between the notes is only one, and the upper\n      // note is on a line, and the lower note is within the four staff lines,\n      // then our hanging line goes past the lower note by a whole\n      // staff interval\n      if (\n        staffPosition0 - staffPosition1 === 1 &&\n        Math.abs(staffPosition0) % 2 === 1 &&\n        staffPosition1 > -3\n      )\n        staffPosition1--;\n\n      y1 += (ctxt.glyphPunctumHeight * ctxt.glyphScaling) / 2.2;\n    }\n\n    y1 += ctxt.calculateHeightFromStaffPosition(staffPosition1);\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.neumeLineWeight;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.neumeLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    return {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: ctxt.neumeLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"neumeLine\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\nexport class VirgaLineVisualizer extends ChantLayoutElement {\n  constructor(ctxt, note) {\n    super();\n\n    var staffPosition = note.staffPosition;\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition);\n    var y1;\n\n    if (Math.abs(staffPosition % 2) === 0) y1 = y0 + ctxt.staffInterval * 1.8;\n    else y1 = y0 + ctxt.staffInterval * 2.7;\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.neumeLineWeight;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.neumeLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    return {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: ctxt.neumeLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"neumeLine\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\nexport class LineaVisualizer extends ChantLayoutElement {\n  constructor(ctxt, note) {\n    super();\n\n    var staffPosition = note.staffPosition;\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition) - note.origin.y;\n    var y1 = y0 + note.bounds.height;\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.neumeLineWeight * 5 + note.bounds.width;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = ctxt.neumeLineWeight * 2.5;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.neumeLineWeight,\n      this.bounds.height\n    );\n    canvasCtxt.fillRect(\n      this.bounds.x + this.bounds.width - ctxt.neumeLineWeight,\n      this.bounds.y,\n      ctxt.neumeLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt, x) {\n    return {\n      x,\n      y: this.bounds.y,\n      width: ctxt.neumeLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"neumeLine\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"g\", null, [\n      this.bounds.x,\n      this.bounds.x + this.bounds.width - ctxt.neumeLineWeight\n    ].map(x => QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt, x))));\n  }\n\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"g\", {}, ...[\n      this.bounds.x,\n      this.bounds.x + this.bounds.width - ctxt.neumeLineWeight\n    ].map(x => QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt, x))));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"g\", null, [\n      this.bounds.x,\n      this.bounds.x + this.bounds.width - ctxt.neumeLineWeight\n    ].map(x => QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt, x))).join(''));\n  }\n}\n\nexport class GlyphVisualizer extends ChantLayoutElement {\n  constructor(ctxt, glyphCode) {\n    super();\n\n    this.glyph = null;\n\n    this.setGlyph(ctxt, glyphCode);\n  }\n\n  setGlyph(ctxt, glyphCode) {\n    if (this.glyphCode !== glyphCode) {\n      if (\n        typeof glyphCode === \"undefined\" ||\n        glyphCode === null ||\n        glyphCode === \"\"\n      )\n        glyphCode = this.glyphCode = GlyphCode.None;\n      else this.glyphCode = glyphCode;\n\n      let glyph = this.glyph = Glyphs[glyphCode];\n\n      // if this glyph hasn't been used yet, then load it up in the defs section for sharing\n      if (!ctxt.defs.hasOwnProperty(glyphCode)) {\n        var getDefProps = () => {\n          var options = {\n            id: glyphCode,\n            class: \"glyph\"\n          };\n          if (ctxt.scaleDefs === true) {\n            options.transform = \"scale(\" + ctxt.glyphScaling + \")\";\n          }\n          return options;\n        };\n        var makeDef = () => {\n          let options = getDefProps();\n          // create the ref\n          ctxt.defs[glyphCode] = QuickSvg.createFragment(\n            \"g\",\n            options,\n            QuickSvg.svgFragmentForGlyph(glyph)\n          );\n\n          if (ctxt.defsNode)\n            ctxt.defsNode.appendChild(\n              QuickSvg.createNode(\n                \"g\",\n                options,\n                QuickSvg.nodesForGlyph(glyph)\n              )\n            );\n        };\n        makeDef.makeSvgTree = () => {\n          return QuickSvg.createSvgTree(\n            \"g\",\n            getDefProps(),\n            ...QuickSvg.nodesForGlyph(glyph, \"createSvgTree\")\n          );\n        };\n        makeDef.glyphCode = glyphCode;\n        makeDef();\n        ctxt.makeDefs.push(makeDef);\n      }\n\n      this.align = this.glyph.align;\n    }\n\n    this.origin.x = this.glyph.origin.x * ctxt.glyphScaling;\n    this.origin.y = this.glyph.origin.y * ctxt.glyphScaling;\n\n    this.bounds.x = 0;\n    this.bounds.y = -this.origin.y;\n    this.bounds.width = this.glyph.bounds.width * ctxt.glyphScaling;\n    this.bounds.height = this.glyph.bounds.height * ctxt.glyphScaling;\n  }\n\n  setStaffPosition(ctxt, staffPosition) {\n    this.bounds.y =\n      ctxt.calculateHeightFromStaffPosition(staffPosition) - this.origin.y;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    var x = this.bounds.x + this.origin.x;\n    var y = this.bounds.y + this.origin.y;\n    canvasCtxt.translate(x, y);\n    canvasCtxt.scale(ctxt.glyphScaling, ctxt.glyphScaling);\n\n    for (var i = 0; i < this.glyph.paths.length; i++) {\n      var path = this.glyph.paths[i];\n      canvasCtxt.fillStyle =\n        path.type === \"negative\" ? \"#fff\" : ctxt.neumeLineColor;\n      canvasCtxt.fill(new Path2D(path.data));\n    }\n\n    canvasCtxt.scale(1.0 / ctxt.glyphScaling, 1.0 / ctxt.glyphScaling);\n    canvasCtxt.translate(-x, -y);\n  }\n\n  getSvgAttributes(ctxt, source) {\n    let className = \"\";\n    if (/^Porrectus\\d$/.test(this.glyphCode)) {\n      let notes = source.neume.notes,\n        noteIndex = notes.indexOf(source),\n        nextNote = notes[noteIndex + 1];\n      className = source.selected\n        ? nextNote.selected\n          ? \"selected\"\n          : \"selectedA\"\n        : nextNote.selected\n        ? \"selectedB\"\n        : \"\";\n    } else {\n      let isSelected =\n        source && (source.selected || (source.model && source.model.selected));\n      className = isSelected ? \"selected\" : \"\";\n    }\n    var result = {\n      \"xlink:href\": \"#\" + this.glyphCode,\n      class: className\n    };\n    if (source) {\n      result[\"source-index\"] = source.sourceIndex;\n      result[\"element-index\"] = source.elementIndex;\n      if ('noteIndex' in source) {\n        result.class += ' note';\n        result.id = ctxt.noteIdPrefix + (source.noteIndex + 1);\n        if (source.neume) {\n          const glyphCode = source.glyphVisualizer.glyphCode;\n          if (/^Porrectus/.test(glyphCode)) {\n            result.class += ' porrectus porrectus-start';\n          } else if (glyphCode === 'None') {\n            result.class += ' porrectus porrectus-end';\n          }\n        }\n      }\n    }\n    if (ctxt.scaleDefs === true) {\n      result.x = this.bounds.x + this.origin.x;\n      result.y = this.bounds.y + this.origin.y;\n    } else {\n      result.x = (this.bounds.x + this.origin.x) / ctxt.glyphScaling;\n      result.y = (this.bounds.y + this.origin.y) / ctxt.glyphScaling;\n      result.transform = \"scale(\" + ctxt.glyphScaling + \")\";\n    }\n    return result;\n  }\n\n  createSvgNode(ctxt, source) {\n    var attributes = this.getSvgAttributes(ctxt, source);\n    attributes.source = source;\n    return QuickSvg.createNode(\"use\", attributes);\n  }\n  createSvgTree(ctxt, source) {\n    var attributes = this.getSvgAttributes(ctxt, source);\n    if (source) attributes.source = source;\n    return QuickSvg.createSvgTree(\"use\", attributes);\n  }\n\n  createSvgFragment(ctxt, source) {\n    return QuickSvg.createFragment(\"use\", this.getSvgAttributes(ctxt, source));\n  }\n}\n\nexport class RoundBraceVisualizer extends ChantLayoutElement {\n  constructor(ctxt, x1, x2, y, isAbove) {\n    super();\n\n    if (x1 > x2) {\n      // swap the xs\n      var temp = x1;\n      x1 = x2;\n      x2 = temp;\n    }\n\n    this.isAbove = isAbove;\n    this.braceHeight = (3 * ctxt.staffInterval) / 2;\n\n    this.bounds = new Rect(\n      x1,\n      isAbove ? y - this.braceHeight : y,\n      x2 - x1,\n      this.braceHeight\n    );\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  getSvgPathProps(ctxt) {\n    return {\n      d: this.generatePathString(),\n      stroke: ctxt.neumeLineColor,\n      \"stroke-width\": ctxt.staffLineWeight + \"px\",\n      fill: \"none\",\n      class: \"brace\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    var node = QuickSvg.createNode(\"path\", this.getSvgPathProps(ctxt));\n    if (this.accent) {\n      return QuickSvg.createNode(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        [node, this.accent.createSvgNode(ctxt)]\n      );\n    } else return node;\n  }\n  createSvgTree(ctxt) {\n    var node = QuickSvg.createSvgTree(\"path\", this.getSvgPathProps(ctxt));\n    if (this.accent) {\n      return QuickSvg.createSvgTree(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        node,\n        this.accent.createSvgTree(ctxt)\n      );\n    } else return node;\n  }\n\n  createSvgFragment(ctxt) {\n    var fragment = QuickSvg.createFragment(\"path\", this.getSvgPathProps(ctxt));\n\n    if (this.accent) {\n      fragment += this.accent.createSvgFragment(ctxt);\n\n      return QuickSvg.createFragment(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        fragment\n      );\n    } else return fragment;\n  }\n\n  // returns svg path d string\n  generatePathString() {\n    var x1 = this.bounds.x;\n    var x2 = this.bounds.right();\n    var width = this.bounds.width;\n    var y, dx, dy;\n\n    dx = width / 6;\n    dy = this.bounds.height;\n    if (this.isAbove) {\n      y = this.bounds.bottom();\n      dy = -dy;\n    } else {\n      y = this.bounds.y;\n    }\n\n    //Calculate Control Points of path,\n    var cx1 = x1 + dx;\n    var cy = y + dy;\n    var cx2 = x2 - dx;\n\n    // two decimal points should be enough, but if we need more precision, we can\n    // up it here.\n    var dp = 2;\n    return (\n      \"M \" +\n      x1.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp) +\n      \" C \" +\n      cx1.toFixed(dp) +\n      \" \" +\n      cy.toFixed(dp) +\n      \" \" +\n      cx2.toFixed(dp) +\n      \" \" +\n      cy.toFixed(dp) +\n      \" \" +\n      x2.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp)\n    );\n  }\n}\n\nexport class CurlyBraceVisualizer extends ChantLayoutElement {\n  constructor(ctxt, x1, x2, y, isAbove = true, addAcuteAccent = false) {\n    super();\n\n    if (x1 > x2) {\n      // swap the xs\n      var temp = x1;\n      x1 = x2;\n      x2 = temp;\n    }\n\n    this.isAbove = isAbove;\n    this.braceHeight = ctxt.staffInterval / 2;\n\n    // y is the actual vertical start of the brace (left hand side)\n    // thus for a brace over notes, bounds.y is the bottom of brace,\n    // but for a brace under the notes, y is simply the y passed in.\n    if (isAbove) y -= this.braceHeight;\n\n    var bounds = new Rect(x1, y, x2 - x1, this.braceHeight);\n\n    if (addAcuteAccent && isAbove) {\n      this.accent = new GlyphVisualizer(ctxt, GlyphCode.AcuteAccent);\n      this.accent.bounds.x += bounds.x + (x2 - x1) / 2;\n      this.accent.bounds.y += bounds.y - ctxt.staffInterval / 4;\n\n      bounds.union(this.accent.bounds);\n    }\n\n    this.bounds = bounds;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  getSvgPathProps(ctxt) {\n    return {\n      d: this.generatePathString(),\n      stroke: ctxt.neumeLineColor,\n      \"stroke-width\": ctxt.staffLineWeight + \"px\",\n      fill: \"none\",\n      class: \"brace\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    var node = QuickSvg.createNode(\"path\", this.getSvgPathProps(ctxt));\n\n    if (this.accent) {\n      return QuickSvg.createNode(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        [node, this.accent.createSvgNode(ctxt)]\n      );\n    } else return node;\n  }\n  createSvgTree(ctxt) {\n    var node = QuickSvg.createSvgTree(\"path\", this.getSvgPathProps(ctxt));\n    if (this.accent) {\n      return QuickSvg.createSvgTree(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        node,\n        this.accent.createSvgTree(ctxt)\n      );\n    } else return node;\n  }\n\n  createSvgFragment(ctxt) {\n    var fragment = QuickSvg.createFragment(\"path\", this.getSvgPathProps(ctxt));\n\n    if (this.accent) {\n      fragment += this.accent.createSvgFragment(ctxt);\n\n      return QuickSvg.createFragment(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        fragment\n      );\n    } else return fragment;\n  }\n\n  // code below inspired by: https://gist.github.com/alexhornbake\n  // optimized for braces that are only drawn horizontally.\n  // returns svg path d string\n  generatePathString() {\n    var q = 0.6; // .5 is normal, higher q = more expressive bracket\n\n    var x1 = this.bounds.x;\n    var x2 = this.bounds.right();\n    var width = this.bounds.width;\n    var y, h;\n\n    if (this.isAbove) {\n      y = this.bounds.bottom();\n      h = -this.braceHeight;\n    } else {\n      y = this.bounds.y;\n      h = this.braceHeight;\n    }\n\n    // calculate Control Points of path\n    var qy1 = y + q * h;\n    var qx2 = x1 + 0.25 * width;\n    var qy2 = y + (1 - q) * h;\n    var tx1 = x1 + 0.5 * width;\n    var ty1 = y + h;\n    var qy3 = y + q * h;\n    var qx4 = x1 + 0.75 * width;\n    var qy4 = y + (1 - q) * h;\n\n    // two decimal points should be enough, but if we need more precision, we can\n    // up it here.\n    var dp = 2;\n    return (\n      \"M \" +\n      x1.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp) +\n      \" Q \" +\n      x1.toFixed(dp) +\n      \" \" +\n      qy1.toFixed(dp) +\n      \" \" +\n      qx2.toFixed(dp) +\n      \" \" +\n      qy2.toFixed(dp) +\n      \" T \" +\n      tx1.toFixed(dp) +\n      \" \" +\n      ty1.toFixed(dp) +\n      \" M \" +\n      x2.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp) +\n      \" Q \" +\n      x2.toFixed(dp) +\n      \" \" +\n      qy3.toFixed(dp) +\n      \" \" +\n      qx4.toFixed(dp) +\n      \" \" +\n      qy4.toFixed(dp) +\n      \" T \" +\n      tx1.toFixed(dp) +\n      \" \" +\n      ty1.toFixed(dp)\n    );\n  }\n}\n\nexport class TextSpan {\n  constructor(text, propertyArray, activeTags, index = 0, extraProps) {\n    if (typeof propertyArray === \"undefined\" || propertyArray === null)\n      propertyArray = [];\n\n    this.text = text;\n    this.propertyArray = propertyArray;\n    this.activeTags = activeTags || [];\n    this.index = index;\n    if (extraProps) {\n      if ('xOffset' in extraProps) this.xOffset = extraProps.xOffset;\n      if ('newLine' in extraProps) this.newLine = extraProps.newLine;\n    }\n  }\n\n  get properties() {\n    const result = Object.assign.apply(null, [{}].concat(this.propertyArray).concat());\n    if ('xOffset' in this) result.xOffset = this.xOffset;\n    if ('newLine' in this) result.newLine = this.newLine;\n    return result;\n  }\n\n  clone() {\n    const result = new TextSpan(\n      this.text,\n      this.propertyArray,\n      this.activeTags,\n      this.index\n    );\n    if ('xOffset' in this) result.xOffset = this.xOffset;\n    if ('newLine' in this) result.newLine = this.newLine;\n    return result;\n  }\n}\n\nclass MarkupStackFrame {\n  constructor(tagName, startIndex, propertyArray = [], symbol) {\n    this.tagName = tagName;\n    this.startIndex = startIndex;\n    this.propertyArray = propertyArray;\n    if (symbol) this.symbol = symbol;\n  }\n\n  get properties() {\n    return Object.assign.apply(null, [{}].concat(this.propertyArray));\n  }\n\n  static createStackFrame(ctxt, tagName, startIndex, extraProperties = {}, symbol = '') {\n    return new MarkupStackFrame(\n      tagName,\n      startIndex,\n      [ctxt.fontStyleDictionary[tagName], extraProperties],\n      symbol\n    );\n  }\n}\n\n// for escaping html strings before they go into the svgs\n// adapted from http://stackoverflow.com/a/12034334/5720160\nvar __subsForTspans = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\"\n};\n\nexport class TextElement extends ChantLayoutElement {\n  constructor(\n    ctxt,\n    text,\n    fontFamily,\n    fontSize,\n    textAnchor,\n    sourceIndex,\n    sourceGabc\n  ) {\n    super();\n\n    // set these to some sane values for now...\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n    this.bounds.width = 0;\n    this.bounds.height = 0;\n    this.origin.x = 0;\n    this.origin.y = 0;\n\n    this.fontFamily = fontFamily;\n    this.fontSize = fontSize;\n    this.textAnchor = textAnchor;\n    this.sourceIndex = sourceIndex;\n    this.sourceGabc = sourceGabc;\n    this.dominantBaseline = \"baseline\"; // default placement\n\n    this.generateSpansFromText(ctxt, text);\n\n    this.recalculateMetrics(ctxt);\n  }\n\n  getFromScore(score) {\n    return this.textType.getFromScore(score, this);\n  }\n\n  generateSpansFromText(ctxt, text) {\n    text = text.replace(/\\s+/g, \" \");\n    this.text = \"\";\n    this.spans = [];\n\n    // save ourselves a lot of grief for a very common text:\n    if (text === \"*\" || text === \"+\" || text === \"†\") {\n      let properties =\n        text === \"*\"\n          ? [ctxt.asteriskProperties]\n          : text === \"+\"\n          ? [ctxt.plusProperties]\n          : null;\n      text = ctxt.specialCharText(text) || text;\n      this.spans.push(new TextSpan(text, properties));\n      return;\n    }\n\n    var markupStack = [];\n    var spanStartIndex = 0;\n    var newLineInNextSpan = 0;\n\n    var filterFrames = (frame, symbol) => frame.Symbol === symbol;\n\n    var closeSpan = (spanText, index, extraProperties) => {\n      if (spanText === \"\" && !this.dropCap) return;\n\n      this.text += spanText;\n\n      var properties = [];\n      for (var i = 0; i < markupStack.length; i++) {\n        properties.push.apply(properties, markupStack[i].propertyArray);\n      }\n\n      if (extraProperties) properties.push(extraProperties);\n      const span = new TextSpan(\n        spanText,\n        properties,\n        markupStack.map((frame) => frame.tagName),\n        index\n      );\n      this.spans.push(span);\n      if (newLineInNextSpan) {\n        span.newLine = newLineInNextSpan;\n        newLineInNextSpan = 0;\n      }\n\n    };\n\n    var markupRegex = /(<br\\/?>)|<v>([\\s\\S]*?)(?:<\\/v>|$)|(\\*)(?=\\s*\\*|[^*]*(?:$|<v>))|(\\+)|<sp>(?:(~)|(')?([ao]e|[æœaeiouy])|([arv])\\/)<\\/sp>|([arv])\\/\\.|([℣℟])\\.?|(?:([*_^%])|<(\\/)?([bciuv]|ul|sc|font)(?:\\s+(?:family=\"([^\"]+)\"|fill=\"([^\"]+)\"|class=\"([^\"]+)\"))*>)(?=(?:(.+?)(?:\\11|<\\/\\13>))?)/gi;\n    var vTagRegex = /(\\\\grecross)|\\{greextra\\}\\{([^}]*)\\}/g;\n    var match = null;\n    var openedAsterisk = false;\n    var closeCurrentSpan = () =>\n      closeSpan(text.substring(spanStartIndex, match.index), spanStartIndex);\n    while ((match = markupRegex.exec(text))) {\n      var [\n        ,\n        newLine,\n        vTag,\n        asterisk,\n        plus,\n        tilde,\n        accent,\n        vowelLigature,\n        specialChar,\n        specialChar2,\n        specialChar3,\n        markupSymbol,\n        closingTag,\n        tagName,\n        family,\n        fill,\n        cssClass,\n        enclosedText\n      ] = match;\n      specialChar = specialChar || specialChar2 || specialChar3;\n      // non-matching symbols first\n      if (newLine) {\n        // close the current span, if any:\n        if (match.index > spanStartIndex) {\n          closeCurrentSpan();\n        }\n        // add the newline span:\n        newLineInNextSpan++;\n      } else if (vTag) {\n        closeCurrentSpan();\n        let vMatch;\n        let lastIndex = 0;\n        let iOffset = 0;\n        while ((vMatch = vTagRegex.exec(vTag))) {\n          if (lastIndex < vMatch.index) {\n            closeSpan(vTag.slice(lastIndex, vMatch.index), match.index + lastIndex + iOffset);\n            iOffset = 3; // length of '<v>'\n          }\n          let [, grecross, greextra] = vMatch;\n          if (grecross) {\n            // grecross is just the command for the Cross:\n            // set up greextra so it will get handled with it below:\n            greextra = 'Cross';\n          }    \n          const char = greextraGlyphs[greextra];\n          if (char) {\n            closeSpan(char, match.index + vMatch.index + iOffset, { 'font-family': 'greextra' })\n          }\n          lastIndex = vTagRegex.lastIndex;\n          iOffset = 3; // length of '<v>'\n        }\n        if (lastIndex < vTag.length) {\n          closeSpan(vTag.slice(lastIndex), match.index + lastIndex + iOffset);\n        }\n      } else if (asterisk) {\n        closeCurrentSpan();\n        // first check if it is just a symbol to close:\n        if (\n          markupStack.length > 0 &&\n          markupStack[markupStack.length - 1].symbol === asterisk\n        ) {\n          // close asterisk tag\n          markupStack.pop();\n        } else {\n          // add special asterisk:\n          closeSpan(ctxt.specialCharText(asterisk) || '*', match.index, ctxt.asteriskProperties);\n        }\n      } else if (plus) {\n        closeCurrentSpan();\n        closeSpan(ctxt.specialCharText(plus) || '+', match.index, ctxt.plusProperties);\n      } else if (tilde) {\n        closeCurrentSpan();\n        closeSpan('∼', match.index);\n      } else if (vowelLigature) {\n        let vowel = makeLigature(vowelLigature);\n        if (accent) vowel = addAccent(vowel);\n        closeCurrentSpan();\n        closeSpan(vowel, match.index);\n      } else if (specialChar) {\n        closeCurrentSpan();\n        closeSpan(\n          ctxt.textBeforeSpecialChar +\n            ctxt.specialCharText(specialChar) +\n            ctxt.textAfterSpecialChar,\n          match.index,\n          ctxt.specialCharProperties\n        );\n      } else {\n        // otherwise we're dealing with matching markup delimeters\n        if (markupSymbol === \"*\") {\n          // we are only strict with the asterisk, because there are cases when it needs to be displayed rather than count as a markup symbol\n          if (enclosedText && /[^\\s*]/.test(enclosedText)) {\n            openedAsterisk = true;\n          } else if (openedAsterisk) {\n            openedAsterisk = false;\n          } else {\n            // actually use the asterisk, since it doesn't have a matching closing asterisk\n            continue;\n          }\n        }\n        if (markupSymbol) {\n          tagName = ctxt.markupSymbolDictionary[markupSymbol];\n          if (\n            markupStack.length > 0 &&\n            markupStack[markupStack.length - 1].tagName === tagName &&\n            markupStack[markupStack.length - 1].symbol === markupSymbol\n          ) {\n            closingTag = true;\n          }\n        }\n        if (\n          markupStack.length > 0 &&\n          markupStack[markupStack.length - 1].tagName === tagName\n        ) {\n          if (closingTag) {\n            // group close\n            closeCurrentSpan();\n            markupStack.pop();\n          }\n        } else if (markupStack.filter(filterFrames).length > 0) {\n          // trying to open a recursive group (or forgot to close a previous group)\n          // in either case, we just unwind to the previous stack frame\n          spanStartIndex = markupStack[markupStack.length - 1].startIndex;\n          markupStack.pop();\n          continue;\n        } else {\n          closeCurrentSpan();\n          if (closingTag) {\n            // out of order group close:\n            let index = markupStack.findIndex(\n              (frame) => frame.tagName === tagName\n            );\n            if (index >= 0) {\n              markupStack.splice(index, 1);\n            }\n          } else {\n            // group open\n            const extraProperties = {};\n            if (family) extraProperties['font-family'] = family;\n            if (fill) extraProperties.fill = fill;\n            if (cssClass) extraProperties.class = cssClass;\n            markupStack.push(\n              MarkupStackFrame.createStackFrame(ctxt, tagName, match.index, extraProperties, markupSymbol)\n            );\n          }\n        }\n      }\n\n      // advance the start index past the current markup\n      spanStartIndex = match.index + match[0].length;\n    }\n\n    // if we finished matches, and there is still some text left,\n    // or if we haven't generated any spans yet, create one final run\n    if (spanStartIndex < text.length || this.spans.length === 0)\n      closeSpan(text.slice(spanStartIndex), spanStartIndex);\n  }\n\n  getCanvasFontForProperties(ctxt, properties = {}) {\n    var font = \"\";\n    if (properties[\"font-style\"] === \"italic\") font += \"italic \";\n    if (properties[\"font-variant\"] === \"small-caps\") font += \"small-caps \";\n    if (properties[\"font-weight\"] === \"bold\") font += \"bold \";\n    let fontSize = parseFloat(properties[\"font-size\"]) || this.fontSize(ctxt);\n    if (/%$/.test(properties[\"font-size\"])) {\n      fontSize *= this.fontSize(ctxt) / 100;\n    }\n    font += `${fontSize * (this.resize || 1)}px `;\n    font += properties[\"font-family\"] || this.fontFamily(ctxt);\n    return font;\n  }\n\n  measureSubstringBBox(ctxt, length) {\n    return this.measureSubstring(ctxt, length, true);\n  }\n\n  // if length is undefined and this.rightAligned === true, then offsets will be marked for each newLine span\n  measureSubstring(ctxt, length, returnBBox = false) {\n    if (length === 0) return 0;\n    if (!length) length = Infinity;\n    if (length < 0) {\n      var lines = -length;\n      length = Infinity;\n    }\n    var canvasCtxt = ctxt.canvasCtxt;\n    var width = 0;\n    var widths = [];\n    var newLineSpans = [this.spans[0]];\n    var subStringLength = 0;\n    var numLines = 1;\n    var fontSize = this.fontSize(ctxt) * (this.resize || 1);\n    var bbox = new Rect(0, 0, 0, 0);\n    for (var i = 0; i < this.spans.length; i++) {\n      var span = this.spans[i],\n        myText = span.text.slice(0, length - subStringLength);\n      if (span.newLine) {\n        numLines += parseInt(span.newLine) || 1;\n        if (!lines && this.rightAligned === true && length === Infinity) {\n          newLineSpans[newLineSpans.length - 1].xOffset =\n            this.firstLineMaxWidth - width;\n          newLineSpans.push(span);\n        } else if (--lines === 0) break;\n        widths.push(width);\n        width = 0;\n      }\n      if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Canvas) {\n        canvasCtxt.font = this.getCanvasFontForProperties(\n          ctxt,\n          span.properties\n        );\n        let metrics = canvasCtxt.measureText(\n          myText,\n          width,\n          fontSize * (numLines - 1)\n        );\n        if (\"actualBoundingBoxAscent\" in metrics) {\n          let left = metrics.actualBoundingBoxLeft;\n          bbox.union(\n            new Rect(\n              width - left,\n              fontSize * (numLines - 1) - metrics.actualBoundingBoxAscent,\n              metrics.width + left,\n              metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent\n            )\n          );\n          if (this instanceof DropCap) {\n            width += Math.max(0, left);\n          }\n        } else {\n          bbox.union(\n            new Rect(width, fontSize * (numLines - 2), metrics.width, fontSize)\n          );\n        }\n        width += metrics.width;\n      } else if (\n        ctxt.textMeasuringStrategy === TextMeasuringStrategy.OpenTypeJS &&\n        ctxt.fontDictionary\n      ) {\n        // get the bounding box for the substring, placing it at x = width, y = fontSize * (numLines - 1)\n        let font = ctxt.getFontForProperties(\n          span.properties,\n          span.properties[\"font-family\"] || this.fontFamily(ctxt)\n        );\n        let options = { features: { liga: true } };\n        if (span.properties[\"font-variant\"] === \"small-caps\") {\n          options.features.smcp = true;\n        }\n        let spanFontSize = parseFloat(span.properties[\"font-size\"]) || fontSize;\n        if (/%$/.test(span.properties[\"font-size\"])) {\n          spanFontSize *= fontSize / 100;\n        }\n        let subBbox = font\n          .getPath(\n            myText,\n            width,\n            fontSize * (numLines - 1),\n            spanFontSize,\n            options\n          )\n          .getBoundingBox();\n        let subWidth = font.getAdvanceWidth(myText, spanFontSize, options);\n\n        bbox.union(\n          new Rect(\n            width + subBbox.x1,\n            subBbox.y1,\n            subWidth - subBbox.x1,\n            subBbox.y2 - subBbox.y1\n          )\n        );\n        width += subWidth;\n        if (this instanceof DropCap) {\n          width -= subBbox.x1;\n        }\n      }\n      subStringLength += myText.length;\n      if (subStringLength === length) break;\n    }\n    if (\n      !lines &&\n      width &&\n      newLineSpans.length &&\n      this.rightAligned === true &&\n      length === Infinity\n    ) {\n      newLineSpans[newLineSpans.length - 1].xOffset =\n        this.firstLineMaxWidth - width;\n    }\n    width = Math.max(width, ...widths);\n    if (returnBBox === true) {\n      let height = bbox.height;\n      let y = bbox.y,\n        x = bbox.x;\n      return { width, height, x, y };\n    } else {\n      return width;\n    }\n  }\n\n  recalculateMetrics(ctxt, resetNewLines = true) {\n    if (resetNewLines) {\n      delete this.maxWidth;\n      delete this.firstLineMaxWidth;\n      delete this.rightAligned;\n      delete this.resize;\n      delete this.numLines;\n      // replace newlines with spaces\n      this.spans.forEach((span) => {\n        delete span.xOffset;\n        if (span.newLine === true) {\n          delete span.newLine;\n          span.text = \" \" + span.text;\n        }\n      });\n    }\n\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n\n    this.origin.x = 0;\n\n    if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n      while (ctxt.svgTextMeasurer.firstChild)\n        ctxt.svgTextMeasurer.removeChild(ctxt.svgTextMeasurer.firstChild);\n      ctxt.svgTextMeasurer.appendChild(this.createSvgNode(ctxt));\n      ctxt.svgTextMeasurer.appendChild(ctxt.createStyleNode());\n\n      var bbox = ctxt.svgTextMeasurer.firstChild.getBBox();\n      this.bounds.width = bbox.width;\n      this.bounds.height = bbox.height;\n      this.origin.y = -bbox.y; // offset to baseline from top\n      this.origin.x = -bbox.x;\n    } else {\n      let bbox = this.measureSubstringBBox(ctxt);\n      this.bounds.width = bbox.width;\n      this.bounds.height = bbox.height;\n      this.origin.y = -bbox.y;\n      this.origin.x = -bbox.x;\n    }\n    this.numLines = this.spans.reduce(\n      (result, span) =>\n        result +\n        (span.newLine ? parseInt(span.newLine) || 1 : 0),\n      1\n    );\n  }\n\n  setMaxWidth(ctxt, maxWidth, firstLineMaxWidth = maxWidth) {\n    if (this.spans.filter((s) => s.newLine === true).length) {\n      // first get rid of any new lines set from a previous maxWidth\n      this.recalculateMetrics(ctxt);\n    }\n    if (this.bounds.width > maxWidth) {\n      this.maxWidth = maxWidth;\n      var percentage = maxWidth / this.bounds.width;\n      if (this instanceof Lyric && percentage >= 0.85) {\n        this.resize = percentage;\n      } else {\n        if (firstLineMaxWidth < 0) firstLineMaxWidth = maxWidth;\n        this.firstLineMaxWidth = firstLineMaxWidth;\n        var lastWidth = 0,\n          lastMatch = null,\n          regex = /\\s+|$/g,\n          max = firstLineMaxWidth,\n          match;\n        while (\n          (match = regex.exec(this.text)) &&\n          (!lastMatch || match.index > lastMatch.index)\n        ) {\n          var width = this.measureSubstring(ctxt, match.index);\n          if (width > max && lastMatch) {\n            var spanIndex = 0,\n              length = 0;\n            while (length < lastMatch.index && spanIndex < this.spans.length) {\n              let span = this.spans[spanIndex++];\n              length += span.text.length + (span.newLine ? 1 : 0);\n            }\n            if (length > lastMatch.index) {\n              let span = this.spans[--spanIndex];\n              length -= span.text.length;\n            }\n            var splitSpan = this.spans[spanIndex],\n              textLeft = splitSpan.text.slice(0, lastMatch.index - length),\n              textRight = splitSpan.text.slice(\n                lastMatch.index + lastMatch[0].length - length\n              ),\n              newSpans = [];\n            this.rightAligned =\n              max === firstLineMaxWidth && firstLineMaxWidth !== maxWidth;\n            if (textLeft)\n              newSpans.push(\n                new TextSpan(\n                  textLeft,\n                  splitSpan.propertyArray,\n                  splitSpan.activeTags\n                )\n              );\n            if (textRight) {\n              newSpans.push(\n                new TextSpan(\n                  textRight,\n                  splitSpan.propertyArray,\n                  splitSpan.activeTags,\n                  undefined,\n                  { newLine: true }\n                )\n              );\n            } else if (this.spans[spanIndex + 1]) {\n              this.spans[spanIndex + 1].newLine = true;\n            }\n            this.spans.splice(spanIndex, 1, ...newSpans);\n            this.needsLayout = true;\n            max = maxWidth;\n            if (\n              match.index === this.text.length ||\n              this.measureSubstring(ctxt) <= maxWidth\n            )\n              break;\n            width = 0;\n            match = lastMatch = null;\n          }\n          lastWidth = width;\n          lastMatch = match;\n        }\n      }\n      this.recalculateMetrics(ctxt, false);\n    }\n  }\n\n  getCssClasses() {\n    return (this.textType && this.textType.cssClass) || \"\";\n  }\n\n  getExtraStyleProperties(ctxt) {\n    return ctxt.baseTextStyle || {};\n  }\n\n  static escapeForTspan(string) {\n    return String(string).replace(/[&<>]/g, function (s) {\n      return __subsForTspans[s];\n    });\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    if (this.textAnchor === \"middle\") canvasCtxt.textAlign = \"center\";\n    else canvasCtxt.textAlign = \"start\";\n\n    var translateWidth = 0,\n      translateHeight = 0;\n    for (var i = 0; i < this.spans.length; i++) {\n      var span = this.spans[i];\n      var xOffset = span.xOffset || 0;\n      if (span.newLine) {\n        count = parseInt(span.newLine) || 1;\n        canvasCtxt.translate(\n          translateWidth + xOffset,\n          this.fontSize(ctxt) * count\n        );\n        translateWidth = -xOffset;\n        translateHeight -= this.fontSize(ctxt);\n      } else if (xOffset) {\n        canvasCtxt.translate(translateWidth + xOffset, 0);\n        translateWidth = -xOffset;\n      }\n      var properties = Object.assign(\n        {},\n        this.getExtraStyleProperties(ctxt),\n        span.properties\n      );\n      canvasCtxt.font = this.getCanvasFontForProperties(ctxt, properties);\n      canvasCtxt.fillStyle = properties.fill || \"#000\";\n      canvasCtxt.fillText(\n        span.text,\n        this.bounds.x,\n        this.bounds.y,\n        span.textLength || undefined\n      );\n      var metrics = canvasCtxt.measureText(\n        span.text,\n        this.bounds.x,\n        this.bounds.y\n      );\n      translateWidth -= metrics.width;\n      canvasCtxt.translate(metrics.width, 0);\n    }\n    canvasCtxt.translate(translateWidth, translateHeight);\n  }\n\n  getSvgProps() {\n    return {\n      \"source-index\": this.sourceIndex,\n      x: this.bounds.x,\n      y: this.bounds.y,\n      class: this.getCssClasses().trim(),\n      \"text-anchor\": this.textAnchor\n      //'dominant-baseline': this.dominantBaseline, // hanging baseline doesn't work in Safari\n    };\n  }\n\n  getSpanOptions(span, ctxt, useStyleObject = false) {\n    var options = {\n      \"source-index\": span.index,\n      class: span.properties.class,\n      style: useStyleObject\n        ? Object.assign({}, span.properties)\n        : getCssForProperties(span.properties)\n    };\n\n    if (span.newLine) {\n      var xOffset = span.xOffset || 0;\n      options.dy = 1.1 * (parseInt(span.newLine) || 1) + \"em\";\n      options.x = this.bounds.x + xOffset;\n    } else if (span.xOffset) {\n      options.x = this.bounds.x + span.xOffset;\n    }\n    if (span.textLength) {\n      options.textLength = span.textLength;\n      options.lengthAdjust = \"spacingAndGlyphs\";\n      options.y = this.bounds.y;\n    }\n    if (this.resize) {\n      options[\"font-size\"] =\n        span.properties[\"font-size\"] || this.fontSize(ctxt) * this.resize;\n    }\n    // if (ctxt.setFontFamilyAttributes) {\n    //   options[\"font-family\"] =\n    //     span.properties[\"font-family\"] ||\n    //     getFontFilenameForProperties(span.properties, this.fontFamily(ctxt));\n    //   let properties = Object.assign({}, span.properties);\n    //   delete properties[\"font-weight\"];\n    //   delete properties[\"font-style\"];\n    //   options[\"style\"] = getCssForProperties(properties);\n    // } else {\n    //   options[\"style\"] = getCssForProperties(span.properties);\n    // }\n\n    return options;\n  }\n\n  createSvgNode(ctxt) {\n    var spans = [];\n\n    for (var i = 0; i < this.spans.length; i++) {\n      let span = this.spans[i];\n      let options = this.getSpanOptions(span, ctxt);\n\n      spans.push(QuickSvg.createNode(\"tspan\", options, span.text));\n    }\n\n    let options = this.getSvgProps();\n    const extraStyleProperties = this.getExtraStyleProperties(ctxt);\n    options.style = getCssForProperties(extraStyleProperties);\n    if (extraStyleProperties.class) {\n      options.class = extraStyleProperties.class + ' ' + options.class;\n    }\n    options.source = this;\n\n    return (this.svgNode = QuickSvg.createNode(\"text\", options, spans));\n  }\n  createSvgTree(ctxt) {\n    var spans = [];\n\n    for (var i = 0; i < this.spans.length; i++) {\n      let span = this.spans[i];\n      let options = this.getSpanOptions(span, ctxt, true);\n\n      spans.push(QuickSvg.createSvgTree(\"tspan\", options, span.text));\n    }\n\n    let options = this.getSvgProps();\n    options.style = this.getExtraStyleProperties(ctxt);\n    if (options.style.class) {\n      options.class = options.style.class + ' ' + options.class;\n    }\n    options.source = this;\n\n    return QuickSvg.createSvgTree(\"text\", options, ...spans);\n  }\n\n  createSvgFragment(ctxt) {\n    var spans = \"\";\n\n    for (var i = 0; i < this.spans.length; i++) {\n      let span = this.spans[i];\n      let options = this.getSpanOptions(span, ctxt);\n\n      spans += QuickSvg.createFragment(\n        \"tspan\",\n        options,\n        TextElement.escapeForTspan(span.text)\n      );\n    }\n\n    let options = this.getSvgProps();\n    const extraStyleProperties = this.getExtraStyleProperties(ctxt)\n    options.style = getCssForProperties(extraStyleProperties);\n    if (extraStyleProperties.class) {\n      options.class = extraStyleProperties.class + ' ' + options.class;\n    }\n    if (ctxt.setFontFamilyAttributes) {\n      options[\"font-size\"] = this.fontSize(ctxt);\n    }\n\n    return QuickSvg.createFragment(\"text\", options, spans);\n  }\n}\n\nexport var LyricType = {\n  SingleSyllable: 0,\n  BeginningSyllable: 1,\n  MiddleSyllable: 2,\n  EndingSyllable: 3,\n\n  Directive: 4 // for asterisks, \"ij.\" elements, or other performance notes.\n};\n\nexport var LyricArray = {\n  getLeft: function (lyricArray) {\n    if (lyricArray.length === 0) return NaN;\n\n    var x = Number.MAX_VALUE;\n    for (var i = 0; i < lyricArray.length; i++) {\n      if (lyricArray[i])\n        x = Math.min(\n          x,\n          lyricArray[i].notation.bounds.x + lyricArray[i].bounds.x\n        );\n    }\n\n    return x;\n  },\n\n  getRight: function (lyricArray, presumeConnectorNeeded) {\n    if (lyricArray.length === 0) return NaN;\n\n    var x = Number.MIN_VALUE;\n    for (var i = 0; i < lyricArray.length; i++) {\n      let l = lyricArray[i];\n      if (l)\n        x = Math.max(\n          x,\n          l.notation.bounds.x +\n            l.bounds.x +\n            l.bounds.width +\n            (presumeConnectorNeeded && l.allowsConnector() && !l.needsConnector\n              ? l.getConnectorWidth()\n              : 0)\n        );\n    }\n\n    return x;\n  },\n\n  hasOnlyOneLyric: function (lyricArray) {\n    return lyricArray.filter((l) => l.originalText).length === 1;\n  },\n\n  indexOfLyric: function (lyricArray) {\n    return lyricArray.indexOf(lyricArray.filter((l) => l.originalText)[0]);\n  },\n\n  mergeIn: function (lyricArray, newLyrics) {\n    for (var i = 0; i < newLyrics.length; ++i) {\n      if (newLyrics[i].originalText || !lyricArray[i])\n        lyricArray[i] = newLyrics[i];\n    }\n  },\n\n  mergeInArray: function (lyricArray, notations) {\n    for (var i = 0; i < notations.length; ++i) {\n      this.mergeIn(lyricArray, notations[i].lyrics);\n    }\n  },\n\n  setNotation: function (lyricArray, notation) {\n    notation.lyrics = lyricArray;\n    for (var i = 0; i < lyricArray.length; ++i) {\n      lyricArray[i].notation = notation;\n    }\n  }\n};\n\nexport class Lyric extends TextElement {\n  constructor(ctxt, text, lyricType, notation, notations, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.lyric.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.lyric.font,\n      (ctxt) => ctxt.textStyles.lyric.size,\n      \"start\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.lyric;\n\n    // save the original text in case we need to later use the lyric\n    // in a dropcap...\n    this.originalText = text;\n\n    this.notation = notation;\n    this.notations = notations;\n\n    if (\n      typeof lyricType === \"undefined\" ||\n      lyricType === null ||\n      lyricType === \"\"\n    )\n      this.lyricType = LyricType.SingleSyllable;\n    else this.lyricType = lyricType;\n\n    // Lyrics keep track of how to center them on notation elements.\n    // centerTextIndex is the index in this.text where the centering starts,\n    // centerLength is how many characters comprise the center point.\n    // performLayout will do the processing\n    this.centerStartIndex = -1;\n    this.centerLength = text.length;\n\n    this.needsConnector = false;\n\n    // Lyrics can have their own language defined, which affects the alignment\n    // of the text with the notation element\n    this.language = null;\n\n    if (this.allowsConnector)\n      this.connectorSpan = new TextSpan(ctxt.syllableConnector);\n  }\n\n  allowsConnector() {\n    return (\n      this.lyricType === LyricType.BeginningSyllable ||\n      this.lyricType === LyricType.MiddleSyllable\n    );\n  }\n\n  setForceConnector(force) {\n    this.forceConnector = force && this.allowsConnector();\n  }\n\n  setNeedsConnector(needs, width) {\n    if (needs === true || this.forceConnector) {\n      this.needsConnector = true;\n      if (typeof width !== \"undefined\") {\n        this.setConnectorWidth(width);\n      } else {\n        this.bounds.width =\n          this.widthWithoutConnector + this.getConnectorWidth();\n      }\n\n      if (\n        this.spans.length > 0 &&\n        this.spans[this.spans.length - 1] !== this.connectorSpan\n      )\n        this.spans.push(this.connectorSpan);\n    } else {\n      this.connectorWidth = 0;\n      this.needsConnector = false;\n      this.bounds.width = this.widthWithoutConnector;\n\n      var span = this.spans.pop();\n      if (span && span !== this.connectorSpan) this.spans.push(span);\n    }\n  }\n\n  setConnectorWidth(width) {\n    this.connectorWidth = width;\n    this.connectorSpan.textLength = width;\n    if (this.needsConnector)\n      this.bounds.width = this.widthWithoutConnector + this.getConnectorWidth();\n  }\n\n  getConnectorWidth() {\n    return this.connectorWidth || this.defaultConnectorWidth;\n  }\n\n  getLeft() {\n    return this.notation.bounds.x + this.bounds.x;\n  }\n\n  getRight() {\n    return this.notation.bounds.x + this.bounds.x + this.bounds.width;\n  }\n\n  recalculateMetrics(ctxt, resetNewLines = true) {\n    this.setNeedsConnector();\n\n    super.recalculateMetrics(ctxt, resetNewLines);\n\n    this.widthWithoutConnector = this.bounds.width;\n\n    this.connectorWidth = 0;\n    this.defaultConnectorWidth = ctxt.hyphenWidth;\n\n    var activeLanguage = this.language || ctxt.defaultLanguage;\n\n    // calculate the point where the text lines up to the staff notation\n    // and offset the rect that much. By default we just center the text,\n    // but the logic below allows for smarter lyric alignment based\n    // on manual override or language control.\n    var offset = this.widthWithoutConnector / 2,\n      x1,\n      x2,\n      vowelSegmentWidth = this.widthWithoutConnector;\n\n    // some simple checks for sanity, and disable manual centering if the numbers are bad\n    if (\n      this.centerStartIndex >= 0 &&\n      (this.centerStartIndex >= this.text.length ||\n        this.centerLength < 0 ||\n        this.centerStartIndex + this.centerLength > this.text.length)\n    )\n      this.centerStartIndex = -1;\n\n    if (this.text.length === 0) {\n      // if we have no text to work with, then there's nothing to do!\n      // Unless it's a drop cap, in which case we center the connector:\n      if (this.dropCap && this.originalText) {\n        offset = ctxt.hyphenWidth / 2;\n        vowelSegmentWidth = ctxt.hyphenWidth;\n      }\n    } else if (this.centerStartIndex >= 0) {\n      // if we have manually overriden the centering logic for this lyric,\n      // then always use that.\n      if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n        // svgTextMeasurer still has the current lyric in it...\n        x1 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n          0,\n          this.centerStartIndex\n        );\n        x2 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n          0,\n          this.centerStartIndex + this.centerLength\n        );\n      } else {\n        x1 = this.measureSubstring(ctxt, this.centerStartIndex);\n        x2 = this.measureSubstring(\n          ctxt,\n          this.centerStartIndex + this.centerLength\n        );\n      }\n      offset = (x1 + x2) / 2;\n      vowelSegmentWidth = x2 - x1;\n    } else {\n      // if it's a directive with no manual centering override, then\n      // just center the text.\n      if (this.lyricType !== LyricType.Directive) {\n        // only consider text content after the last space (if any)\n        var startIndex = this.text.lastIndexOf(\" \") + 1;\n\n        // unless there are no text characters following the space:\n        if (\n          startIndex > 0 &&\n          !this.text\n            .slice(startIndex)\n            .match(/[a-záéíóúýäëïöüÿàèìòùỳāēīōūȳăĕĭŏŭ]/i)\n        ) {\n          startIndex = 0;\n        }\n\n        // Non-directive elements are lined up to the chant notation based on vowel segments,\n        var result = activeLanguage.findVowelSegment(this.text, startIndex);\n\n        if (result.found !== true) {\n          var match = this.text.slice(startIndex).match(/[a-z]+/i);\n          if (match) {\n            result.startIndex = startIndex + match.index;\n            result.length = match[0].length;\n          } else {\n            result.startIndex = startIndex;\n            result.length = this.text.length - startIndex;\n          }\n        }\n        if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n          // svgTextMeasurer still has the current lyric in it...\n          x1 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n            0,\n            result.startIndex\n          );\n          x2 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n            0,\n            result.startIndex + result.length\n          );\n        } else {\n          x1 = this.measureSubstring(ctxt, result.startIndex);\n          x2 = this.measureSubstring(ctxt, result.startIndex + result.length);\n        }\n        offset = (x1 + x2) / 2;\n        vowelSegmentWidth = x2 - x1;\n      }\n    }\n\n    this.vowelSegmentWidth = vowelSegmentWidth;\n\n    this.bounds.x = -offset;\n    this.bounds.y = 0;\n\n    this.origin.x = offset;\n  }\n\n  generateDropCap(ctxt) {\n    if (this.dropCap) return this.dropCap;\n    // disallow special characters:\n    if (this.spans[0].properties['font-family'] === ctxt.specialCharProperties['font-family']) {\n      return null;\n    }\n    let dropCapSpan = this.spans[0].clone();\n    dropCapSpan.text = dropCapSpan.text.slice(0, 1).toUpperCase();\n    let dropCapLowerCase = dropCapSpan.text.toLowerCase();\n    // disallow any characters that do not change from .toUpperCase():\n    if (dropCapSpan.text === dropCapLowerCase) return null;\n\n    if (dropCapSpan.activeTags.indexOf(\"sc\") >= 0)\n      dropCapSpan.text = dropCapLowerCase;\n\n    var dropCap = (this.dropCap = new DropCap(ctxt, \"\", this.sourceIndex));\n    dropCap.spans = [dropCapSpan];\n    let dropCapSourceGabcLength = this.sourceGabc.match(\n      /^(?:<\\/?[^>]>)*.?(?:<\\/[^>]>)*/\n    )[0].length;\n    dropCap.sourceGabc = this.sourceGabc.slice(0, dropCapSourceGabcLength);\n    this.sourceIndex += dropCap.sourceGabc.length;\n    this.sourceGabc = this.sourceGabc.slice(dropCapSourceGabcLength);\n\n    this.spans[0].text = this.spans[0].text.slice(1);\n    this.text = this.text.slice(1);\n    this.centerStartIndex--; // lost a letter, so adjust centering accordingly\n\n    return dropCap;\n  }\n\n  getCssClasses() {\n    var classes = this.lyricType === LyricType.Directive ? \"directive \" : \"\";\n\n    return classes + super.getCssClasses();\n  }\n\n  getExtraStyleProperties(ctxt) {\n    var props = super.getExtraStyleProperties(ctxt);\n\n    if (this.lyricType === LyricType.Directive && ctxt.autoColor === true)\n      props = Object.assign({}, props, { fill: ctxt.rubricColor });\n\n    return props;\n  }\n}\n\nexport class ChoralSign extends TextElement {\n  constructor(ctxt, text, note, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.choralSign.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.choralSign.font,\n      TextTypes.choralSign.size,\n      \"start\",\n      sourceIndex,\n      text\n    );\n    this.positionHint = MarkingPositionHint.Default;\n    this.note = note;\n    this.textType = TextTypes.choralSign;\n  }\n\n  recalculateMetrics(ctxt) {\n    super.recalculateMetrics(ctxt);\n  }\n\n  performLayout(ctxt) {\n    this.recalculateMetrics(ctxt);\n    this.bounds.x =\n      this.note.bounds.x +\n      Math.max(0, (ctxt.staffInterval - this.bounds.width) / 2); // center on the note itself\n\n    let offset, staffPosition;\n    if (this.positionHint === MarkingPositionHint.Below) {\n      offset = -1;\n      staffPosition = this.note.staffPosition + 2 * offset;\n      staffPosition += staffPosition % 2 === 0 ? 0.3 : 1;\n    } else {\n      offset = 1;\n      staffPosition = this.note.staffPosition + 2 * offset;\n      staffPosition += staffPosition % 2 === 0 ? 0.3 : -0.4;\n    }\n    // if (staffPosition % 2 === 0) staffPosition += offset;\n    this.bounds.y =\n      ctxt.calculateHeightFromStaffPosition(staffPosition) + this.origin.y;\n  }\n}\n\nexport class AboveLinesText extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text, notation, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.al.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.al.font,\n      (ctxt) => ctxt.textStyles.al.size,\n      \"start\",\n      sourceIndex,\n      text\n    );\n    this.notation = notation;\n    this.textType = TextTypes.al;\n\n    this.padding = ctxt.staffInterval / 2;\n  }\n}\n\nexport class TranslationText extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text, notation, sourceIndex) {\n    var gabcSource = text;\n    var anchor = \"start\";\n    if (text === \"/\") {\n      text = \"\";\n      anchor = \"end\";\n    } else {\n      text = (ctxt.textStyles.translation.prefix || \"\") + text;\n    }\n    super(\n      ctxt,\n      text,\n      (ctxt) => ctxt.textStyles.translation.font,\n      (ctxt) => ctxt.textStyles.translation.size,\n      anchor,\n      sourceIndex,\n      gabcSource\n    );\n    this.notation = notation;\n    this.textType = TextTypes.translation;\n\n    this.padding = ctxt.staffInterval / 2;\n  }\n}\n\nexport class DropCap extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.dropCap.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.dropCap.font,\n      (ctxt) => ctxt.textStyles.dropCap.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.dropCap;\n\n    this.padding = ctxt.staffInterval * ctxt.textStyles.dropCap.padding;\n  }\n}\n\nexport class TitleTextElement extends TextElement {\n  constructor(\n    ctxt,\n    text,\n    fontFamily,\n    fontSize,\n    textAnchor,\n    sourceIndex,\n    sourceGabc\n  ) {\n    super(\n      ctxt,\n      text,\n      fontFamily,\n      fontSize,\n      textAnchor,\n      sourceIndex,\n      sourceGabc\n    );\n  }\n}\n\nexport class Supertitle extends TitleTextElement {\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.supertitle.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.supertitle.font,\n      (ctxt) => ctxt.textStyles.supertitle.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.supertitle;\n\n    this.padding = (ctxt) => (\n      (Number(ctxt.textStyles.supertitle.padding) || 1) * ctxt.textStyles.supertitle.size / 3\n    );\n  }\n}\n\nexport class Title extends TitleTextElement {\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.title.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.title.font,\n      (ctxt) => ctxt.textStyles.title.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.title;\n\n    this.padding = (ctxt) => (\n      (Number(ctxt.textStyles.title.padding) || 1) * ctxt.textStyles.title.size / 3\n    );\n  }\n}\n\nexport class Subtitle extends TitleTextElement {\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.subtitle.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.subtitle.font,\n      (ctxt) => ctxt.textStyles.subtitle.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.subtitle;\n\n    this.padding = (ctxt) => (\n      (Number(ctxt.textStyles.subtitle.padding) || 1) * ctxt.textStyles.subtitle.size / 3\n    );\n  }\n}\n\nexport class TextLeftRight extends TitleTextElement {\n  constructor(ctxt, text, type, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.leftRight.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.leftRight.font,\n      (ctxt) => ctxt.textStyles.leftRight.size,\n      type === \"textLeft\" ? \"start\" : \"end\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.leftRight;\n    this.extraClass = type === \"textLeft\" ? \"textLeft\" : \"textRight\";\n    this.headerKey = type === \"textLeft\" ? \"text-left\" : \"text-right\";\n    this.padding = (ctxt) => (\n      (Number(ctxt.textStyles.leftRight.padding) || 1) * ctxt.textStyles.leftRight.size / 5\n    );\n  }\n\n  getCssClasses() {\n    return this.extraClass + \" \" + super.getCssClasses();\n  }\n}\n\nexport class Annotation extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text) {\n    super(\n      ctxt,\n      (ctxt.textStyles.annotation.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.annotation.font,\n      (ctxt) => ctxt.textStyles.annotation.size,\n      \"middle\"\n    );\n    this.textType = TextTypes.annotation;\n    this.padding = ctxt.staffInterval * ctxt.textStyles.annotation.padding;\n    this.dominantBaseline = \"hanging\"; // so that annotations can be aligned at the top.\n  }\n}\n\nexport class Annotations extends ChantLayoutElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, ...texts) {\n    super();\n\n    this.lineHeight = 1.1;\n    this.annotations = texts.map(function (text) {\n      return new Annotation(ctxt, text);\n    });\n    this.padding = Math.max.apply(\n      null,\n      this.annotations.map(function (annotation) {\n        return annotation.padding;\n      })\n    );\n  }\n\n  updateBounds(multiplier) {\n    if (!multiplier) multiplier = 1;\n    for (var i = 0; i < this.annotations.length; ++i) {\n      var annotation = this.annotations[i];\n      annotation.bounds.x += this.bounds.x * multiplier;\n      annotation.bounds.y += this.bounds.y * multiplier;\n    }\n  }\n\n  recalculateMetrics(ctxt) {\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n\n    this.bounds.width = 0;\n    this.bounds.height = 0;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n\n    let y = 0;\n    for (var i = 0; i < this.annotations.length; ++i) {\n      var annotation = this.annotations[i];\n      annotation.recalculateMetrics(ctxt);\n      this.bounds.width = Math.max(this.bounds.width, annotation.bounds.width);\n      annotation.bounds.y += y;\n      this.bounds.height = annotation.bounds.bottom();\n      this.origin.y = this.origin.y || annotation.origin.y;\n      y += annotation.fontSize(ctxt) * (annotation.resize || 1) * this.lineHeight;\n    }\n  }\n\n  draw(ctxt) {\n    this.updateBounds();\n    this.annotations.forEach(function (annotation) {\n      annotation.draw(ctxt);\n    });\n    this.updateBounds(-1);\n  }\n\n  createSvgNode(ctxt) {\n    this.updateBounds();\n    var result = this.annotations.map(function (annotation) {\n      return annotation.createSvgNode(ctxt);\n    });\n    this.updateBounds(-1);\n    return result;\n  }\n  createSvgTree(ctxt) {\n    this.updateBounds();\n    var result = this.annotations.map(function (annotation) {\n      return annotation.createSvgTree(ctxt);\n    });\n    this.updateBounds(-1);\n    return { children: result };\n  }\n\n  createSvgFragment(ctxt) {\n    this.updateBounds();\n    var result = this.annotations\n      .map(function (annotation) {\n        return annotation.createSvgFragment(ctxt);\n      })\n      .join(\"\");\n    this.updateBounds(-1);\n    return result;\n  }\n}\n\nexport class ChantNotationElement extends ChantLayoutElement {\n  constructor() {\n    super();\n\n    //double\n    this.leadingSpace = 0.0;\n    this.trailingSpace = DefaultTrailingSpace;\n    this.keepWithNext = false;\n    this.needsLayout = true;\n\n    this.lyrics = [];\n\n    this.score = null; // the ChantScore\n    this.line = null; // the ChantLine\n\n    this.visualizers = [];\n  }\n\n  hasLyrics() {\n    return this.lyrics.length !== 0;\n  }\n\n  getAllLyricsLeft() {\n    if (this.lyrics.length === 0) return this.bounds.right();\n\n    var x = Number.MAX_VALUE;\n    for (var i = 0; i < this.lyrics.length; i++) {\n      if (this.lyrics[i]) x = Math.min(x, this.lyrics[i].bounds.x);\n    }\n\n    return this.bounds.x + x;\n  }\n\n  getAllLyricsRight() {\n    if (this.lyrics.length === 0) return this.bounds.x;\n\n    var x = Number.MIN_VALUE;\n    for (var i = 0; i < this.lyrics.length; i++) {\n      if (this.lyrics[i])\n        x = Math.max(x, this.lyrics[i].bounds.x + this.lyrics[i].bounds.width);\n    }\n\n    return this.bounds.x + x;\n  }\n\n  // used by subclasses while building up the chant notations.\n  addVisualizer(chantLayoutElement) {\n    if (!chantLayoutElement.ignoreBounds) {\n      if (this.bounds.isEmpty())\n        this.bounds = chantLayoutElement.bounds.clone();\n      else this.bounds.union(chantLayoutElement.bounds);\n    }\n\n    this.visualizers.push(chantLayoutElement);\n  }\n\n  // same as addVisualizer, except the element is unshifted to the front\n  // of the visualizer array rather than the end. This way, some\n  // visualizers can be placed behind the others...ledger lines for example.\n  prependVisualizer(chantLayoutElement) {\n    if (this.bounds.isEmpty()) this.bounds = chantLayoutElement.bounds.clone();\n    else this.bounds.union(chantLayoutElement.bounds);\n\n    this.visualizers.unshift(chantLayoutElement);\n  }\n\n  // chant notation elements are given an opportunity to perform their layout via this function.\n  // subclasses should call this function first in overrides of this function.\n  // on completion, exsurge presumes that the bounds, the origin, and the fragment objects are\n  // all valid and prepared for higher level layout.\n  performLayout(ctxt) {\n    if (typeof this.trailingSpace === \"function\")\n      this.calculatedTrailingSpace = this.trailingSpace(ctxt);\n    else this.calculatedTrailingSpace = this.trailingSpace;\n\n    // reset the bounds and the staff notations before doing a layout\n    this.visualizers = [];\n    this.bounds = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this.lyrics.length; i++)\n      this.lyrics[i].recalculateMetrics(ctxt);\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++)\n        this.alText[i].recalculateMetrics(ctxt);\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        this.translationText[i].recalculateMetrics(ctxt);\n  }\n\n  // some subclasses have internal dependencies on other notations (for example,\n  // a custos can depend on a later neume which it uses to set its height).\n  // subclasses can override this function so that when the notations are\n  // altered, the subclass can correctly invalidate (and later restore) its own\n  // depedencies\n  resetDependencies() {}\n\n  // a helper function for subclasses to call after they are done performing layout...\n  finishLayout(ctxt) {\n    this.bounds.x = 0;\n\n    let language =\n      (this.lyrics[0] && this.lyrics[0].language) || ctxt.defaultLanguage;\n    // center the neume itself over the syllable, or just the first punctum\n    // if the neume is wider than the syllable + the width of a punctum, we always revert to centering just over the punctum\n    let calculateLyricX = language.centerNeume\n      ? (lyric) =>\n          (lyric.bounds.x =\n            this.bounds.width + ctxt.staffInterval < lyric.vowelSegmentWidth\n              ? this.bounds.width / 2 - lyric.origin.x\n              : this.origin.x - lyric.origin.x)\n      : (lyric) => (lyric.bounds.x = this.origin.x - lyric.origin.x);\n    this.lyrics.forEach(calculateLyricX);\n\n    this.needsLayout = false;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n    canvasCtxt.translate(this.bounds.x, 0);\n\n    for (var i = 0; i < this.visualizers.length; i++)\n      this.visualizers[i].draw(ctxt);\n\n    for (i = 0; i < this.lyrics.length; i++) this.lyrics[i].draw(ctxt);\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        this.translationText[i].draw(ctxt);\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++) this.alText[i].draw(ctxt);\n\n    canvasCtxt.translate(-this.bounds.x, 0);\n  }\n\n  getInnerSvgNodes(ctxt, functionName = \"createSvgNode\") {\n    var inner = [];\n\n    for (i = 0; i < this.lyrics.length; i++)\n      inner.push(this.lyrics[i][functionName](ctxt));\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        inner.push(this.translationText[i][functionName](ctxt));\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++)\n        inner.push(this.alText[i][functionName](ctxt));\n\n    if (this.visualizers.length) {\n      let visualizers = [];\n      for (var i = 0; i < this.visualizers.length; i++)\n        visualizers.push(this.visualizers[i][functionName](ctxt, this));\n\n      if (functionName === \"createSvgTree\") {\n        inner.push(\n          QuickSvg.createSvgTree(\"g\", { class: \"Notations\" }, ...visualizers)\n        );\n      } else {\n        inner.push(\n          QuickSvg.createNode(\"g\", { class: \"Notations\" }, visualizers)\n        );\n      }\n    }\n    return inner;\n  }\n\n  getSvgProps() {\n    return {\n      // this.constructor.name will not be the same after being mangled by UglifyJS\n      class: \"ChantNotationElement \" + this.constructor.name,\n      transform: \"translate(\" + this.bounds.x + \",\" + 0 + \")\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    var inner = this.getInnerSvgNodes(ctxt, \"createSvgNode\");\n    var svgProps = this.getSvgProps();\n    svgProps.source = this;\n    return QuickSvg.createNode(\"g\", svgProps, inner);\n  }\n  createSvgTree(ctxt) {\n    var inner = this.getInnerSvgNodes(ctxt, \"createSvgTree\");\n    var svgProps = this.getSvgProps();\n    svgProps.source = this;\n    return QuickSvg.createSvgTree(\"g\", svgProps, ...inner);\n  }\n\n  createSvgFragment(ctxt) {\n    var inner = \"\";\n\n    for (i = 0; i < this.lyrics.length; i++)\n      inner += this.lyrics[i].createSvgFragment(ctxt);\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        inner += this.translationText[i].createSvgFragment(ctxt);\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++)\n        inner += this.alText[i].createSvgFragment(ctxt);\n\n    for (var i = 0; i < this.visualizers.length; i++)\n      inner += this.visualizers[i].createSvgFragment(ctxt, this);\n\n    return QuickSvg.createFragment(\"g\", this.getSvgProps(), inner);\n  }\n}\n\nconst __connectorSpan = new TextSpan(\" • \");\nconst __mergeAnnotationWithTextLeft = (...annotationSpans) =>\n    annotationSpans.reduce((result, spans) => {\n      if (result && result.length) {\n        if (spans && spans.length) return result.concat(__connectorSpan, spans);\n        else return result;\n      } else if (spans && spans.length) {\n        return spans;\n      }\n      return [];\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Drawing.js","export const addAccent = (vowel) =>\n  ({\n    \"Æ\": \"Ǽ\",\n    \"Œ\": \"Œ́\",\n    \"A\": \"Á\",\n    \"E\": \"É\",\n    \"I\": \"Í\",\n    \"O\": \"Ó\",\n    \"U\": \"Ú\",\n    \"Y\": \"Ý\",\n    \"æ\": \"ǽ\",\n    \"œ\": \"œ́\",\n    \"a\": \"á\",\n    \"e\": \"é\",\n    \"i\": \"í\",\n    \"o\": \"ó\",\n    \"u\": \"ú\",\n    \"y\": \"ý\"\n  }[vowel] || vowel);\n\n\n\n// WEBPACK FOOTER //\n// ./src/addAccent.js","export const makeLigature = (vowels) =>\n  ({\n    AE: \"Æ\",\n    Ae: \"Æ\",\n    ae: \"æ\",\n    OE: \"Œ\",\n    Oe: \"Œ\",\n    oe: \"œ\"\n  }[vowels] || vowels);\n\n\n\n// WEBPACK FOOTER //\n// ./src/makeLigature.js","export const greextraGlyphs = {\n  MedicaeaFlat: \"\",\n  HufnagelCustosUpShort: \"\",\n  HufnagelCustosUpLong: \"\",\n  HufnagelCustosUpMedium: \"\",\n  HufnagelCustosDownShort: \"\",\n  HufnagelCustosDownLong: \"\",\n  HufnagelCustosDownMedium: \"\",\n  MedicaeaCustosUpShort: \"\",\n  MedicaeaCustosUpLong: \"\",\n  MedicaeaCustosUpMedium: \"\",\n  MedicaeaCustosDownShort: \"\",\n  MedicaeaCustosDownLong: \"\",\n  MedicaeaCustosDownMedium: \"\",\n  MensuralCustosUpShort: \"\",\n  MensuralCustosUpLong: \"\",\n  MensuralCustosUpMedium: \"\",\n  MensuralCustosDownShort: \"\",\n  MensuralCustosDownLong: \"\",\n  MensuralCustosDownMedium: \"\",\n  MensuralFlat: \"\",\n  HufnagelFlat: \"\",\n  MedicaeaCClef: \"\",\n  MedicaeaCClefChange: \"\",\n  MedicaeaFClef: \"\",\n  MedicaeaFClefChange: \"\",\n  HufnagelCClef: \"\",\n  HufnagelCClefChange: \"\",\n  HufnagelFClef: \"\",\n  HufnagelFClefChange: \"\",\n  HugnagelCFClef: \"\",\n  HufnagelCFClefChange: \"\",\n  MensuralFlatHole: \"\",\n  HufnagelFlatHole: \"\",\n  MedicaeaFlatHole: \"\",\n  StarSix: \"\",\n  Dagger: \"\",\n  \"Bar.alt\": \"\",\n  StarHeight: \"\",\n  Cross: \"\",\n  \"RBar.alt\": \"\",\n  \"VBar.alt\": \"\",\n  Drawing1: \"\",\n  Drawing2: \"\",\n  RWithBarGoth: \"\",\n  VWithBarGoth: \"\",\n  Line1: \"\",\n  Line2: \"\",\n  Line3: \"\",\n  Line4: \"\",\n  Line5: \"\",\n  \"Cross.alt\": \"\",\n  ABarCaption: \"\",\n  RBarCaption: \"\",\n  VBarCaption: \"\",\n  ABarCaptionSC: \"\",\n  RBarCaptionSC: \"\",\n  VBarCaptionSC: \"\",\n  ABar: \"\",\n  RBar: \"\",\n  VBar: \"\",\n  ABarSC: \"\",\n  RBarSC: \"\",\n  VBarSC: \"\",\n  ABarSmall: \"\",\n  RBarSmall: \"\",\n  VBarSmall: \"\",\n  ABarSmallSC: \"\",\n  RBarSmallSC: \"\",\n  VBarSmallSC: \"\",\n  \"RBar.alt2\": \"\",\n  \"VBar.alt2\": \"\",\n  ABarCaptionSlant: \"\",\n  RBarCaptionSlant: \"\",\n  VBarCaptionSlant: \"\",\n  ABarSlant: \"\",\n  RBarSlant: \"\",\n  VBarSlant: \"\",\n  ABarSmallSlant: \"\",\n  RBarSmallSlant: \"\",\n  VBarSmallSlant: \"\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/greextraGlyphs.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { ChantLine } from \"./Exsurge.Chant.ChantLine.js\";\nimport { InsertionCursor } from \"./Exsurge.Chant.Signs.js\";\nimport { Pitch, Rect, Step } from \"./Exsurge.Core.js\";\nimport {\n  Annotation, ChantLayoutElement,\n  ChantNotationElement,\n  GlyphCode,\n  GlyphVisualizer, QuickSvg, TextLeftRight,\n  TextSpan\n} from \"./Exsurge.Drawing.js\";\nimport { Gabc } from \"./Exsurge.Gabc.js\";\nimport { Titles } from \"./Exsurge.Titles.js\";\n\nexport var LiquescentType = {\n  None: 0,\n\n  // flags that can be combined, though of course it\n  // it doesn't make sense to combine some!\n  Large: 1 << 0,\n  Small: 1 << 1,\n  Ascending: 1 << 2,\n  Descending: 1 << 3,\n  InitioDebilis: 1 << 4,\n\n  // handy liquescent types\n  LargeAscending: (1 << 0) | (1 << 2),\n  LargeDescending: (1 << 0) | (1 << 3),\n  SmallAscending: (1 << 1) | (1 << 2),\n  SmallDescending: (1 << 1) | (1 << 3)\n};\n\nexport var NoteShape = {\n  // shapes\n  Default: 0,\n  Virga: 1,\n  Inclinatum: 2,\n  Quilisma: 3,\n  Stropha: 4,\n  Oriscus: 5\n};\n\nexport var NoteShapeModifiers = {\n  // flags which modify the shape\n  // not all of them apply to every shape of course\n  None: 0,\n  Ascending: 1 << 0,\n  Descending: 1 << 1,\n  Cavum: 1 << 2,\n  Stemmed: 1 << 3,\n  Linea: 1 << 4,\n  Reverse: 1 << 5\n};\n\n/**\n * @class\n */\nexport class Note extends ChantLayoutElement {\n  /**\n   * @para {Pitch} pitch\n   */\n  constructor(pitch) {\n    super();\n\n    if (typeof pitch !== \"undefined\") this.pitch = pitch;\n    else this.pitch = null;\n\n    this.glyphVisualizer = null;\n\n    // The staffPosition on a note is an integer that indicates the vertical position on the staff.\n    // 0 is the center space on the staff (equivalent to gabc 'g'). Positive numbers go up\n    // the staff, and negative numbers go down, i.e., 1 is gabc 'h', 2 is gabc 'i', -1 is gabc 'f', etc.\n    this.staffPosition = 0;\n    this.liquescent = LiquescentType.None;\n    this.shape = NoteShape.Default;\n    this.shapeModifiers = NoteShapeModifiers.None;\n\n    // notes keep track of the neume they belong to in order to facilitate layout\n    // this.neume gets set when a note is added to a neume via Neume.addNote()\n    this.neume = null;\n\n    // various markings that can exist on a note, organized by type\n    // for faster access and simpler code logic\n    this.episemata = [];\n    this.morae = []; // silly to have an array of these, but gabc allows multiple morae per note!\n\n    // these are set on the note when they are needed, otherwise, they're undefined\n    // this.ictus\n    // this.accuteAccent\n    // this.braceStart\n    // this.braceEnd\n  }\n\n  setGlyph(ctxt, glyphCode) {\n    if (this.glyphVisualizer) this.glyphVisualizer.setGlyph(ctxt, glyphCode);\n    else this.glyphVisualizer = new GlyphVisualizer(ctxt, glyphCode);\n\n    this.glyphVisualizer.setStaffPosition(ctxt, this.staffPosition);\n\n    // assign glyphvisualizer metrics to this note\n    this.bounds.x = this.glyphVisualizer.bounds.x;\n    this.bounds.y = this.glyphVisualizer.bounds.y;\n    this.bounds.width = this.glyphVisualizer.bounds.width;\n    this.bounds.height = this.glyphVisualizer.bounds.height;\n\n    this.origin.x = this.glyphVisualizer.origin.x;\n    this.origin.y = this.glyphVisualizer.origin.y;\n  }\n\n  // a utility function for modifiers\n  shapeModifierMatches(shapeModifier) {\n    if (shapeModifier === NoteShapeModifiers.None)\n      return this.shapeModifier === NoteShapeModifiers.None;\n    else return this.shapeModifier & (shapeModifier !== 0);\n  }\n\n  draw(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n\n    this.glyphVisualizer.draw(ctxt);\n  }\n\n  createSvgNode(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n    this.svgNode = this.glyphVisualizer.createSvgNode(ctxt, this);\n    return this.svgNode;\n  }\n  createSvgTree(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n    return this.glyphVisualizer.createSvgTree(ctxt, this);\n  }\n\n  createSvgFragment(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n    return this.glyphVisualizer.createSvgFragment(ctxt, this);\n  }\n}\n\nexport class Clef extends ChantNotationElement {\n  constructor(staffPosition, octave, defaultAccidental = null) {\n    super();\n\n    this.isClef = true;\n    this.staffPosition = staffPosition;\n    this.octave = octave;\n    this.defaultAccidental = defaultAccidental;\n    this.activeAccidental = defaultAccidental;\n    this.keepWithNext = true;\n  }\n\n  resetAccidentals() {\n    this.activeAccidental = this.defaultAccidental;\n  }\n\n  pitchToStaffPosition(pitch) {}\n\n  performLayout(ctxt) {\n    ctxt.activeClef = this;\n\n    if (this.defaultAccidental) this.defaultAccidental.performLayout(ctxt);\n\n    super.performLayout(ctxt);\n  }\n\n  finishLayout(ctxt) {\n    // if we have a default accidental, then add a glyph for it now\n    if (this.defaultAccidental) {\n      var accidentalGlyph = this.defaultAccidental.createGlyphVisualizer(ctxt);\n      accidentalGlyph.bounds.x +=\n        this.visualizers[0].bounds.right() + ctxt.intraNeumeSpacing;\n      this.addVisualizer(accidentalGlyph);\n    }\n\n    super.finishLayout(ctxt);\n  }\n\n  static default() {\n    return __defaultDoClef;\n  }\n\n  clone() {\n    if (this.model) return this.model.clone();\n    let clone = new this.constructor(\n      this.staffPosition,\n      this.octave,\n      this.defaultAccidental\n    );\n    clone.sourceGabc = this.sourceGabc;\n    clone.sourceIndex = this.sourceIndex;\n    clone.elementIndex = this.elementIndex;\n    clone.model = this;\n    return clone;\n  }\n}\n\nexport class DoClef extends Clef {\n  constructor(staffPosition, octave, defaultAccidental = null) {\n    super(staffPosition, octave, defaultAccidental);\n\n    this.leadingSpace = 0.0;\n  }\n\n  pitchToStaffPosition(pitch) {\n    return (\n      (pitch.octave - this.octave) * 7 +\n      this.staffPosition +\n      Pitch.stepToStaffOffset(pitch.step) -\n      Pitch.stepToStaffOffset(Step.Do)\n    );\n  }\n\n  staffPositionToPitch(staffPosition) {\n    var offset = staffPosition - this.staffPosition;\n    var octaveOffset = Math.floor(offset / 7);\n\n    var step = Pitch.staffOffsetToStep(offset);\n\n    if (\n      this.activeAccidental &&\n      this.activeAccidental.staffPosition === staffPosition\n    )\n      step += this.activeAccidental.accidentalType;\n\n    return new Pitch(step, this.octave + octaveOffset);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.DoClef);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n    this.addVisualizer(glyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\nvar __defaultDoClef = new DoClef(3, 2);\n\nexport class FaClef extends Clef {\n  constructor(staffPosition, octave, defaultAccidental = null) {\n    super(staffPosition, octave, defaultAccidental);\n\n    this.octave = octave;\n\n    this.leadingSpace = 0;\n  }\n\n  pitchToStaffPosition(pitch) {\n    return (\n      (pitch.octave - this.octave) * 7 +\n      this.staffPosition +\n      Pitch.stepToStaffOffset(pitch.step) -\n      Pitch.stepToStaffOffset(Step.Fa)\n    );\n  }\n\n  staffPositionToPitch(staffPosition) {\n    var offset = staffPosition - this.staffPosition + 3; // + 3 because it's a fa clef (3 == offset from Do)\n    var octaveOffset = Math.floor(offset / 7);\n\n    var step = Pitch.staffOffsetToStep(offset);\n\n    if (\n      this.activeAccidental &&\n      this.activeAccidental.staffPosition === staffPosition\n    )\n      step += this.activeAccidental.accidentalType;\n\n    return new Pitch(step, this.octave + octaveOffset);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.FaClef);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n    this.addVisualizer(glyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * TextOnly\n */\nexport class TextOnly extends ChantNotationElement {\n  constructor(sourceIndex, sourceLength) {\n    super();\n    this.sourceIndex = sourceIndex;\n    this.sourceLength = sourceLength;\n    this.sourceGabc = \"\";\n    this.trailingSpace = 0;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    // add an empty glyph as a placeholder\n    this.addVisualizer(new GlyphVisualizer(ctxt, GlyphCode.None));\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n\n    this.finishLayout(ctxt);\n  }\n}\n\nexport class ChantLineBreak extends ChantNotationElement {\n  constructor(justify) {\n    super();\n    this.calculatedTrailingSpace = this.trailingSpace = 0;\n    this.justify = justify;\n  }\n\n  performLayout(ctxt) {\n    // reset the bounds before doing a layout\n    this.bounds = new Rect(0, 0, 0, 0);\n  }\n\n  clone() {\n    var lb = new ChantLineBreak();\n    lb.justify = this.justify;\n\n    return lb;\n  }\n}\n\n// a chant mapping is a lightweight format independent way of\n// tracking how a chant language (e.g., gabc) has been\n// mapped to exsurge notations.\nexport class ChantMapping {\n  // source can be any object type. in the case of gabc, source is a text\n  // string that maps to a gabc word (e.g.: \"no(g)bis(fg)\").\n  // notations is an array of ChantNotationElements\n  constructor(source, notations, sourceIndex) {\n    this.source = source;\n    this.notations = notations;\n    this.sourceIndex = sourceIndex;\n  }\n}\n\n/*\n * Score, document\n */\nexport class ChantScore {\n  // mappings is an array of ChantMappings.\n  constructor(ctxt, mappings = [], useDropCap) {\n    this.mappings = mappings;\n\n    this.lines = [];\n    this.notes = [];\n    if (ctxt) this.titles = new Titles(ctxt, this);\n\n    this.startingClef = null;\n\n    this.useDropCap = useDropCap;\n    this.dropCap = null;\n\n    this.annotation = null;\n\n    this.compiled = false;\n\n    this.autoColoring = true;\n    this.needsLayout = true;\n\n    // valid after chant lines are created...\n    this.bounds = new Rect();\n\n    if (ctxt) this.updateNotations(ctxt);\n  }\n\n  /**\n   * Make a copy of the score, only including the specified lines\n   * @param  {number} startLine starting index\n   * @param  {number} endLine   ending index\n   * @return {ChantScore}           the partial score\n   */\n  copyLines(startLine, endLine) {\n    let result = new ChantScore();\n    result.lines = this.lines.slice(startLine, endLine);\n    result.bounds = this.bounds.clone();\n    let lastLine = result.lines.slice(-1)[0];\n    result.bounds.height = lastLine.bounds.bottom() - lastLine.origin.y;\n    if (startLine === 0) {\n      result.titles = this.titles;\n      result.dropCap = this.dropCap;\n      result.annotation = this.annotation;\n    }\n    return result;\n  }\n\n  updateSelection(selection) {\n    this.selection = selection;\n    const elementSelection = (selection && selection.element) || {\n      indices: []\n    };\n    const selectedIndices = elementSelection.indices;\n    let insertion = elementSelection.insertion;\n    if (\n      !insertion &&\n      selectedIndices.length === 1 &&\n      this.notes[selectedIndices[0]] instanceof TextOnly\n    ) {\n      // if there is only one selection, and its a text only, it should display as an insertion cursor:\n      insertion = { afterElementIndex: selectedIndices[0] };\n    }\n    // update the selected elements so that they can be given a .selected class when rendered\n    for (let i = 0; i < this.notes.length; ++i) {\n      let element = this.notes[i];\n      element.selected = selectedIndices.includes(i);\n    }\n    (\n      this.startingClef.model || this.startingClef\n    ).selected = selectedIndices.includes(-1);\n    for (let i = 0; i < this.lines.length; ++i) {\n      this.lines[i].insertionCursor = null;\n    }\n    // update the insertion cursor, so it can be drawn on the correct system\n    this.insertionElement = null;\n    let insertionLine = null;\n    if (insertion) {\n      if (typeof insertion.chantLine === \"number\") {\n        insertionLine = this.lines[insertion.chantLine];\n        this.insertionElement = insertionLine.startingClef;\n        insertionLine.insertionCursor = new InsertionCursor();\n      } else if (typeof insertion.afterElementIndex === \"number\") {\n        this.insertionElement = this.notes[insertion.afterElementIndex];\n        if (!this.insertionElement) {\n          insertionLine = this.lines[0];\n          this.insertionElement = insertionLine.startingClef;\n        } else if (this.insertionElement.neume) {\n          this.insertionElement = this.insertionElement.neume;\n        }\n        if (!insertionLine) {\n          insertionLine = this.insertionElement.line || this.lines[this.lines.length - 1];\n        }\n        insertionLine.insertionCursor = new InsertionCursor();\n      }\n    }\n  }\n\n  updateNotations(ctxt) {\n    var i, j, mapping, notation;\n\n    // flatten all mappings into one array for N(0) access to notations\n    this.notations = [];\n    this.notes = [];\n    this.hasLyrics = false;\n    this.hasAboveLinesText = false;\n    this.hasTranslations = false;\n    const elementSelection = (this.selection && this.selection.element) || {\n      indices: []\n    };\n    const selectedIndices = elementSelection.indices;\n    let nonNoteElementCount = 0;\n\n    // find the starting clef...\n    // start with a default clef in case the notations don't provide one.\n    this.startingClef = null;\n\n    for (i = 0; i < this.mappings.length; i++) {\n      mapping = this.mappings[i];\n      for (j = 0; j < mapping.notations.length; j++) {\n        notation = mapping.notations[j];\n        notation.score = this;\n        notation.mapping = mapping;\n\n        if (!this.startingClef) {\n          if (notation.isNeume) {\n            this.startingClef = Clef.default();\n          } else if (notation.isClef) {\n            this.startingClef = notation;\n            continue;\n          }\n        }\n\n        notation.notationIndex = this.notations.push(notation) - 1;\n        if (!this.hasLyrics && notation.hasLyrics()) this.hasLyrics = true;\n        if (!this.hasAboveLinesText && notation.alText)\n          this.hasAboveLinesText = true;\n        if (!this.hasTranslations && notation.translationText)\n          this.hasTranslations = true;\n\n        // Update this.notes and find element indices:\n        let elements = notation.notes || [notation];\n        for (let element of elements) {\n          let elementIndex = (element.elementIndex =\n            this.notes.push(element) - 1);\n          if (element instanceof Note) {\n            element.noteIndex = elementIndex - nonNoteElementCount;\n          } else {\n            ++nonNoteElementCount;\n          }\n          \n          element.selected = selectedIndices.includes(elementIndex);\n        }\n      }\n    }\n\n    // if we've reached this far and we *still* don't have a clef, then there aren't even\n    // any neumes in the score. still, set the default clef just for good measure\n    if (!this.startingClef) this.startingClef = Clef.default();\n    this.startingClef.elementIndex = -1;\n\n    // update drop cap\n    if (this.useDropCap) this.recreateDropCap(ctxt);\n    else this.dropCap = null;\n\n    this.needsLayout = true;\n  }\n\n  recreateDropCap(ctxt) {\n    this.dropCap = null;\n\n    // find the first notation with lyrics to use\n    for (var i = 0; i < this.notations.length; i++) {\n      if (\n        this.notations[i].hasLyrics() &&\n        this.notations[i].lyrics[0] !== null &&\n        this.notations[i].lyrics[0].spans &&\n        this.notations[i].lyrics[0].spans.length\n      ) {\n        let notation = this.notations[i],\n          lyrics = notation.lyrics[0];\n        if (this.useDropCap) {\n          this.dropCap = lyrics.generateDropCap(ctxt);\n        } else {\n          lyrics.dropCap = null;\n          lyrics.generateSpansFromText(ctxt, lyrics.originalText);\n        }\n        notation.needsLayout = true;\n        return;\n      }\n    }\n  }\n\n  /**\n   * Shared layout initialization method for performLayout() and performLayoutAsync()\n   * @param  {ChantContext} ctxt\n   */\n  initializeLayout(ctxt) {\n    // setup the context\n    ctxt.activeClef = this.startingClef;\n    ctxt.notations = this.notations;\n    ctxt.currNotationIndex = 0;\n\n    if (this.dropCap) this.dropCap.recalculateMetrics(ctxt);\n\n    if (this.annotation) this.annotation.recalculateMetrics(ctxt);\n  }\n\n  // this is the the synchronous version of performLayout that\n  // process everything without yielding to any other workers/threads.\n  // good for server side processing or very small chant pieces.\n  performLayout(ctxt, force) {\n    if (!force && this.needsLayout === false) return; // nothing to do here!\n\n    ctxt.updateHyphenWidth();\n\n    this.initializeLayout(ctxt);\n\n    for (let i = 0; i < this.notations.length; i++) {\n      let notation = this.notations[i];\n      if (force || notation.needsLayout) {\n        ctxt.currNotationIndex = i;\n        notation.performLayout(ctxt);\n      }\n    }\n\n    this.needsLayout = false;\n  }\n\n  // for web applications, probably performLayoutAsync would be more\n  // apppropriate that the above performLayout, since it will process\n  // the notations without locking up the UI thread.\n  performLayoutAsync(ctxt, finishedCallback) {\n    if (this.needsLayout === false) {\n      if (finishedCallback) setTimeout(() => finishedCallback(), 0);\n\n      return; // nothing to do here!\n    }\n\n    if (ctxt.onFontLoaded) {\n      ctxt.onFontLoaded.push(() =>\n        this.performLayoutAsync(ctxt, finishedCallback)\n      );\n      return;\n    }\n\n    // check for sane value of hyphen width:\n    ctxt.updateHyphenWidth();\n    if (\n      !ctxt.hyphenWidth ||\n      ctxt.hyphenWidth / ctxt.textStyles.lyric.size > 0.6\n    ) {\n      setTimeout(() => {\n        this.performLayoutAsync(ctxt, finishedCallback);\n      }, 100);\n      return;\n    }\n\n    this.initializeLayout(ctxt);\n\n    setTimeout(() => this.layoutElementsAsync(ctxt, 0, finishedCallback), 0);\n  }\n\n  layoutElementsAsync(ctxt, index, finishedCallback) {\n    if (index >= this.notations.length) {\n      this.needsLayout = false;\n\n      if (finishedCallback) setTimeout(() => finishedCallback(), 0);\n\n      return;\n    }\n\n    if (index === 0) ctxt.activeClef = this.startingClef;\n\n    var timeout = new Date().getTime() + 50; // process for fifty milliseconds\n    do {\n      var notation = this.notations[index];\n      if (notation.needsLayout) {\n        ctxt.currNotationIndex = index;\n        notation.performLayout(ctxt);\n      }\n\n      index++;\n    } while (index < this.notations.length && new Date().getTime() < timeout);\n\n    // schedule the next block of processing\n    setTimeout(\n      () => this.layoutElementsAsync(ctxt, index, finishedCallback),\n      0\n    );\n  }\n\n  layoutChantLines(ctxt, width, finishedCallback) {\n    this.lines = [];\n\n    if (ctxt.mergeAnnotationWithTextLeft && this.annotation && !this.dropCap) {\n      let annotation = this.annotation,\n        annotationSpans = annotation.annotations\n          ? annotation.annotations.map((annotation) => annotation.spans)\n          : [annotation.spans];\n      this.overrideTextLeft = new TextLeftRight(ctxt, \"\", \"textLeft\");\n      if (ctxt.mapAnnotationSpansToTextLeft) {\n        annotationSpans = annotationSpans.map(ctxt.mapAnnotationSpansToTextLeft);\n      }\n      this.overrideTextLeft.spans = ctxt.mergeAnnotationWithTextLeft(\n        ...annotationSpans,\n        this.titles.textLeft && this.titles.textLeft.spans\n      );\n    } else {\n      this.overrideTextLeft = null;\n    }\n\n    var y = width > 0 ? this.titles.layoutTitles(ctxt, width) : 0;\n    var currIndex = 0;\n\n    ctxt.activeClef = this.startingClef;\n\n    var spaceBetweenSystems = ctxt.staffInterval * ctxt.spaceBetweenSystems;\n\n    do {\n      var line = new ChantLine(this);\n\n      line.buildFromChantNotationIndex(ctxt, currIndex, width);\n      currIndex = line.notationsStartIndex + line.numNotationsOnLine;\n      line.performLayout(ctxt);\n      line.elementIndex = this.lines.length;\n      this.lines.push(line);\n\n      line.bounds.y = -line.bounds.y + y;\n      y += line.bounds.height + spaceBetweenSystems;\n    } while (currIndex < this.notations.length);\n\n    var lastLine = this.lines[this.lines.length - 1];\n\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n    this.bounds.width = lastLine.bounds.width;\n    this.bounds.height = y - spaceBetweenSystems;\n\n    this.pages = [this];\n\n    if (this.selection) {\n      this.updateSelection(this.selection);\n    }\n\n    if (finishedCallback) finishedCallback(this);\n  }\n\n  paginate(height) {\n    if (!height) return;\n    this.pages = [];\n    let pageHeightOffset = 0,\n      startLineIndex = 0;\n    for (let i = 1; i < this.lines.length; ++i) {\n      let line = this.lines[i];\n      let pageHeight = line.bounds.bottom() - pageHeightOffset - line.origin.y;\n\n      if (pageHeight > height) {\n        // this line will be the first on the new page\n        this.pages.push(this.copyLines(startLineIndex, i));\n        startLineIndex = i;\n        pageHeightOffset = line.bounds.y - line.origin.y;\n        line.bounds.y = line.origin.y;\n      } else {\n        // not a new page yet...update the bounds:\n        line.bounds.y -= pageHeightOffset;\n      }\n    }\n    this.pages.push(this.copyLines(startLineIndex, this.lines.length));\n  }\n\n  draw(ctxt, scale = 1) {\n    ctxt.setCanvasSize(this.bounds.width, this.bounds.height, scale);\n\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.clearRect(0, 0, ctxt.canvas.width, ctxt.canvas.height);\n\n    canvasCtxt.translate(this.bounds.x, this.bounds.y);\n\n    if (this.titles) this.titles.draw(ctxt);\n\n    for (var i = 0; i < this.lines.length; i++) this.lines[i].draw(ctxt);\n\n    canvasCtxt.translate(-this.bounds.x, -this.bounds.y);\n  }\n\n  getSvgProps(ctxt, zoom) {\n    let width =\n        typeof zoom === \"number\"\n          ? zoom * this.bounds.width\n          : zoom\n          ? undefined\n          : this.bounds.width,\n      height = zoom ? undefined : this.bounds.height;\n\n    return {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      version: \"1.1\",\n      class: \"Exsurge ChantScore\" + (ctxt.editable ? \" EditableChantScore\" : \"\"),\n      width,\n      height,\n      viewBox: [0, 0, this.bounds.width, this.bounds.height].join(\" \")\n    };\n  }\n\n  createSvgNode(ctxt) {\n    // create defs section\n    var node = [ctxt.defsNode.cloneNode(true)];\n    node[0].appendChild(ctxt.createStyleNode());\n\n    if (this.titles) node.push(this.titles.createSvgNode(ctxt));\n\n    for (var i = 0; i < this.lines.length; i++)\n      node.push(this.lines[i].createSvgNode(ctxt));\n\n    node = QuickSvg.createNode(\"g\", {}, node);\n\n    node = QuickSvg.createNode(\"svg\", this.getSvgProps(ctxt), node);\n\n    node.source = this;\n    this.svg = node;\n\n    return node;\n  }\n\n  createSvgTree(ctxt, zoom) {\n    // create defs section\n    var node = [\n      QuickSvg.createSvgTree(\n        \"defs\",\n        {},\n        ...ctxt.makeDefs.map((makeDef) => makeDef.makeSvgTree()),\n        ctxt.createStyleTree()\n      )\n    ];\n\n    if (this.titles) node.push(this.titles.createSvgTree(ctxt));\n\n    for (var i = 0; i < this.lines.length; i++)\n      node.push(this.lines[i].createSvgTree(ctxt));\n\n    node = QuickSvg.createSvgTree(\"g\", {}, ...node);\n    let svgProps = this.getSvgProps(ctxt, zoom);\n    svgProps.source = this;\n    node = QuickSvg.createSvgTree(\"svg\", svgProps, node);\n\n    return node;\n  }\n\n  createSvg(ctxt) {\n    var fragment = \"\";\n\n    // create defs section\n    for (var def in ctxt.defs)\n      if (ctxt.defs.hasOwnProperty(def)) fragment += ctxt.defs[def];\n    fragment += ctxt.createStyle();\n\n    fragment = QuickSvg.createFragment(\"defs\", {}, fragment);\n\n    if (this.titles) fragment += this.titles.createSvgFragment(ctxt);\n\n    for (var i = 0; i < this.lines.length; i++)\n      fragment += this.lines[i].createSvgFragment(ctxt);\n\n    fragment = QuickSvg.createFragment(\"g\", {}, fragment);\n\n    fragment = QuickSvg.createFragment(\"svg\", this.getSvgProps(ctxt), fragment);\n\n    return fragment;\n  }\n\n  createSvgNodeForEachLine(ctxt) {\n    var node = [];\n\n    var top = 0;\n    for (var i = 0; i < this.lines.length; i++) {\n      var lineFragment = [\n        ctxt.defsNode.cloneNode(true),\n        this.lines[i].createSvgNode(ctxt, top)\n      ];\n      lineFragment[0].appendChild(ctxt.createStyleNode());\n      var height = this.lines[i].bounds.height + ctxt.staffInterval * 1.5;\n      lineFragment = QuickSvg.createNode(\"g\", {}, lineFragment);\n      lineFragment = QuickSvg.createNode(\n        \"svg\",\n        {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          version: \"1.1\",\n          class: \"Exsurge ChantScore\",\n          width: this.bounds.width,\n          height: height,\n          viewBox: [0, 0, this.bounds.width, height].join(\" \")\n        },\n        lineFragment\n      );\n      node.push(lineFragment);\n      top += height;\n    }\n    return node;\n  }\n\n  createSvgForEachLine(ctxt) {\n    var fragment = \"\",\n      fragmentDefs = \"\";\n\n    // create defs section\n    for (var def in ctxt.defs)\n      if (ctxt.defs.hasOwnProperty(def)) fragmentDefs += ctxt.defs[def];\n    fragmentDefs += ctxt.createStyle();\n\n    fragmentDefs = QuickSvg.createFragment(\"defs\", {}, fragmentDefs);\n    var top = 0;\n    for (var i = 0; i < this.lines.length; i++) {\n      var lineFragment =\n        fragmentDefs + this.lines[i].createSvgFragment(ctxt, top);\n      var height = this.lines[i].bounds.height + ctxt.staffInterval * 1.5;\n      lineFragment = QuickSvg.createFragment(\"g\", {}, lineFragment);\n      lineFragment = QuickSvg.createFragment(\n        \"svg\",\n        {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          version: \"1.1\",\n          \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n          class: \"Exsurge ChantScore\",\n          width: this.bounds.width,\n          height: height\n        },\n        lineFragment\n      );\n      fragment += lineFragment;\n      top += height;\n    }\n    return fragment;\n  }\n\n  unserializeFromJson(data, ctxt) {\n    this.autoColoring = data[\"auto-coloring\"];\n\n    if (data.annotation !== null && data.annotation !== \"\") {\n      // create the annotation\n      this.annotation = new Annotation(ctxt, data.annotation);\n    } else this.annotation = null;\n\n    var createDropCap = data[\"drop-cap\"] === \"auto\" ? true : false;\n\n    Gabc.parseChantNotations(data.notations, this, createDropCap);\n  }\n\n  serializeToJson() {\n    var data = {};\n\n    data[\"type\"] = \"score\";\n    data[\"auto-coloring\"] = true;\n\n    if (this.annotation !== null)\n      data.annotation = this.annotation.unsanitizedText;\n    else data.annotation = \"\";\n\n    return data;\n  }\n}\n\nexport class ChantDocument {\n  constructor() {\n    var defaults = {\n      layout: {\n        units: \"mm\",\n        \"default-font\": {\n          \"font-family\": \"Crimson\",\n          \"font-size\": 14\n        },\n        page: {\n          width: 8.5,\n          height: 11,\n          \"margin-left\": 0,\n          \"margin-top\": 0,\n          \"margin-right\": 0,\n          \"margin-bottom\": 0\n        }\n      },\n      scores: []\n    };\n\n    // default layout\n    this.copyLayout(this, defaults);\n\n    this.scores = defaults.scores;\n  }\n\n  copyLayout(to, from) {\n    to.layout = {\n      units: from.layout.units,\n      \"default-font\": {\n        \"font-family\": from.layout[\"default-font\"][\"font-family\"],\n        \"font-size\": from.layout[\"default-font\"][\"font-size\"]\n      },\n      page: {\n        width: from.layout.page.width,\n        height: from.layout.page.height,\n        \"margin-left\": from.layout.page[\"margin-left\"],\n        \"margin-top\": from.layout.page[\"margin-top\"],\n        \"margin-right\": from.layout.page[\"margin-right\"],\n        \"margin-bottom\": from.layout.page[\"margin-bottom\"]\n      }\n    };\n  }\n\n  unserializeFromJson(data) {\n    this.copyLayout(this, data);\n\n    this.scores = [];\n\n    // read in the scores\n    for (var i = 0; i < data.scores.length; i++) {\n      var score = new ChantScore();\n\n      score.unserializeFromJson(data.scores[i]);\n      this.scores.push(score);\n    }\n  }\n\n  serializeToJson() {\n    var data = {};\n\n    this.copyLayout(data, this);\n\n    data.scores = [];\n\n    // save scores...\n    for (var i = 0; i < this.scores.length; i++)\n      data.scores.push(this.scores[i].serializeToJson());\n\n    return data;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { ChantLineBreak, NoteShape, TextOnly } from \"./Exsurge.Chant.js\";\nimport {\n  BraceAttachment, BracePoint, BraceShape, HorizontalEpisemaAlignment\n} from \"./Exsurge.Chant.Markings.js\";\nimport {\n  Custos,\n  DoubleBar,\n  FullBar\n} from \"./Exsurge.Chant.Signs.js\";\nimport { Point, Rect } from \"./Exsurge.Core.js\";\nimport {\n  ChantLayoutElement, CurlyBraceVisualizer, GlyphCode, Lyric,\n  LyricArray,\n  LyricType, MarkingPositionHint, QuickSvg, RoundBraceVisualizer\n} from \"./Exsurge.Drawing.js\";\nimport { Glyphs } from \"./Exsurge.Glyphs.js\";\n\n// a chant line represents one staff line on the page. ChantLines are created by the score\n// and laid out by the page\nexport class ChantLine extends ChantLayoutElement {\n  constructor(score) {\n    super();\n\n    this.score = score;\n\n    this.notationsStartIndex = 0;\n    this.numNotationsOnLine = 0;\n    this.notationBounds = null; // Rect\n\n    this.staffLeft = 0;\n    this.staffRight = 0;\n\n    this.startingClef = null; // necessary for the layout process\n    this.custos = null;\n\n    this.justify = true;\n\n    // these are markings that exist at the chant line level rather than at the neume level.\n    this.ledgerLines = [];\n    this.braces = [];\n\n    this.nextLine = null;\n    this.previousLine = null; // for layout assistance\n\n    this.lyricLineHeight = 0; // height of each text line\n    this.lyricLineBaseline = 0; // offsets from the top of the text line to the baseline\n    this.numLyricLines = 0; // maximum count of lyrics on the same syllable\n\n    // fixme: make these configurable values from the score\n    this.spaceAfterNotations = 0; // the space between the notation bounds and the first text track\n    this.spaceBetweenTextTracks = 0; // spacing between each text track\n\n    this.lastLyrics = [];\n  }\n\n  performLayout(ctxt) {\n    // start off with a rectangle that holds at least the four staff lines\n    this.notationBounds = new Rect(\n      this.staffLeft,\n      -(ctxt.staffLineWeight / 2 + 3 + ctxt.minSpaceAboveStaff) *\n        ctxt.staffInterval,\n      this.staffRight - this.staffLeft,\n      (ctxt.staffLineWeight + 6 + ctxt.minSpaceAboveStaff) * ctxt.staffInterval\n    );\n\n    // run through all the elements of the line and calculate the bounds of the notations,\n    // as well as the bounds of each text track we will use\n    var i;\n    var notations = this.score.notations;\n    var lastNeumeIndex =\n      this.extraTextOnlyIndex === null\n        ? this.notationsStartIndex + this.numNotationsOnLine\n        : this.extraTextOnlyIndex;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n    var notation = null;\n\n    this.notationBounds.union(this.startingClef.bounds);\n\n    // reset the lyric line offsets before we [re]calculate them now\n    this.lyricLineHeight = ctxt.textStyles.lyric.size * 1.1;\n    this.lyricLineBaseline = 0;\n    this.numLyricLines = 0;\n\n    this.altLineHeight = 0;\n    this.altLineBaseline = 0;\n    this.numAltLines = 0;\n\n    this.translationLineHeight = ctxt.textStyles.translation.size * 1.1;\n    this.translationLineBaseline = 0;\n    this.numTranslationLines = 0;\n\n    for (i = this.notationsStartIndex; i < lastNeumeIndex; i++) {\n      notation = notations[i];\n\n      this.notationBounds.union(notation.bounds);\n\n      // keep track of lyric line offsets\n      if (notation.lyrics.length && notation.lyrics[0].text) {\n        // if (notation.lyrics[0].bounds.height > this.lyricLineHeight)\n        //   this.lyricLineHeight = notation.lyrics[0].bounds.height;\n        if (notation.lyrics[0].origin.y > this.lyricLineBaseline)\n          this.lyricLineBaseline = notation.lyrics[0].origin.y;\n        if (notation.lyrics.length > this.numLyricLines)\n          this.numLyricLines = notation.lyrics.length;\n      }\n\n      if (notation.alText && this.numAltLines < notation.alText.length) {\n        if (notation.alText[0].bounds.height > this.altLineHeight)\n          this.altLineHeight = notation.alText[0].bounds.height;\n        if (notation.alText[0].origin.y > this.altLineBaseline)\n          this.altLineBaseline = notation.alText[0].origin.y;\n        if (notation.alText.length > this.numAltLines)\n          this.numAltLines = notation.alText.length;\n      }\n\n      if (\n        notation.translationText &&\n        notation.translationText[0] &&\n        notation.translationText[0].text\n      ) {\n        // if (\n        //   notation.translationText[0].bounds.height > this.translationLineHeight\n        // )\n        //   this.translationLineHeight =\n        //     notation.translationText[0].bounds.height;\n        if (notation.translationText[0].origin.y > this.translationLineBaseline)\n          this.translationLineBaseline = notation.translationText[0].origin.y;\n        if (notation.translationText.length > this.numTranslationLines)\n          this.numTranslationLines = notation.translationText.length;\n      }\n    }\n\n    if (this.custos) this.notationBounds.union(this.custos.bounds);\n\n    // add any braces to the notationBounds as well\n    for (i = 0; i < this.braces.length; i++)\n      this.notationBounds.union(this.braces[i].bounds);\n\n    // finalize the lyrics placement\n    var notationBoundsOffset =\n      this.notationBounds.bottom() +\n      ctxt.minSpaceBelowStaff * ctxt.staffInterval;\n    this.lyricLineBaseline += notationBoundsOffset;\n    this.translationLineBaseline += notationBoundsOffset;\n    this.altLineBaseline +=\n      this.notationBounds.y - this.altLineHeight - ctxt.staffInterval * 0.5;\n\n    for (i = this.notationsStartIndex; i < lastNeumeIndex; i++) {\n      notation = notations[i];\n      var offset = 0;\n      for (var j = 0; j < notation.lyrics.length; j++) {\n        notation.lyrics[j].bounds.y = offset + this.lyricLineBaseline;\n        offset += this.lyricLineHeight;\n      }\n\n      if (notation.translationText) {\n        for (j = 0; j < notation.translationText.length; j++) {\n          notation.translationText[j].bounds.y =\n            offset + this.translationLineBaseline;\n          offset += this.translationLineHeight;\n        }\n      }\n\n      if (notation.alText) {\n        offset = 0;\n        for (j = 0; j < notation.alText.length; j++) {\n          notation.alText[j].bounds.y = offset + this.altLineBaseline;\n          offset -= ctxt.textStyles.al.size * 1.1;\n        }\n      }\n    }\n\n    this.extraTextOnlyHeight = 0;\n    // handle placement of extra TextOnly elements:\n    if (ctxt.useExtraTextOnly) {\n      var extraTextOnlyLyricIndex = this.extraTextOnlyLyricIndex;\n      if (this.extraTextOnlyIndex === null) {\n        // even if extraTextOnlyIndex is null, there might be extra lines on the last lyric if it is TextOnly:\n        let lastNotation = notations[lastNeumeIndex - 1] || {};\n        if (lastNotation.constructor === ChantLineBreak)\n          lastNotation = notations[lastNeumeIndex - 2];\n        if (\n          lastNotation.constructor === TextOnly &&\n          lastNotation.lyrics.length === 1 &&\n          lastNotation.lyrics[0].bounds.height > this.lyricLineHeight\n        ) {\n          this.extraTextOnlyHeight = this.lyricLineHeight;\n        }\n      } else {\n        let lastLyrics = null;\n        let xOffset = 0;\n        offset = (this.numLyricLines - 1) * this.lyricLineHeight;\n        offset += this.numTranslationLines * this.translationLineHeight;\n        let extraLines = 0;\n        for (i = this.extraTextOnlyIndex; i < lastIndex; i++) {\n          notation = notations[i];\n          if (!notation.lyrics[extraTextOnlyLyricIndex]) continue;\n          lastLyrics = notation.lyrics[extraTextOnlyLyricIndex];\n          if (lastLyrics.lineWidth) {\n            xOffset = this.staffRight - lastLyrics.lineWidth;\n            offset += this.lyricLineHeight;\n            extraLines++;\n          }\n          extraLines += lastLyrics.numLines - 1;\n          lastLyrics.bounds.y = offset + this.lyricLineBaseline;\n          notation.bounds.x += xOffset;\n        }\n        this.extraTextOnlyHeight = this.lyricLineHeight * extraLines;\n      }\n    }\n\n    if (this.startingClef.hasLyrics()) {\n      offset = 0;\n      for (j = 0; j < this.startingClef.lyrics.length; j++) {\n        this.startingClef.lyrics[j].bounds.y = offset + this.lyricLineBaseline;\n        offset += this.lyricLineHeight;\n      }\n    }\n\n    // dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.annotation !== null) {\n        // annotations use dominant-baseline to align text to the top\n        this.score.annotation.bounds.x = this.staffLeft / 2;\n        this.score.annotation.bounds.y = -ctxt.staffInterval * 3;\n        if (this.score.dropCap !== null) {\n          var lowestPossibleAnnotationY =\n            this.lyricLineBaseline -\n            this.score.annotation.bounds.height -\n            ctxt.staffInterval * ctxt.textStyles.annotation.padding -\n            this.score.dropCap.origin.y;\n          // if the annotation would overlap with the drop cap, move the annotation higher.\n          // otherwise, center the annotation in the vertical space between the top of the drop cap and the top of the staff.\n          if (lowestPossibleAnnotationY < this.score.annotation.bounds.y) {\n            this.score.annotation.bounds.y = lowestPossibleAnnotationY;\n          } else {\n            this.score.annotation.bounds.y =\n              (this.score.annotation.bounds.y + lowestPossibleAnnotationY) / 2;\n          }\n          if (this.score.annotation.bounds.y < this.notationBounds.y) {\n            this.notationBounds.y = this.score.annotation.bounds.y;\n            this.notationBounds.height +=\n              this.notationBounds.y - this.score.annotation.bounds.y;\n          }\n        }\n        this.score.annotation.bounds.y += this.score.annotation.origin.y;\n      }\n\n      if (this.score.dropCap !== null) {\n        // drop caps and annotations are drawn from their center, so aligning them\n        // horizontally is as easy as this.staffLeft / 2\n        this.score.dropCap.bounds.x = this.staffLeft / 2;\n        this.score.dropCap.bounds.y =\n          this.lyricLineBaseline - this.score.dropCap.origin.y;\n        this.notationBounds.union(this.score.dropCap.bounds);\n        this.score.dropCap.bounds.y = this.lyricLineBaseline;\n      }\n    }\n\n    if (this.numLyricLines > 0) {\n      // add up the lyric line heights to get the total height of the chant line\n      var lyricAndTextRect = new Rect(\n        0,\n        notationBoundsOffset,\n        0,\n        this.lyricLineHeight * this.numLyricLines +\n          this.extraTextOnlyHeight +\n          this.translationLineHeight * this.numTranslationLines\n      );\n      this.notationBounds.union(lyricAndTextRect);\n    }\n    if (this.numAltLines > 0) {\n      var altLineTextRect = new Rect(\n        0,\n        this.notationBounds.y -\n          this.altLineHeight -\n          0.5 * ctxt.staffInterval -\n          ctxt.textStyles.al.size * 1.1 * (this.numAltLines - 1),\n        0,\n        ctxt.textStyles.al.size * 1.1 * this.numAltLines\n      );\n      this.notationBounds.union(altLineTextRect);\n    }\n    // Ensure that there is at least minSpaceBelowStaff below the lowest staff line:\n    this.notationBounds.union(\n      new Rect(\n        0,\n        0,\n        0,\n        (3 + ctxt.staffLineWeight / 2 + ctxt.minSpaceBelowStaff) *\n          ctxt.staffInterval\n      )\n    );\n    var totalHeight = this.notationBounds.height;\n\n    this.bounds.x = 0;\n    this.bounds.y = this.notationBounds.y;\n    this.bounds.width = this.notationBounds.right();\n    this.bounds.height = totalHeight;\n\n    // the origin of the chant line's coordinate space is at the center line of the left extremity of the staff\n    this.origin = new Point(this.staffLeft, -this.notationBounds.y);\n  }\n\n  // TODO: remove if not necsessary\n  layoutInsertionCursor(ctxt) {\n    if (this.insertionCursor) {\n      // we have either a Notation to draw the cursor after, or the ChantLine itself when the cursor is the first thing on the line\n      this.insertionCursor.performLayout(ctxt);\n      this.insertionCursor.bounds.x =\n        this.score.insertionElement.bounds.right() +\n        ((this.score.insertionElement.trailingSpace &&\n          this.score.insertionElement.calculatedTrailingSpace) ||\n          0) /\n          2 -\n        this.insertionCursor.origin.x;\n    }\n    return this.insertionCursor;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.translate(this.bounds.x, this.bounds.y);\n\n    // draw the staff lines\n    var i,\n      x1 = this.staffLeft,\n      x2 = this.staffRight,\n      y;\n    canvasCtxt.lineWidth = ctxt.staffLineWeight;\n    canvasCtxt.strokeStyle = ctxt.staffLineColor;\n\n    for (i = -3; i <= 3; i += 2) {\n      y = ctxt.staffInterval * i;\n\n      canvasCtxt.beginPath();\n      canvasCtxt.moveTo(x1, y);\n      canvasCtxt.lineTo(x2, y);\n      canvasCtxt.stroke();\n    }\n\n    if (this.layoutInsertionCursor(ctxt)) {\n      this.insertionCursor.draw(ctxt);\n    }\n\n    // draw the ledger lines\n    for (i = 0; i < this.ledgerLines.length; i++) {\n      var ledgerLine = this.ledgerLines[i];\n      y = ctxt.calculateHeightFromStaffPosition(ledgerLine.staffPosition);\n\n      canvasCtxt.beginPath();\n      canvasCtxt.moveTo(ledgerLine.x1, y);\n      canvasCtxt.lineTo(ledgerLine.x2, y);\n      canvasCtxt.stroke();\n    }\n\n    // fixme: draw the braces\n\n    // draw the dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.dropCap !== null) this.score.dropCap.draw(ctxt);\n\n      if (\n        this.score.annotation !== null &&\n        (!ctxt.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        // only draw it if there is a dropCap or there is no mergeAnnotationWithTextLeft\n        this.score.annotation.draw(ctxt);\n    }\n\n    // draw the notations\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    for (i = this.notationsStartIndex; i < lastIndex; i++)\n      notations[i].draw(ctxt);\n\n    this.startingClef.draw(ctxt);\n\n    if (this.custos) this.custos.draw(ctxt);\n\n    canvasCtxt.translate(-this.bounds.x, -this.bounds.y);\n  }\n\n  getInnerNodes(\n    ctxt,\n    top = 0,\n    functionNames = { quickSvg: \"createNode\", elements: \"createSvgNode\" }\n  ) {\n    var inner = [];\n\n    // add the chant lines\n    var i,\n      x1 = this.staffLeft,\n      x2 = this.staffRight;\n\n    if (ctxt.editable) {\n      inner.push(\n        QuickSvg[functionNames.quickSvg](\"rect\", {\n          key: \"insertion\",\n          x: x1,\n          y: ctxt.staffInterval * -3,\n          width: x2 - x1,\n          height: ctxt.staffInterval * 6,\n          fill: \"none\"\n        })\n      );\n    }\n\n    // create the staff lines\n    for (i = -3; i <= 3; i += 2) {\n      inner.push(\n        QuickSvg[functionNames.quickSvg](\"line\", {\n          key: i,\n          x1: x1,\n          y1: ctxt.staffInterval * i,\n          x2: x2,\n          y2: ctxt.staffInterval * i,\n          stroke: ctxt.staffLineColor,\n          \"stroke-width\": ctxt.staffLineWeight,\n          class: \"staffLine\"\n        })\n      );\n    }\n\n    inner = [\n      QuickSvg[functionNames.quickSvg](\"g\", { class: \"staffLines\" }, inner)\n    ];\n\n    if (this.layoutInsertionCursor(ctxt)) {\n      inner.push(this.insertionCursor[functionNames.elements](ctxt));\n    }\n\n    // create the ledger lines\n    for (i = 0; i < this.ledgerLines.length; i++) {\n      var ledgerLine = this.ledgerLines[i];\n      var y = ctxt.calculateHeightFromStaffPosition(ledgerLine.staffPosition);\n\n      inner.push(\n        QuickSvg[functionNames.quickSvg](\"line\", {\n          x1: ledgerLine.x1,\n          y1: y,\n          x2: ledgerLine.x2,\n          y2: y,\n          stroke: ctxt.staffLineColor,\n          \"stroke-width\": ctxt.staffLineWeight,\n          class: \"ledgerLine\"\n        })\n      );\n    }\n\n    // add any braces\n    for (i = 0; i < this.braces.length; i++)\n      inner.push(this.braces[i][functionNames.elements](ctxt));\n\n    // dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.dropCap !== null)\n        inner.push(this.score.dropCap[functionNames.elements](ctxt));\n\n      if (\n        this.score.annotation !== null &&\n        (!ctxt.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        // only draw it if there is a dropCap or there is no mergeAnnotationWithTextLeft\n        inner = inner.concat(\n          this.score.annotation[functionNames.elements](ctxt)\n        );\n    }\n\n    inner.push(this.startingClef[functionNames.elements](ctxt));\n\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // add all of the notations\n    for (i = this.notationsStartIndex; i < lastIndex; i++)\n      inner.push(notations[i][functionNames.elements](ctxt));\n\n    if (this.custos) inner.push(this.custos[functionNames.elements](ctxt));\n    return inner;\n  }\n\n  createSvgNode(ctxt, top = 0) {\n    let inner = this.getInnerNodes(ctxt, top, {\n      quickSvg: \"createNode\",\n      elements: \"createSvgNode\"\n    });\n\n    return QuickSvg.createNode(\n      \"g\",\n      {\n        class: \"chantLine\",\n        transform:\n          \"translate(\" + this.bounds.x + \",\" + (this.bounds.y - top) + \")\",\n        \"element-index\": this.elementIndex,\n        source: this\n      },\n      inner\n    );\n  }\n\n  createSvgTree(ctxt, top = 0) {\n    let inner = this.getInnerNodes(ctxt, top, {\n      quickSvg: \"createSvgTree\",\n      elements: \"createSvgTree\"\n    });\n\n    return QuickSvg.createSvgTree(\n      \"g\",\n      {\n        class: \"chantLine\",\n        transform:\n          \"translate(\" + this.bounds.x + \",\" + (this.bounds.y - top) + \")\",\n        \"element-index\": this.elementIndex\n      },\n      ...inner\n    );\n  }\n\n  createSvgFragment(ctxt, top = 0) {\n    var inner = \"\";\n\n    // add the chant lines\n    var i,\n      x1 = this.staffLeft,\n      x2 = this.staffRight;\n\n    // create the staff lines\n    for (i = -3; i <= 3; i += 2) {\n      inner += QuickSvg.createFragment(\"line\", {\n        x1: x1,\n        y1: ctxt.staffInterval * i,\n        x2: x2,\n        y2: ctxt.staffInterval * i,\n        stroke: ctxt.staffLineColor,\n        \"stroke-width\": ctxt.staffLineWeight,\n        class: \"staffLine\"\n      });\n    }\n\n    inner = QuickSvg.createFragment(\"g\", { class: \"staffLines\" }, inner);\n\n    if (this.layoutInsertionCursor(ctxt)) {\n      inner += this.insertionCursor.createSvgFragment(ctxt);\n    }\n\n    // create the ledger lines\n    for (i = 0; i < this.ledgerLines.length; i++) {\n      var ledgerLine = this.ledgerLines[i];\n      var y = ctxt.calculateHeightFromStaffPosition(ledgerLine.staffPosition);\n\n      inner += QuickSvg.createFragment(\"line\", {\n        x1: ledgerLine.x1,\n        y1: y,\n        x2: ledgerLine.x2,\n        y2: y,\n        stroke: ctxt.staffLineColor,\n        \"stroke-width\": ctxt.staffLineWeight,\n        class: \"ledgerLine\"\n      });\n    }\n\n    // add any braces\n    for (i = 0; i < this.braces.length; i++)\n      inner += this.braces[i].createSvgFragment(ctxt);\n\n    // dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.dropCap !== null)\n        inner += this.score.dropCap.createSvgFragment(ctxt);\n\n      if (\n        this.score.annotation !== null &&\n        (!ctxt.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        // only draw it if there is a dropCap or there is no mergeAnnotationWithTextLeft\n        inner += this.score.annotation.createSvgFragment(ctxt);\n    }\n\n    inner += this.startingClef.createSvgFragment(ctxt);\n\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // add all of the notations\n    for (i = this.notationsStartIndex; i < lastIndex; i++)\n      inner += notations[i].createSvgFragment(ctxt);\n\n    if (this.custos) inner += this.custos.createSvgFragment(ctxt);\n\n    return QuickSvg.createFragment(\n      \"g\",\n      {\n        class: \"chantLine\",\n        transform:\n          \"translate(\" + this.bounds.x + \",\" + (this.bounds.y - top) + \")\",\n        \"element-index\": this.elementIndex\n      },\n      inner\n    );\n  }\n\n  // code below based on code by: https://gist.github.com/alexhornbake\n  //\n  // optimized for braces that are only drawn horizontally.\n  // returns svg path string ready to insert into svg doc\n  generateCurlyBraceDrawable(ctxt, x1, x2, y, isAbove) {\n    var h;\n\n    if (isAbove) h = -ctxt.staffInterval / 2;\n    else h = ctxt.staffInterval / 2;\n\n    // and q factor, .5 is normal, higher q = more expressive bracket\n    var q = 0.6;\n\n    var len = x2 - x1;\n\n    //Calculate Control Points of path,\n    var qx1 = x1;\n    var qy1 = y + q * h;\n    var qx2 = x1 + 0.25 * len;\n    var qy2 = y + (1 - q) * h;\n    var tx1 = x1 + 0.5 * len;\n    var ty1 = y + h;\n    var qx3 = x2;\n    var qy3 = y + q * h;\n    var qx4 = x1 + 0.75 * len;\n    var qy4 = y + (1 - q) * h;\n    var d =\n      \"M \" +\n      x1 +\n      \" \" +\n      y +\n      \" Q \" +\n      qx1 +\n      \" \" +\n      qy1 +\n      \" \" +\n      qx2 +\n      \" \" +\n      qy2 +\n      \" T \" +\n      tx1 +\n      \" \" +\n      ty1 +\n      \" M \" +\n      x2 +\n      \" \" +\n      y +\n      \" Q \" +\n      qx3 +\n      \" \" +\n      qy3 +\n      \" \" +\n      qx4 +\n      \" \" +\n      qy4 +\n      \" T \" +\n      tx1 +\n      \" \" +\n      ty1;\n\n    return QuickSvg.createFragment(\"path\", {\n      d: d,\n      stroke: ctxt.neumeLineColor,\n      \"stroke-width\": ctxt.neumeLineWeight + \"px\",\n      fill: \"none\"\n    });\n  }\n\n  buildFromChantNotationIndex(ctxt, newElementStart, width) {\n    // todo: reset / clear the children we have in case they have data\n    var notations = this.score.notations,\n      beginningLyrics = null,\n      prev = null,\n      prevNeume = null,\n      prevLyrics = [];\n    var condensableSpaces = [];\n    this.notationsStartIndex = newElementStart;\n    this.numNotationsOnLine = 0;\n\n    this.staffLeft = 0;\n    this.paddingLeft = 0;\n\n    this.extraTextOnlyIndex = null;\n    this.extraTextOnlyLyricIndex = 0;\n\n    if (width > 0) this.staffRight = width;\n    else this.staffRight = Infinity; // no limit to staff size\n\n    // If this is the first chant line, then we have to make room for a\n    // drop cap and/or annotation, if present\n    if (this.notationsStartIndex === 0) {\n      var padding = 0;\n\n      if (this.score.dropCap !== null)\n        padding =\n          this.score.dropCap.bounds.width + this.score.dropCap.padding * 2;\n\n      if (\n        this.score.annotation !== null &&\n        (!ctxt.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        padding = Math.max(\n          padding,\n          this.score.annotation.bounds.width + this.score.annotation.padding * 2\n        );\n\n      this.staffLeft += padding;\n      if (this.score.dropCap !== null)\n        this.paddingLeft = (padding - this.score.dropCap.bounds.width) / 2;\n    } else {\n      prev = notations[newElementStart - 1];\n      if (\n        prev.constructor === DoubleBar &&\n        prev.hasLyrics() &&\n        (prev.lyrics.length > 1 || !prev.lyrics[0].text.match(/^(i\\.?)+j\\.?/))\n      ) {\n        beginningLyrics = prev.lyrics.map(function(lyric) {\n          var newLyric = new Lyric(\n            ctxt,\n            lyric.originalText,\n            lyric.lyricType,\n            lyric.notation,\n            lyric.notations,\n            lyric.sourceIndex\n          );\n          newLyric.elidesToNext = lyric.elidesToNext;\n          // Hide the original lyric by setting its bounds.y to an extremely high number.\n          // If the chant is re-laid out, this value will be recalculated so that it won't stay hidden.\n          lyric.bounds.y = Number.MAX_SAFE_INTEGER;\n          return newLyric;\n        });\n        var minX = beginningLyrics\n          .map(function(l) {\n            return l.bounds.x;\n          })\n          .reduce(function(a, b) {\n            return a < b ? a : b;\n          });\n        beginningLyrics.forEach(function(l) {\n          l.bounds.x -= minX;\n        });\n      }\n    }\n\n    // set up the clef...\n    // if the first notation on the line is a starting clef, then we treat it a little differently...\n    // the clef becomes this line's starting clef and we skip over the clef in the notations array\n    if (notations.length && notations[newElementStart].isClef) {\n      ctxt.activeClef = notations[newElementStart];\n      newElementStart++;\n      this.notationsStartIndex++;\n    }\n\n    // make a copy for this line to use at the beginning\n    this.startingClef = ctxt.activeClef.clone();\n    this.startingClef.performLayout(ctxt);\n    this.startingClef.bounds.x = this.staffLeft;\n\n    var curr = this.startingClef;\n\n    if (beginningLyrics) {\n      LyricArray.setNotation(beginningLyrics, curr);\n    }\n\n    // estimate how much space we have available to us\n    var rightNotationBoundary =\n      this.staffRight - Glyphs.CustosLong.bounds.width * ctxt.glyphScaling; // possible custos on the line\n    var lastTranslationTextWithEndNeume = null;\n\n    // iterate through the notations, fittng what we can on this line\n    var i,\n      j,\n      lastNotationIndex = notations.length - 1;\n\n    if (curr.hasLyrics()) LyricArray.mergeIn(this.lastLyrics, curr.lyrics);\n\n    // if we already have a start brace on the context, we must be continuing it from the previous system.\n    if (ctxt.lastStartBrace && !ctxt.lastStartBrace.note) {\n      ctxt.lastStartBrace.note = this.startingClef;\n    }\n    var lastLyricsBeforeTextOnly;\n    var textOnlyStartIndex;\n\n    for (i = newElementStart; i <= lastNotationIndex; i++) {\n      prev = curr;\n      if (curr.constructor !== TextOnly) prevNeume = curr;\n\n      curr = notations[i];\n\n      var actualRightBoundary;\n      if (\n        i === lastNotationIndex ||\n        curr.constructor === Custos ||\n        (prev.constructor === Custos && curr.isDivider) ||\n        (curr.constructor === ChantLineBreak &&\n          prevNeume.constructor === Custos)\n      ) {\n        // on the last notation of the score, we don't need a custos or trailing space, so we use staffRight as the\n        // right boundary.\n        // Also, if the current notation is a divider and the previous was a custos, we don't need extra space\n        // because if the following notation won't fit, we can switch the order and use the custos as the end-of-the-line custos\n        // Ditto in the case of the current element being a chant line break and the previous neume a custos, because that custos will become our end-of-line custos\n        actualRightBoundary = this.staffRight;\n      } else if (i === lastNotationIndex - 1) {\n        // on the penultimate notation, make sure there is at least enough room for whichever takes up less space,\n        // between the final notation and a custos:\n        actualRightBoundary = Math.max(\n          rightNotationBoundary,\n          this.staffRight - notations[lastNotationIndex].bounds.width\n        );\n      } else {\n        // Otherwise, we use rightNotationBoundary, which leaves room for a custos...\n        actualRightBoundary = rightNotationBoundary;\n      }\n\n      // First check if we're already beyond the rightNotationBoundary (due to condensing that hasn't yet happened) and have a good element to end with\n      // but if we have 2 or fewer elements, or if the current element is a line break or a custos, we'll go ahead and try for them anyway.\n      var forceBreak =\n        !curr.isDivider &&\n        curr.constructor !== ChantLineBreak &&\n        curr.constructor !== Custos &&\n        !(\n          curr.constructor === TextOnly &&\n          curr.hasLyrics() &&\n          /^(?:[*†]|i+j\\.?)$/.test(curr.lyrics[0].text)\n        ) &&\n        lastNotationIndex - i > 1 &&\n        !prevNeume.keepWithNext &&\n        prevNeume.bounds.right() >= rightNotationBoundary;\n\n      // also force a break if we've run into extra TextOnly elements, but the current notation is not a TextOnly and has lyrics\n      forceBreak =\n        forceBreak ||\n        (this.extraTextOnlyIndex !== null &&\n          curr.constructor !== TextOnly &&\n          curr.constructor !== ChantLineBreak &&\n          curr.constructor !== Custos &&\n          curr.hasLyrics());\n\n      if (curr instanceof TextOnly && prev === prevNeume) {\n        lastLyricsBeforeTextOnly = this.lastLyrics.slice();\n        textOnlyStartIndex = i;\n      }\n      if (\n        curr instanceof TextOnly &&\n        notations[textOnlyStartIndex] &&\n        !notations[textOnlyStartIndex].hasLyrics()\n      ) {\n        // we want textOnlyStartIndex to be the first TextOnly that actually has lyrics,\n        // so if the current \"textOnlyStart\" element does not have lyrics, and we have another textOnly\n        // that does have lyrics, we will use it instead\n        textOnlyStartIndex = i;\n      }\n\n      if (curr.hasLyrics() && curr.lyrics[0].needsLayout) {\n        curr.lyrics[0].recalculateMetrics(ctxt);\n      }\n\n      // try to fit the curr element on this line.\n      // if it doesn't fit, we finish up here.\n      var fitsOnLine =\n        !forceBreak &&\n        this.positionNotationElement(\n          ctxt,\n          this.lastLyrics,\n          prevNeume,\n          curr,\n          actualRightBoundary,\n          this.extraTextOnlyIndex ? [] : condensableSpaces // no spaces are condensable once we are on extra text only lyrics\n        );\n      var candidateForExtraTextOnlyLine =\n        ctxt.useExtraTextOnly &&\n        curr.constructor === TextOnly &&\n        LyricArray.hasOnlyOneLyric(curr.lyrics) &&\n        (fitsOnLine === false || this.extraTextOnlyIndex !== null);\n      var extraTextOnlyLyricIndex;\n      if (candidateForExtraTextOnlyLine && this.extraTextOnlyIndex === null) {\n        // check to make sure there is enough text to put on the text only line:\n        extraTextOnlyLyricIndex = LyricArray.indexOfLyric(curr.lyrics);\n        if (textOnlyStartIndex === i) {\n          var currentLyric = notations[i].lyrics[extraTextOnlyLyricIndex].text;\n          if (currentLyric.length <= 1) {\n            var nextNotation = notations[i + 1];\n            candidateForExtraTextOnlyLine =\n              nextNotation &&\n              nextNotation.constructor === TextOnly &&\n              nextNotation.lyrics[extraTextOnlyLyricIndex] &&\n              nextNotation.lyrics[extraTextOnlyLyricIndex].text.length > 0;\n          }\n        }\n      }\n      if (candidateForExtraTextOnlyLine) {\n        // a special case for TextOnly elements that don't fit on the line: since they don't have neumes associated with them, we can place this\n        // and any additional TextOnly elements just below the current lyric lines, but we can only do this if the TextOnly elements have only one\n        // line of lyrics associated with them.\n        var firstOnLine;\n        extraTextOnlyLyricIndex = this.extraTextOnlyLyricIndex;\n        if (\n          this.extraTextOnlyIndex === null &&\n          notations[textOnlyStartIndex].lyrics.length\n        ) {\n          if (\n            textOnlyStartIndex === this.notationsStartIndex ||\n            !ctxt.startExtraTextOnlyFromFirst\n          ) {\n            textOnlyStartIndex = i;\n            let lastNotationWithLyrics = notations\n              .slice(this.notationsStartIndex, i)\n              .reverse()\n              .find(notation => notation.hasLyrics());\n            lastLyricsBeforeTextOnly =\n              (lastNotationWithLyrics &&\n                lastNotationWithLyrics.lyrics.slice()) ||\n              [];\n          }\n          // go back to the first in this string of consecutive TextOnly elements.\n          this.extraTextOnlyIndex = textOnlyStartIndex;\n          extraTextOnlyLyricIndex = this.extraTextOnlyLyricIndex = LyricArray.indexOfLyric(\n            curr.lyrics\n          );\n          this.lastLyricsBeforeTextOnly = lastLyricsBeforeTextOnly;\n          this.lastLyrics = [];\n          i = textOnlyStartIndex - 1;\n          this.numNotationsOnLine =\n            textOnlyStartIndex - this.notationsStartIndex;\n          continue;\n        }\n        delete curr.lyrics[extraTextOnlyLyricIndex].lineWidth;\n        if (!fitsOnLine || i === this.extraTextOnlyIndex) {\n          curr.bounds.x = curr.lyrics[extraTextOnlyLyricIndex].origin.x;\n          let lastLyricRight = ctxt.startExtraTextOnlyFromFirst\n            ? LyricArray.getRight(this.lastLyrics) +\n              (ctxt.minLyricWordSpacing || 0)\n            : 0;\n          curr.lyrics[extraTextOnlyLyricIndex].setMaxWidth(\n            ctxt,\n            this.staffRight,\n            this.staffRight - lastLyricRight\n          );\n          firstOnLine = curr;\n        }\n        if (firstOnLine)\n          firstOnLine.lyrics[extraTextOnlyLyricIndex].lineWidth = curr.lyrics[\n            extraTextOnlyLyricIndex\n          ].getRight();\n      } else if (fitsOnLine === false) {\n        const isTextOnlyBeforeDivider = (i) => {\n          const curr = notations[i];\n          if (curr.constructor !== TextOnly) return false;\n          const firstDivider = notations.slice(i + 1).findIndex(notation => notation.isDivider);\n          if (firstDivider < 0) return false;\n          return notations.slice(i + 1, i + 1 + firstDivider).every(notation => notation.constructor === TextOnly);\n        }\n        // first check for elements that cannot begin a system: dividers and custodes\n        while (\n          this.numNotationsOnLine > 1 &&\n          (curr.isDivider || curr.constructor === Custos || isTextOnlyBeforeDivider(i))\n        ) {\n          curr = notations[--i];\n          this.numNotationsOnLine--;\n          if (this.lastLyricsBeforeTextOnly && isTextOnlyBeforeDivider(i)) {\n            delete this.lastLyricsBeforeTextOnly;\n          }\n        }\n\n        if (lastTranslationTextWithEndNeume) {\n          // console.info(notations[i - 1], lastTranslationTextWithEndNeume);\n          // TODO?: need to go back to before the last translation text start:\n        }\n\n        // count syllables and notes\n        const notationsAfterBreak = notations.slice(i + 1);\n        let countSyllables = 0;\n        let countNotes = 0;\n        if (ctxt.minSyllablesLastLine && ctxt.minNotesLastLine) {\n          countSyllables = notationsAfterBreak.filter(notation => notation.hasLyrics()).length;\n          countNotes = notationsAfterBreak.flatMap(notation => notation.notes).filter(note => !!note).length;\n        }\n\n        // check if the prev elements want to be kept with this one\n        for (j = i - 1; j > this.notationsStartIndex; j--) {\n          var cne = notations[j];\n          curr = notations[j + 1];\n\n          // curr is the first notation on the next line\n          // cne is the last notation on this line\n          if (ctxt.minSyllablesLastLine && ctxt.minNotesLastLine) {\n            countSyllables += curr.hasLyrics() ? 1 : 0;\n            countNotes += (curr.notes || []).length;\n          }\n\n          if (cne.firstWithNoWidth) {\n            this.numNotationsOnLine--;\n            continue;\n          }\n\n          // don't let a line break occur in the middle of a translation\n          if (lastTranslationTextWithEndNeume) {\n            this.numNotationsOnLine--;\n            if (cne === lastTranslationTextWithEndNeume) {\n              lastTranslationTextWithEndNeume = null;\n            }\n            continue;\n          }\n\n          // force any notations starting with a quilisma or inclinatum (diamond) to be kept with the previous notation:\n          if (\n            curr &&\n            curr.notes &&\n            (curr.notes[0].shape === NoteShape.Quilisma ||\n              curr.notes[0].shape === NoteShape.Inclinatum)\n          ) {\n            this.numNotationsOnLine--;\n            continue;\n          }\n\n          if (countSyllables < ctxt.minSyllablesLastLine && countNotes < ctxt.minNotesLastLine) {\n            this.numNotationsOnLine--;\n            continue;\n          }\n\n          // if the line break is allowed (cne.allowLineBreakBeforeNext), keep this number of notations around so we can check during justification\n          // whether there would be too much space introduced between\n          if (cne.keepWithNext === true) {\n            if (cne.allowLineBreakBeforeNext && !this.maxNumNotationsOnLine)\n              this.maxNumNotationsOnLine = this.numNotationsOnLine;\n            this.numNotationsOnLine--;\n          } else break;\n        }\n        if (this.extraTextOnlyIndex && (this.notationsStartIndex + this.numNotationsOnLine) <= this.extraTextOnlyIndex) {\n          // we've cut back to before the extra text only index, so we have to remove it:\n          this.extraTextOnlyIndex = null;\n        }\n\n        // if for some reason not a single notation can fit on the line, we'd better put it on anyway, to avoid an infinite loop:\n        if (this.numNotationsOnLine === 0) this.numNotationsOnLine = 1;\n\n        // determine the neumes we can space apart, if we do end up justifying\n        curr = this.findNeumesToJustify(prevLyrics);\n\n        this.lastLyrics = prevLyrics;\n        if (this.maxNumNotationsOnLine) {\n          // Check whether we should squeeze some extra notations on the line to avoid too much space after justification:\n          // Check how much space we would have without the extra notations\n          var extraSpace = this.getWhitespaceOnRight(ctxt);\n          if (\n            extraSpace / this.toJustify.length >\n            ctxt.staffInterval * ctxt.maxExtraSpaceInStaffIntervals\n          ) {\n            LyricArray.mergeInArray(\n              prevLyrics,\n              notations.slice(\n                this.notationsStartIndex + this.numNotationsOnLine,\n                this.notationsStartIndex + this.maxNumNotationsOnLine\n              )\n            );\n            this.numNotationsOnLine = this.maxNumNotationsOnLine;\n            delete this.maxNumNotationsOnLine;\n          }\n        }\n\n        // if the next line begins with a fresh word, than there can be extra space between the last notation on this line and the custos:\n        let next = this.score.notations[\n          this.extraTextOnlyIndex === null\n            ? this.notationsStartIndex + this.numNotationsOnLine\n            : this.extraTextOnlyIndex\n        ];\n        if (\n          next &&\n          next.hasLyrics() &&\n          (next.lyrics[0].lyricType === LyricType.BeginningSyllable ||\n            next.lyrics[0].lyricType === LyricType.SingleSyllable)\n        ) {\n          this.toJustify.push(this.custos);\n        }\n\n        if (\n          j >= 1 &&\n          notations[j].isDivider &&\n          notations[j - 1].constructor === Custos\n        ) {\n          // reverse the order: put the divider first, and end the line with the custos.\n          prevLyrics = [];\n          for (i = j - 2; i >= this.notationsStartIndex; i--) {\n            if (notations[i].hasLyrics()) {\n              LyricArray.mergeIn(prevLyrics, notations[i].lyrics);\n              break;\n            }\n          }\n          // remove the custos and divider from the condensable spaces list, before adding the divider back, when repositioning it.\n          condensableSpaces.sum -= condensableSpaces.pop().condensable;\n          condensableSpaces.sum -= condensableSpaces.pop().condensable;\n          this.positionNotationElement(\n            ctxt,\n            prevLyrics,\n            notations[j - 2],\n            notations[j],\n            this.staffRight,\n            condensableSpaces\n          );\n          this.custos = notations[j - 1];\n          this.custos.bounds.x =\n            this.staffRight -\n            this.custos.bounds.width -\n            this.custos.leadingSpace;\n        }\n\n        // we are at the end of the line!\n        break;\n      }\n\n      if (curr.hasLyrics()) LyricArray.mergeIn(this.lastLyrics, curr.lyrics);\n\n      if (\n        lastTranslationTextWithEndNeume &&\n        curr === lastTranslationTextWithEndNeume.translationText[0].endNeume\n      ) {\n        lastTranslationTextWithEndNeume = null;\n      } else if (\n        curr.translationText &&\n        curr.translationText.length &&\n        curr.translationText[0].endNeume\n      ) {\n        lastTranslationTextWithEndNeume = curr;\n      }\n\n      curr.line = this;\n      this.numNotationsOnLine++;\n\n      if (curr.isClef) ctxt.activeClef = curr;\n\n      // line breaks are a special case indicating to stop processing here\n      if (curr.constructor === ChantLineBreak && width > 0) {\n        this.justify =\n          curr.justify ||\n          this.extraTextOnlyIndex !== null ||\n          this.getWhitespaceOnRight(ctxt) < 0;\n        if (this.justify) this.findNeumesToJustify(prevLyrics);\n        break;\n      }\n\n      if (curr.constructor === Custos) {\n        this.custos = curr;\n      } else if (curr.isNeume) {\n        this.custos = null;\n      }\n    }\n\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine - 1;\n    var last = notations[lastIndex] || {};\n    while (\n      lastIndex > 0 &&\n      (last.constructor === ChantLineBreak ||\n        last.constructor === Custos ||\n        last.constructor === TextOnly)\n    ) {\n      last = notations[--lastIndex];\n    }\n    var isLastLine =\n      this.notationsStartIndex + this.numNotationsOnLine === notations.length;\n    if (\n      (this.justify && this.extraTextOnlyIndex !== null) ||\n      (width > 0 && isLastLine)\n    ) {\n      // this is the last chant line, or it has extra TextOnly elements at the end\n      if (!this.toJustify) this.findNeumesToJustify(prevLyrics);\n      this.justify =\n        (!isLastLine || last.isDivider) &&\n        this.getWhitespaceOnRight(ctxt) / (this.toJustify.length || 1) <=\n          ctxt.staffInterval * ctxt.maxExtraSpaceInStaffIntervals;\n    }\n\n    if (!this.custos) {\n      // create the automatic custos at the end of the line if there are neumes left in the notations\n      for (\n        i = this.notationsStartIndex + this.numNotationsOnLine;\n        i < notations.length;\n        i++\n      ) {\n        var notation = notations[i];\n\n        if (notation.isNeume) {\n          this.custos = new Custos(true);\n          ctxt.currNotationIndex = i - 1; // make sure the context knows where the custos is\n          this.custos.performLayout(ctxt);\n\n          if (this.justify) {\n            // Put the custos at the very end of the line\n            this.custos.bounds.x =\n              this.staffRight -\n              this.custos.bounds.width -\n              this.custos.leadingSpace;\n          } else {\n            this.custos.bounds.x =\n              prevNeume.bounds.right() + prevNeume.calculatedTrailingSpace;\n          }\n          // nothing more to see here...\n          break;\n        }\n      }\n    }\n\n    if (this.lastLyricsBeforeTextOnly) {\n      this.lastLyrics = this.lastLyricsBeforeTextOnly;\n      delete this.lastLyricsBeforeTextOnly;\n    }\n\n    // find the final lyric and mark it as connecting if needed.\n    if (width > 0) {\n      var whitespace = this.getWhitespaceOnRight();\n      var rightEdge = this.staffRight;\n      if (whitespace < 0) {\n        rightEdge -= whitespace;\n      }\n    }\n    i = 0;\n    while (this.lastLyrics && this.lastLyrics[i]) {\n      let lyrics = this.lastLyrics[i];\n      if (lyrics.allowsConnector()) {\n        lyrics.setNeedsConnector(true, 0);\n        if (width > 0 && ctxt.minLyricWordSpacing < ctxt.hyphenWidth) {\n          whitespace = rightEdge - lyrics.getRight();\n          // shrink the hyphen if we are already out of whitespace or if we would be if we used a regular hyphen:\n          if (whitespace < 0) {\n            var minHyphenWidth = Math.max(\n              ctxt.hyphenWidth + whitespace,\n              this.lastLyrics.length > 1\n                ? ctxt.intraNeumeSpacing\n                : ctxt.minLyricWordSpacing\n            );\n            // we might not need to shift the syllable, but we do want to shrink the hyphen...\n            lyrics.setConnectorWidth(minHyphenWidth);\n          }\n        }\n      }\n      ++i;\n    }\n\n    // if the provided width is less than zero, then set the width of the line\n    // based on the last notation\n    if (width <= 0) {\n      this.staffRight = notations[\n        this.notationsStartIndex + this.numNotationsOnLine - 1\n      ].bounds.right();\n      this.justify = false;\n    }\n\n    // Justify the line if we need to\n    this.justifyElements(ctxt, this.justify, condensableSpaces);\n\n    this.centerDividers();\n\n    this.finishLayout(ctxt);\n  }\n\n  centerDividers() {\n    var lastIndex =\n        this.extraTextOnlyIndex === null\n          ? this.notationsStartIndex + this.numNotationsOnLine\n          : this.extraTextOnlyIndex,\n      curr;\n    for (var i = this.notationsStartIndex; i < lastIndex; i++) {\n      curr = this.score.notations[i];\n\n      if (curr && curr.isDivider) {\n        var j = 1;\n        var prev = this.score.notations[i - 1];\n        var next =\n          i + 1 === lastIndex ? this.custos : this.score.notations[i + 1];\n        if (prev === next && next === this.custos) {\n          prev = this.score.notations[i - 2];\n          // force custos to right edge in this case, since it is a custos that exists\n          // regardless of line break, and would normally be before the double bar, but in this case it ends the line:\n          next.bounds.x = this.staffRight - next.bounds.width;\n        }\n        if (prev && next) {\n          //if (prev instanceof TextOnly || next instanceof TextOnly) continue;\n          var oldBoundsX = curr.bounds.x;\n          var barWidth = curr.bounds.width;\n          var leftPoint =\n              prev instanceof TextOnly && prev.hasLyrics()\n                ? prev.lyrics[0].getRight()\n                : prev.bounds.right(),\n            rightPoint =\n              next instanceof TextOnly && next.hasLyrics()\n                ? next.lyrics[0].getLeft()\n                : next.bounds.x;\n          if (prev instanceof TextOnly) {\n            let prev = this.score.notations.slice(this.notationsStartIndex, i).reverse().find(notation => !(notation instanceof TextOnly));\n            leftPoint = prev ? prev.bounds.right() : 0;\n          }\n          if (leftPoint) {\n            curr.bounds.x = (leftPoint + rightPoint - barWidth) / 2;\n          }\n          if (curr.hasLyrics()) {\n            var offset = oldBoundsX - curr.bounds.x;\n            for (j = curr.lyrics.length - 1; j >= 0; j--) {\n              curr.lyrics[j].bounds.x += offset;\n              curr.lyrics[j].needsLayout = true;\n            }\n          }\n        } else if (\n          i === lastIndex - 1 &&\n          this.justify &&\n          (curr.constructor === DoubleBar || curr.constructor === FullBar)\n        ) {\n          curr.bounds.x = this.staffRight - curr.bounds.width;\n        }\n      }\n    }\n  }\n\n  findNeumesToJustify(prevLyrics) {\n    this.toJustify = [];\n    var prev,\n      curr = null,\n      next = null,\n      nextOrCurr = null,\n      lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n    for (var i = this.notationsStartIndex; i < lastIndex; i++) {\n      prev = nextOrCurr;\n      curr = this.score.notations[i];\n      next = curr.isAccidental && this.score.notations[++i];\n      nextOrCurr = next || curr;\n      var hasLyrics = nextOrCurr.hasLyrics();\n\n      if (!curr || !prev) continue;\n\n      if (\n        this.extraTextOnlyIndex !== null &&\n        i >= this.extraTextOnlyIndex &&\n        curr.constructor === TextOnly\n      )\n        continue;\n\n      if (prev !== null) {\n        LyricArray.mergeIn(prevLyrics, prev.lyrics);\n        if (prev.keepWithNext === true) continue;\n      }\n\n      if (\n        !curr.isDivider &&\n        prevLyrics.length &&\n        prevLyrics[0].allowsConnector() &&\n        hasLyrics\n      )\n        continue;\n\n      if (nextOrCurr.constructor === ChantLineBreak) continue;\n\n      if (nextOrCurr === this.custos && !hasLyrics) continue;\n\n      if (i === 0 && this.score.useDropCap && hasLyrics) continue;\n\n      // otherwise, we can add space before this element\n      this.toJustify.push(curr);\n    }\n    if (nextOrCurr !== null) LyricArray.mergeIn(prevLyrics, nextOrCurr.lyrics);\n    return nextOrCurr;\n  }\n\n  getWhitespaceOnRight(ctxt) {\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n    var last = notations[lastIndex - 1];\n    if (this.extraTextOnlyIndex !== null && last.constructor === TextOnly) {\n      lastIndex = this.extraTextOnlyIndex;\n      last = notations[lastIndex - 1];\n    }\n    var lastRightNeume = last\n      ? last.bounds.right() + last.calculatedTrailingSpace\n      : 0;\n    var lastLyrics = this.lastLyricsBeforeTextOnly || this.lastLyrics;\n    var lastRightLyric = lastLyrics.length\n      ? LyricArray.getRight(lastLyrics)\n      : 0;\n\n    if (this.custos) {\n      lastRightNeume += this.custos.bounds.width + this.custos.leadingSpace;\n      if (this.custos.hasLyrics()) {\n        lastRightLyric = LyricArray.getRight(this.custos.lyrics);\n      }\n    } else if (ctxt && lastIndex < notations.length) {\n      lastRightNeume += Glyphs.CustosLong.bounds.width * ctxt.glyphScaling;\n    }\n    return this.staffRight - Math.max(lastRightLyric, lastRightNeume);\n  }\n\n  justifyElements(ctxt, doJustify, condensableSpaces) {\n    var i;\n    var toJustify = this.toJustify || [];\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // if it wasn't an ideal line break, and the last note is further from the custos than it would have been from its next punctum,\n    // move the custos over.\n    // We do this first so that if it opens up any new whitespace, that gets accounted for when we do the justification\n    var lastNotation =\n      notations[this.notationsStartIndex + this.numNotationsOnLine - 1];\n    var extraSpaceBeforeCustos =\n      this.staffRight < Infinity &&\n      this.custos &&\n      lastNotation.keepWithNext &&\n      this.custos.bounds.x -\n        lastNotation.bounds.right() -\n        lastNotation.calculatedTrailingSpace;\n    if (extraSpaceBeforeCustos > 0) {\n      // first, shrink the hyphen(s) if applicable, to move the neumes closer to the custos:\n      i = 0;\n      while (this.lastLyrics && this.lastLyrics[i]) {\n        let lyrics = this.lastLyrics[i];\n        if (lyrics.allowsConnector()) {\n          var connectorWidth = lyrics.getConnectorWidth();\n          if (ctxt.minLyricWordSpacing < connectorWidth) {\n            var minHyphenWidth = Math.max(\n              connectorWidth - extraSpaceBeforeCustos,\n              this.lastLyrics.length > 1\n                ? ctxt.intraNeumeSpacing\n                : ctxt.minLyricWordSpacing\n            );\n            // we might not need to shift the syllable, but we do want to shrink the hyphen...\n            lyrics.setConnectorWidth(minHyphenWidth);\n          }\n        }\n        ++i;\n      }\n      this.custos.bounds.x =\n        lastNotation.bounds.right() + lastNotation.calculatedTrailingSpace;\n    }\n\n    // first step of justification is to determine how much space we have to use up\n    var extraSpace = this.getWhitespaceOnRight();\n\n    if (\n      Math.abs(extraSpace) < 0.5 ||\n      (extraSpace > 0 && ((doJustify && toJustify.length === 0) || !doJustify))\n    )\n      return;\n\n    this.condensableSpaces = condensableSpaces;\n\n    var curr, prev;\n    var offset = 0;\n    var increment = extraSpace / toJustify.length;\n    var multiplier = 0;\n    var toJustifyIndex = 0;\n    if (extraSpace < 0) {\n      toJustify = condensableSpaces.filter(s => s.condensable > 0);\n      multiplier = extraSpace / condensableSpaces.sum;\n      increment = 0;\n    }\n    var nextToJustify = toJustify[toJustifyIndex++];\n    var incrementOffsetAtNextChance = false;\n    for (i = this.notationsStartIndex; i < lastIndex; i++) {\n      prev = curr;\n      curr = notations[i];\n\n      if (\n        this.extraTextOnlyIndex !== null &&\n        i >= this.extraTextOnlyIndex &&\n        curr.constructor === TextOnly\n      ) {\n        continue;\n      }\n\n      if (!multiplier && curr === this.custos) {\n        if (curr.hasLyrics()) {\n          curr.bounds.x = Math.min(\n            curr.bounds.x +\n              (this.staffRight - LyricArray.getRight(curr.lyrics)),\n            this.staffRight - curr.bounds.width\n          );\n          offset += increment;\n        } else {\n          curr.bounds.x = Math.min(\n            curr.bounds.x + offset,\n            this.staffRight - curr.bounds.width\n          );\n        }\n        continue;\n      }\n\n      if (multiplier) {\n        if (nextToJustify && nextToJustify.notation === curr) {\n          offset += multiplier * nextToJustify.condensable;\n          nextToJustify = toJustify[toJustifyIndex++];\n        }\n      } else if (nextToJustify === curr) {\n        if (prev.hasNoWidth) {\n          incrementOffsetAtNextChance = true;\n        } else {\n          offset += increment;\n        }\n        nextToJustify = toJustify[toJustifyIndex++];\n      } else if (incrementOffsetAtNextChance && !prev.hasNoWidth) {\n        incrementOffsetAtNextChance = false;\n        offset += increment;\n      }\n\n      curr.bounds.x += offset;\n    }\n\n    if (extraSpaceBeforeCustos > 0) {\n      this.custos.bounds.x =\n        lastNotation.bounds.right() + lastNotation.calculatedTrailingSpace;\n    }\n  }\n\n  handleEndBrace(ctxt, note, i) {\n    var startBrace = ctxt.lastStartBrace;\n    if (!startBrace) return;\n    // calculate the y value of the brace by iterating over all notations\n    // under/over the brace.\n    var y;\n    var k = startBrace.notationIndex;\n    var notations = this.score.notations;\n    var dy = ctxt.intraNeumeSpacing / 2; // some safe space between brace and notes.\n    var startNote = startBrace.note;\n\n    if (startBrace.isAbove) {\n      y = Math.min(\n        ctxt.calculateHeightFromStaffPosition(4),\n        ...[startNote, note]\n          .concat(notations.slice(k, i + 1))\n          .map(n => n.bounds.y - dy)\n      );\n    } else {\n      y = Math.max(\n        ctxt.calculateHeightFromStaffPosition(-4),\n        ...[startNote, note]\n          .concat(notations.slice(k, i + 1))\n          .map(n => n.bounds.bottom() + dy)\n      );\n    }\n\n    var addAcuteAccent = false;\n\n    if (startBrace.shape === BraceShape.RoundBrace) {\n      this.braces.push(\n        new RoundBraceVisualizer(\n          ctxt,\n          startBrace.getAttachmentX(startNote),\n          note.braceEnd.getAttachmentX(note),\n          y,\n          startBrace.isAbove\n        )\n      );\n    } else {\n      if (startBrace.shape === BraceShape.AccentedCurlyBrace)\n        addAcuteAccent = true;\n\n      this.braces.push(\n        new CurlyBraceVisualizer(\n          ctxt,\n          startBrace.getAttachmentX(startNote),\n          note.braceEnd.getAttachmentX(note),\n          y,\n          startBrace.isAbove,\n          addAcuteAccent\n        )\n      );\n    }\n\n    delete ctxt.lastStartBrace;\n  }\n\n  finishLayout(ctxt) {\n    this.ledgerLines = []; // clear any existing ledger lines\n\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // an element needs to have a staffPosition property, as well as the standard\n    // bounds property. so it could be a note, or it could be a custos\n    // offsetX can be used to add to the position info for the element,\n    // useful in the case of notes.\n    var processElementForLedgerLine = (\n      element,\n      endElem = element,\n      staffPosition = element.staffPosition,\n      offsetX = element.neume ? element.neume.bounds.x : 0\n    ) => {\n      // do we need a ledger line for this note?\n\n      if (staffPosition >= 5 || staffPosition <= -5) {\n        var x1 = offsetX + element.bounds.x - ctxt.intraNeumeSpacing;\n        var x2 =\n          offsetX +\n          endElem.bounds.x +\n          endElem.bounds.width +\n          ctxt.intraNeumeSpacing;\n\n        // round the staffPosition to the nearest line\n        if (staffPosition > 0)\n          staffPosition = staffPosition - ((staffPosition - 1) % 2);\n        else staffPosition = staffPosition - ((staffPosition + 1) % 2);\n\n        // if we have a ledger line close by, then average out the distance between the two\n        var minLedgerSeparation = ctxt.staffInterval * ctxt.minLedgerSeparation;\n\n        if (\n          this.ledgerLines.length > 0 &&\n          this.ledgerLines[this.ledgerLines.length - 1].x2 +\n            minLedgerSeparation >=\n            x1\n        ) {\n          // average out the distance\n          var half =\n            (x1 - this.ledgerLines[this.ledgerLines.length - 1].x2) / 2;\n          this.ledgerLines[this.ledgerLines.length - 1].x2 += half;\n          x1 -= half;\n        }\n\n        // never let a ledger line extend past the staff width\n        if (x2 > this.staffRight) x2 = this.staffRight;\n\n        // finally, add the ledger line\n        this.ledgerLines.push({\n          x1: x1,\n          x2: x2,\n          staffPosition: staffPosition\n        });\n      }\n    };\n\n    var episemata = []; // keep track of episemata in case we can connect some\n    var startBrace = null;\n    var minY = Number.MAX_VALUE,\n      maxY = Number.MIN_VALUE; // for braces\n\n    var positionNonLyricText = (text, neume, rightX) => {\n      text.setMaxWidth(ctxt, this.staffRight);\n      //text.bounds.x = neume.hasLyrics()? Math.min(...neume.lyrics.map(l => l.bounds.x)) : 0;\n      text.bounds.x = 0;\n      if (rightX)\n        text.bounds.x = (text.bounds.x + rightX - text.bounds.width) / 2;\n      var beyondStaffRight =\n        neume.bounds.x + text.bounds.right() - this.staffRight;\n      if (beyondStaffRight > 0) {\n        text.bounds.x -= beyondStaffRight;\n      }\n      if (neume.bounds.x + text.bounds.x < 0) {\n        text.bounds.x = -neume.bounds.x;\n      }\n    };\n\n    // make a final pass over all of the notes to add any necessary\n    // ledger lines and to smooth out episemata\n    for (var i = this.notationsStartIndex; i < lastIndex; i++) {\n      var neume = notations[i];\n\n      minY = Math.min(minY, neume.bounds.y);\n      maxY = Math.max(maxY, neume.bounds.bottom());\n\n      if (neume.constructor === Custos) {\n        processElementForLedgerLine(neume);\n        continue;\n      }\n\n      // if the AboveLinesText would extend beyond the right edge of the staff, right align it instead\n      if (neume.alText) {\n        for (var j = 0; j < neume.alText.length; j++) {\n          positionNonLyricText(neume.alText[j], neume);\n        }\n      }\n\n      // set up horizontal position of translations\n      if (neume.translationText) {\n        for (j = 0; j < neume.translationText.length; j++) {\n          var text = neume.translationText[j];\n          if (text.endNeume) {\n            var rightX = text.endNeume.hasLyrics()\n              ? text.endNeume.bounds.x +\n                Math.max(...text.endNeume.lyrics.map(l => l.bounds.right()))\n              : text.endNeume.bounds.right();\n            rightX -= neume.bounds.x;\n            positionNonLyricText(text, neume, rightX);\n          } else {\n            positionNonLyricText(text, neume);\n          }\n        }\n      }\n\n      // if it's not a neume then just skip here\n      if (!neume.isNeume) continue;\n\n      for (j = 0; j < neume.ledgerLines.length; j++) {\n        var ll = neume.ledgerLines[j];\n        processElementForLedgerLine(ll.element, ll.endElem, ll.staffPosition);\n      }\n\n      for (j = 0; j < neume.notes.length; j++) {\n        var k,\n          note = neume.notes[j];\n\n        // blend episemata as we're able\n        if (note.episemata.length === 0) episemata = [];\n        for (k = 0; k < note.episemata.length; k++) {\n          var episema = note.episemata[k];\n\n          var spaceBetweenEpisemata = 0;\n\n          // calculate the distance between the last episemata and this one...\n          // lots of code for a simple: currEpisemata.left - prevEpisemata.right\n          if (episemata.length > 0)\n            spaceBetweenEpisemata =\n              neume.bounds.x +\n              episema.bounds.x -\n              (episemata[episemata.length - 1].note.neume.bounds.x +\n                episemata[episemata.length - 1].bounds.right());\n\n          // we try to blend the episema if we're able.\n          if (\n            episemata.length === 0 ||\n            episemata[episemata.length - 1].positionHint !==\n              episema.positionHint ||\n            episemata[episemata.length - 1].terminating === true ||\n            episemata[episemata.length - 1].alignment ===\n              HorizontalEpisemaAlignment.Left ||\n            episemata[episemata.length - 1].alignment ===\n              HorizontalEpisemaAlignment.Center ||\n            episema.alignment === HorizontalEpisemaAlignment.Right ||\n            episema.alignment === HorizontalEpisemaAlignment.Center ||\n            (spaceBetweenEpisemata > ctxt.intraNeumeSpacing * 2 &&\n              note.glyphVisualizer.glyphCode !== GlyphCode.None)\n          ) {\n            // start a new set of episemata to potentially blend\n            episemata = [episema];\n          } else {\n            // blend all previous with this one\n            var newY;\n\n            if (episema.positionHint === MarkingPositionHint.Below)\n              newY = Math.max(\n                episema.bounds.y,\n                episemata[episemata.length - 1].bounds.y\n              );\n            else\n              newY = Math.min(\n                episema.bounds.y,\n                episemata[episemata.length - 1].bounds.y\n              );\n\n            if (episema.bounds.y !== newY) episema.bounds.y = newY;\n            else {\n              for (var l = 0; l < episemata.length; l++)\n                episemata[l].bounds.y = newY;\n            }\n\n            // extend the last episema to meet the new one\n            var newWidth =\n              neume.bounds.x +\n              episema.bounds.x -\n              (episemata[episemata.length - 1].note.neume.bounds.x +\n                episemata[episemata.length - 1].bounds.x);\n            if (newWidth < 0) {\n              newWidth *= -1;\n              episemata[episemata.length - 1].bounds.x -= newWidth;\n            }\n            episemata[episemata.length - 1].bounds.width = newWidth;\n\n            episemata.push(episema);\n          }\n        }\n\n        if (note.braceEnd) this.handleEndBrace(ctxt, note, i);\n\n        if (note.braceStart) {\n          ctxt.lastStartBrace = startBrace = note.braceStart;\n          startBrace.notationIndex = i;\n        }\n      }\n    }\n\n    // if we still have an active brace, that means it spands two chant lines!\n    if (startBrace !== null) {\n      if (this.custos) {\n        // if the next end brace is on the first note following the line break, simply use it with the custos\n        // Do the same if there is only an accidental between\n        // otherwise, make a new end brace to work for this one, and a new start brace for the next line.\n        var nextNotation = notations[lastIndex];\n        var nextNote = nextNotation.notes && nextNotation.notes[0];\n        var nextNotationButOne = notations[lastIndex + 1];\n        var nextNoteButOne =\n          nextNotationButOne &&\n          nextNotationButOne.notes &&\n          nextNotationButOne.notes[0];\n        var braceEnd =\n          (nextNote && nextNote.braceEnd) ||\n          (nextNotation.isAccidental &&\n            nextNoteButOne &&\n            nextNoteButOne.braceEnd);\n        if (braceEnd) {\n          this.custos.braceEnd = braceEnd;\n          this.handleEndBrace(ctxt, this.custos, i);\n        } else {\n          this.braceStart = startBrace;\n          this.custos.braceEnd = new BracePoint(\n            this.custos,\n            startBrace.isAbove,\n            startBrace.shape,\n            BraceAttachment.Right\n          );\n          this.handleEndBrace(ctxt, this.custos, i - 1);\n          ctxt.lastStartBrace = new BracePoint(\n            null,\n            startBrace.isAbove,\n            startBrace.shape,\n            BraceAttachment.Left\n          );\n          ctxt.lastStartBrace.notationIndex = i;\n        }\n      }\n    }\n\n    // don't forget to also include the final custos, which may need a ledger line too\n    if (this.custos) processElementForLedgerLine(this.custos);\n  }\n\n  // this is where the real core of positioning neumes takes place\n  // returns true if positioning was able to fit the neume before rightNotationBoundary.\n  // returns false if cannot fit before given right margin.\n  // fixme: if this returns false, shouldn't we set the connectors on prev to be activated?!\n  positionNotationElement(\n    ctxt,\n    prevLyrics,\n    prev,\n    curr,\n    rightNotationBoundary,\n    condensableSpaces = []\n  ) {\n    if (!condensableSpaces.hasOwnProperty(\"sum\")) condensableSpaces.sum = 0;\n    var i,\n      space = { notation: curr },\n      fixedX = false;\n\n    // To begin we just place the current notation right after the previous,\n    // irrespective of lyrics.\n    // But if the previous neume was part of a polyphonic \"no width\" group and the current is not, or is of a separate group,\n    // we force it to have the same x as the previous group.\n    if (\n      (!curr.hasNoWidth || curr.firstWithNoWidth === curr) &&\n      prev.firstWithNoWidth\n    ) {\n      curr.bounds.x = prev.firstWithNoWidth.bounds.x;\n      fixedX = true;\n    } else {\n      curr.bounds.x = prev.bounds.right();\n    }\n\n    if (\n      (curr.constructor === TextOnly && this.extraTextOnlyIndex === null) ||\n      (!curr.hasLyrics() && prev.calculatedTrailingSpace < 0)\n    ) {\n      // We transfer over the trailing space from the previous neume if the current neume is text only,\n      // so that the text only neume has a better chance at not needing a connector.\n      curr.calculatedTrailingSpace = prev.calculatedTrailingSpace;\n      if (curr.hasLyrics())\n        curr.calculatedTrailingSpace -= curr.lyrics[0].bounds.width;\n      if (curr.constructor === TextOnly && curr.lyrics.length === 1) {\n        curr.lyrics[0].setMaxWidth(\n          ctxt,\n          this.staffRight,\n          this.staffRight -\n            LyricArray.getRight(prevLyrics) -\n            ctxt.minLyricWordSpacing\n        );\n      }\n    } else if (!fixedX) {\n      curr.bounds.x += prev.calculatedTrailingSpace;\n    }\n\n    if (\n      curr.hasLyrics() &&\n      !prev.isDivider &&\n      !prev.isAccidental &&\n      this.numNotationsOnLine > 0 &&\n      (curr.lyrics[0].lyricType === LyricType.SingleSyllable ||\n        curr.lyrics[0].lyricType === LyricType.BeginningSyllable)\n    ) {\n      curr.bounds.x += ctxt.intraNeumeSpacing * ctxt.interVerbalMultiplier;\n    }\n    if (curr.hasNoWidth || fixedX) {\n      space.total = space.condensable = 0;\n    } else if (\n      this.extraTextOnlyIndex !== null &&\n      curr.constructor === TextOnly\n    ) {\n      curr.bounds.x = 0;\n      space.total = space.condensable = 0;\n    } else {\n      space.total = curr.bounds.x - prev.bounds.right();\n      space.condensable = space.total * ctxt.condensingTolerance;\n    }\n\n    // if the previous notation has no lyrics, then we simply make sure the\n    // current notation with lyrics is in the bounds of the line\n    if (prevLyrics.length === 0) {\n      var maxRight = curr.bounds.right() + curr.calculatedTrailingSpace;\n\n      // if the lyric left is negative, then offset the neume appropriately\n      for (i = 0; i < curr.lyrics.length; i++) {\n        let currLyric = curr.lyrics[i];\n        // we hope for the best!\n        // but always use a connector if the lyric has original text that was all used up for the drop cap.\n        let needsConnector =\n          currLyric.allowsConnector() &&\n          currLyric.dropCap &&\n          currLyric.originalText &&\n          !currLyric.text;\n        currLyric.setNeedsConnector(needsConnector);\n        let minLeft = this.staffLeft - this.paddingLeft;\n\n        if (currLyric.getLeft() < minLeft)\n          curr.bounds.x -= currLyric.getLeft() - minLeft;\n\n        space.condensable = Math.min(\n          space.condensable,\n          currLyric.getLeft() - minLeft\n        );\n        maxRight = Math.max(maxRight, currLyric.getRight());\n      }\n\n      if (\n        maxRight >\n        rightNotationBoundary + condensableSpaces.sum + space.condensable\n      )\n        return false;\n      condensableSpaces.push(space);\n      condensableSpaces.sum += space.condensable;\n      return true;\n    } else {\n      if (curr.firstOfSyllable && prevLyrics.length && !curr.hasLyrics()) {\n        curr.bounds.x = Math.max(curr.bounds.x, prevLyrics[0].getRight());\n        space.total = curr.bounds.x - prev.bounds.right();\n        space.condensable = space.total * ctxt.condensingTolerance;\n      }\n    }\n\n    // if the curr notation has no lyrics, then simply check whether there is enough room\n    if (curr.hasLyrics() === false) {\n      if (\n        curr.bounds.right() + curr.calculatedTrailingSpace >\n        rightNotationBoundary + condensableSpaces.sum + space.condensable\n      )\n        return false;\n      condensableSpaces.push(space);\n      condensableSpaces.sum += space.condensable;\n      return true;\n    }\n\n    // if we have multiple lyrics on the current or the previous notation,\n    // we will have to run several passes over each set of lyrics:\n\n    // on the first pass, we will check the absolute left-most placement of the new syllables\n    // we will make additional passes until everything is stable\n    do {\n      var hasShifted = false;\n      var atLeastOneWithoutConnector = false;\n      for (i = 0; i < curr.lyrics.length; i++) {\n        if (!curr.lyrics[i].originalText) continue;\n        var prevLyricRight = 0;\n        let condensableSpacesSincePrevLyric = [];\n        let condensableSpaceSincePrevLyric = null;\n        if (i < prevLyrics.length && prevLyrics[i]) {\n          prevLyricRight = prevLyrics[i].getRight();\n          let notationI = condensableSpaces\n            .map(s => s.notation)\n            .lastIndexOf(prevLyrics[i].notation);\n          if (notationI >= 0) {\n            condensableSpacesSincePrevLyric = condensableSpaces.slice(\n              notationI + 1\n            );\n            condensableSpacesSincePrevLyric.sum = condensableSpacesSincePrevLyric\n              .map(s => s.condensable)\n              .reduce((a, b) => a + b, 0);\n          } else {\n            condensableSpacesSincePrevLyric.sum = 0;\n          }\n        }\n\n        curr.lyrics[i].setNeedsConnector(false); // we hope for the best!\n        var currLyricLeft = curr.lyrics[i].getLeft();\n        if (!prevLyrics[i] || prevLyrics[i].allowsConnector() === false) {\n          // No connector needed, but include space between words if necessary!\n          let extraSpace = currLyricLeft - prevLyricRight - ctxt.minLyricWordSpacing;\n          if (extraSpace < 0) {\n            // push the current element over a bit.\n            let shift =\n              prevLyricRight + ctxt.minLyricWordSpacing - currLyricLeft;\n            curr.bounds.x += shift;\n            condensableSpaceSincePrevLyric = 0;\n            hasShifted = shift > 0.5;\n          } else {\n            condensableSpaceSincePrevLyric = extraSpace;\n          }\n        } else {\n          // we may need a connector yet...\n          if (\n            prevLyricRight + 0.1 >\n            currLyricLeft -\n              condensableSpacesSincePrevLyric.sum -\n              space.condensable\n          ) {\n            // in this case, the lyric elements actually overlap.\n            // so nope, no connector needed. instead, we just place the lyrics together\n            // fixme: for better text layout, we could actually use the kerning values\n            // between the prev and curr lyric elements!\n            let shift = prevLyricRight - currLyricLeft;\n            if (shift < -0.1) {\n              // in this case, the spacing needs to be condensed in the neumes since the last lyric...\n              let multiplier =\n                shift /\n                (condensableSpacesSincePrevLyric.sum + space.condensable);\n              let offset = 0;\n              condensableSpacesSincePrevLyric.forEach(s => {\n                offset += multiplier * s.condensable;\n                s.notation.bounds.x += offset;\n              });\n            }\n            curr.bounds.x += shift;\n            condensableSpaceSincePrevLyric = 0;\n            atLeastOneWithoutConnector = true;\n            hasShifted = shift > 0.5;\n          } else {\n            // bummer, looks like we couldn't merge the syllables together. Better add a connector...\n            if (ctxt.minLyricWordSpacing < ctxt.hyphenWidth) {\n              var spaceBetweenSyls = currLyricLeft - prevLyricRight;\n              if (spaceBetweenSyls < ctxt.hyphenWidth) {\n                var minHyphenWidth =\n                  prevLyrics.length > 1\n                    ? ctxt.intraNeumeSpacing\n                    : ctxt.minLyricWordSpacing;\n                // we might not need to shift the syllable, but we do want to shrink the hyphen...\n                prevLyrics[i].setConnectorWidth(\n                  Math.max(minHyphenWidth, spaceBetweenSyls)\n                );\n              }\n            }\n            prevLyrics[i].setNeedsConnector(true);\n            prevLyricRight = prevLyrics[i].getRight();\n\n            if (prevLyricRight + 0.1 > currLyricLeft) {\n              let shift = prevLyricRight - currLyricLeft;\n              curr.bounds.x += shift;\n              condensableSpaceSincePrevLyric = 0;\n              hasShifted = shift > 0.5;\n            } else {\n              condensableSpaceSincePrevLyric = currLyricLeft - prevLyricRight;\n            }\n          }\n        }\n\n        if (condensableSpaceSincePrevLyric !== null) {\n          if (\n            condensableSpaceSincePrevLyric <\n            condensableSpacesSincePrevLyric.sum + space.condensable\n          ) {\n            // reduce condensable space so that lyrics retain at least the width of a space character between words:\n            let multiplier = condensableSpaceSincePrevLyric / (condensableSpacesSincePrevLyric.sum + space.condensable);\n            space.condensable *= multiplier;\n            if (condensableSpacesSincePrevLyric.sum) {\n              condensableSpacesSincePrevLyric.forEach(space => {\n                space.condensable *= multiplier;\n              });\n              condensableSpaces.sum = condensableSpaces\n                .map(s => s.condensable)\n                .reduce((a, b) => a + b, 0);\n            }\n          }\n        }\n      }\n    } while (\n      curr.lyrics.length > 1 &&\n      hasShifted &&\n      atLeastOneWithoutConnector\n    );\n\n    for (i = Math.min(curr.lyrics.length, prevLyrics.length) - 1; i >= 0; i--) {\n      let pLyrics = prevLyrics[i];\n      if (pLyrics.needsConnector && pLyrics.connectorWidth) {\n        currLyricLeft = curr.lyrics[i].getLeft();\n        prevLyricRight = pLyrics.getRight() - pLyrics.connectorWidth;\n        spaceBetweenSyls = currLyricLeft - prevLyricRight;\n        if (spaceBetweenSyls >= ctxt.hyphenWidth) spaceBetweenSyls = 0;\n        pLyrics.setConnectorWidth(spaceBetweenSyls);\n      }\n    }\n\n    if (\n      curr.bounds.right() + curr.calculatedTrailingSpace <\n        rightNotationBoundary + condensableSpaces.sum + space.condensable &&\n      LyricArray.getRight(curr.lyrics, true) <=\n        this.staffRight + condensableSpaces.sum + space.condensable\n    ) {\n      if (prev.isAccidental) {\n        // move the previous accidental up next to the current note:\n        let shift =\n          curr.bounds.x -\n          prev.bounds.width -\n          prev.calculatedTrailingSpace -\n          prev.bounds.x;\n        prev.bounds.x += shift;\n        if (Math.abs(shift) > 0.1) {\n          let lastCondensable = condensableSpaces[condensableSpaces.length - 1];\n          condensableSpaces.sum -= lastCondensable.condensable;\n          lastCondensable.condensable = 0;\n        }\n      }\n      condensableSpaces.push(space);\n      condensableSpaces.sum += space.condensable;\n      return true;\n    }\n\n    // if we made it this far, then the element won't fit on this line.\n    return false;\n  }\n\n  /**\n   * Find the notation closest to x without going past it\n   * @param {number} x\n   */\n  bisectNotationAtX(x, useMidpoint = true) {\n    let minIndex = -1,\n      maxIndex = Math.min(this.numNotationsOnLine, Infinity),\n      curIndex = minIndex + ((maxIndex - minIndex) >> 1),\n      notations = this.score.notations.slice(\n        this.notationsStartIndex,\n        this.notationsStartIndex + this.numNotationsOnLine\n      );\n\n    while (minIndex < curIndex) {\n      let notation = notations[curIndex];\n      let notationX = notation.bounds.x;\n      if (notationX > x) {\n        maxIndex = curIndex;\n      } else {\n        minIndex = curIndex;\n      }\n      curIndex = minIndex + ((maxIndex - minIndex) >> 1);\n    }\n    let notation = notations[curIndex];\n    if (\n      useMidpoint &&\n      notation &&\n      notation.bounds.width === 0 &&\n      curIndex + 1 < notations.length\n    ) {\n      let nextNotation = notations[curIndex + 1],\n        closenessToLeft = x - notation.bounds.x,\n        closenessToRight = nextNotation.bounds.x - x;\n      if (nextNotation.bounds.width === 0 && closenessToRight < closenessToLeft)\n        ++curIndex;\n    }\n    return notations[curIndex];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.ChantLine.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { NoteShape } from \"./Exsurge.Chant.js\";\nimport {\n  ChantLayoutElement,\n  GlyphCode,\n  GlyphVisualizer,\n  MarkingPositionHint,\n  QuickSvg\n} from \"./Exsurge.Drawing.js\";\n\nexport class Accent extends GlyphVisualizer {\n  constructor(ctxt, note, glyphCode = GlyphCode.AcuteAccent) {\n    super(ctxt, glyphCode);\n    this.note = note;\n    this.positionHint = MarkingPositionHint.Above;\n  }\n\n  performLayout(ctxt) {\n    this.bounds.x = this.note.bounds.x + this.bounds.width / 2; // center on the note itself\n\n    // this puts the acute accent either over the staff lines, or over the note if the\n    // note is above the staff lines\n    this.setStaffPosition(ctxt, Math.max(this.note.staffPosition + 1, 4));\n  }\n}\n\n// for positioning markings on notes\nexport var HorizontalEpisemaAlignment = {\n  Default: 0,\n  Left: 1,\n  Center: 2,\n  Right: 3\n};\n\n/*\n * HorizontalEpisema\n *\n * A horizontal episema marking is it's own visualizer (that is, it implements createSvgFragment)\n */\nexport class HorizontalEpisema extends ChantLayoutElement {\n  constructor(note) {\n    super();\n\n    this.note = note;\n\n    this.positionHint = MarkingPositionHint.Default;\n    this.terminating = false; // indicates if this episema should terminate itself or not\n    this.alignment = HorizontalEpisemaAlignment.Default;\n  }\n\n  performLayout(ctxt) {\n    // following logic helps to keep the episemata away from staff lines if they get too close\n\n    var y = 0,\n      step;\n    var minDistanceAway = ctxt.staffInterval * 0.25; // min distance from neume\n    var glyphCode = this.note.glyphVisualizer.glyphCode;\n    var ledgerLine = this.note.neume.ledgerLines[0] || {};\n    var punctumInclinatumShorten = false;\n\n    if (glyphCode === GlyphCode.PunctumInclinatum) {\n      let notes = this.note.neume.notes,\n        index = notes.indexOf(this.note),\n        prevNote = notes[index - 1];\n      if (\n        prevNote &&\n        prevNote.glyphVisualizer.glyphCode === GlyphCode.PunctumInclinatum &&\n        prevNote.staffPosition - this.note.staffPosition === 1\n      ) {\n        punctumInclinatumShorten = true;\n      }\n    }\n\n    if (this.positionHint === MarkingPositionHint.Below) {\n      y = this.note.bounds.bottom() + minDistanceAway; // the highest the line could be at\n      if (glyphCode === GlyphCode.None)\n        // correction for episema under the second note of a porrectus\n        y += ctxt.staffInterval / 2;\n      step = Math.ceil(y / ctxt.staffInterval);\n      // if there's enough space, center the episema between the punctum and the next staff line\n      if (step % 2 === 0) {\n        step = (step + 3 / 4 + (y - minDistanceAway) / ctxt.staffInterval) / 2;\n      } else {\n        // otherwise, find nearest acceptable third between staff lines (or staff line)\n        step = (Math.ceil((1.5 * y) / ctxt.staffInterval - 0.5) * 2 + 1) / 3;\n\n        // if it's an odd step, that means we're on a staff line,\n        // so we shift to between the staff line\n        if (Math.abs(step) % 2 === 1) {\n          if (Math.abs(step) < 4 || ledgerLine.staffPosition === -step) {\n            step += 2 / 3;\n          } else {\n            // no ledger line, but we don't want the episema to be at exactly the same height the ledger line would occupy:\n            step += 1 / 3;\n          }\n        }\n      }\n    } else {\n      y = this.note.bounds.y - minDistanceAway; // the lowest the line could be at\n      step = Math.floor(y / ctxt.staffInterval);\n      // if there's enough space, center the episema between the punctum and the next staff line\n      if (step % 2 === 0) {\n        step = (step - 3 / 4 + (y + minDistanceAway) / ctxt.staffInterval) / 2;\n      } else {\n        // otherwise, find nearest acceptable third between staff lines (or staff line)\n        step = (Math.floor((1.5 * y) / ctxt.staffInterval - 0.5) * 2 + 1) / 3;\n\n        // find nearest acceptable third between staff lines (or staff line)\n        if (Math.abs(step) % 2 === 1) {\n          // if it was a staff line, we need to adjust\n          if (Math.abs(step) < 4 || ledgerLine.staffPosition === -step) {\n            step -= 2 / 3;\n          } else {\n            // no ledger line, but we don't want the episema to be at exactly the same height the ledger line would occupy:\n            step -= 1 / 3;\n          }\n        }\n      }\n    }\n\n    y = step * ctxt.staffInterval;\n\n    var width = this.note.bounds.width;\n    var x = this.note.bounds.x;\n\n    // The porrectus requires special handling of the note width,\n    // otherwise the width is just that of the note itself\n    if (\n      glyphCode === GlyphCode.Porrectus1 ||\n      glyphCode === GlyphCode.Porrectus2 ||\n      glyphCode === GlyphCode.Porrectus3 ||\n      glyphCode === GlyphCode.Porrectus4\n    )\n      width = ctxt.staffInterval;\n    else if (glyphCode === GlyphCode.None) {\n      width = ctxt.staffInterval;\n      x -= width;\n    } else if (punctumInclinatumShorten) {\n      width *= 2 / 3;\n      x += 0.5 * width;\n    } else if (glyphCode === GlyphCode.PunctumInclinatumLiquescent) {\n      width *= 2 / 3;\n      x += 0.25 * width;\n    }\n\n    // also, the position hint can affect the x/width of the episema\n    if (this.alignment === HorizontalEpisemaAlignment.Left) {\n      width *= 0.8;\n    } else if (this.alignment === HorizontalEpisemaAlignment.Center) {\n      x += width * 0.1;\n      width *= 0.8;\n    } else if (this.alignment === HorizontalEpisemaAlignment.Right) {\n      x += width * 0.2;\n      width *= 0.8;\n    }\n\n    this.bounds.x = x;\n    this.bounds.y = y - ctxt.episemaLineWeight / 2;\n    this.bounds.width = width;\n    this.bounds.height = ctxt.episemaLineWeight;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      this.bounds.width,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    return {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: this.bounds.width,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"horizontalEpisema\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\n/*\n * Ictus\n */\nexport class Ictus extends GlyphVisualizer {\n  constructor(ctxt, note) {\n    super(ctxt, GlyphCode.VerticalEpisemaAbove);\n    this.note = note;\n    this.positionHint = MarkingPositionHint.Default;\n  }\n\n  performLayout(ctxt) {\n    var glyphCode = this.note.glyphVisualizer.glyphCode;\n    // we have to place the ictus further from the note in some cases to avoid a collision with an episema on the same note:\n    var positionHint = this.positionHint || MarkingPositionHint.Below;\n    var staffPosition =\n      this.note.staffPosition +\n      (positionHint === MarkingPositionHint.Above ? 1 : -1);\n    var collisionWithEpisema =\n      this.note.episemata.length > 0 &&\n      (this.note.episemata[0].positionHint || MarkingPositionHint.Above) ===\n        positionHint;\n    var horizontalOffset;\n    var verticalOffset = 1;\n    var shortOffset = -0.2;\n    var extraOffset = 0;\n    var collisionWithStaffLine =\n      staffPosition % 2 &&\n      (Math.abs(staffPosition) < 4 ||\n        (this.note.neume.ledgerLines[0] || {}).staffPosition === staffPosition);\n\n    // The porrectus requires special handling of the note width,\n    // otherwise the width is just that of the note itself\n    if (\n      glyphCode === GlyphCode.Porrectus1 ||\n      glyphCode === GlyphCode.Porrectus2 ||\n      glyphCode === GlyphCode.Porrectus3 ||\n      glyphCode === GlyphCode.Porrectus4\n    )\n      horizontalOffset = ctxt.staffInterval / 2;\n    else if (glyphCode === GlyphCode.None) {\n      horizontalOffset = -ctxt.staffInterval / 2;\n    } else {\n      horizontalOffset = this.note.bounds.width / 2;\n      if (\n        glyphCode === GlyphCode.PunctumInclinatum &&\n        !collisionWithStaffLine &&\n        !collisionWithEpisema\n      ) {\n        extraOffset = 0.3;\n      }\n    }\n\n    if (this.positionHint === MarkingPositionHint.Above) {\n      glyphCode = GlyphCode.VerticalEpisemaAbove;\n      verticalOffset *= -1;\n    } else {\n      glyphCode = GlyphCode.VerticalEpisemaBelow;\n    }\n    if (collisionWithEpisema) {\n      extraOffset = 0.4;\n    }\n    verticalOffset *=\n      ctxt.staffInterval *\n      (extraOffset + (collisionWithStaffLine ? 0.3 : shortOffset));\n\n    this.setGlyph(ctxt, glyphCode);\n    this.setStaffPosition(ctxt, staffPosition);\n\n    this.bounds.x = this.note.bounds.x + horizontalOffset - this.origin.x;\n    this.bounds.y += verticalOffset;\n  }\n}\n\n/*\n * Mora\n */\nexport class Mora extends GlyphVisualizer {\n  constructor(ctxt, note) {\n    super(ctxt, GlyphCode.Mora);\n    this.note = note;\n    this.positionHint = MarkingPositionHint.Default;\n    this.horizontalOffset = ctxt.staffInterval / 2 + this.origin.x;\n  }\n\n  performLayout(ctxt) {\n    this.setGlyph(ctxt, this.glyphCode);\n    this.horizontalOffset = ctxt.staffInterval / 2 + this.origin.x;\n    var staffPosition = this.note.staffPosition;\n\n    this.setStaffPosition(ctxt, staffPosition);\n\n    var verticalOffset = 0;\n    // First, we need to find the next note in the neume.\n    var noteIndex = this.note.neume.notes.indexOf(this.note);\n    var nextNote;\n    if (noteIndex >= 0) {\n      ++noteIndex;\n      if (this.note.neume.notes.length > noteIndex) {\n        nextNote = this.note.neume.notes[noteIndex];\n        if (\n          nextNote.morae &&\n          nextNote.morae.length &&\n          this.note.neume.notes.length === noteIndex + 1\n        ) {\n          // this note is the second to last in its neume, and the last note also has a mora\n          this.horizontalOffset +=\n            nextNote.bounds.right() - this.note.bounds.right();\n        } else if (nextNote.bounds.right() > this.note.bounds.right()) {\n          // center the dot over the following note.\n          this.horizontalOffset =\n            (nextNote.bounds.right() -\n              this.note.bounds.right() -\n              this.bounds.right()) /\n            2;\n        } else {\n          nextNote = null;\n        }\n      } else if (this.note.neume.notes.length === noteIndex) {\n        // this note is the last in its neume:\n        if (this.note.neume.trailingSpace === 0) {\n          // if this was the last note in its neume, we only care about the next note if there is no trailing space at the end of this neume.\n          var notationIndex = this.note.neume.score.notations.indexOf(\n            this.note.neume\n          );\n          if (notationIndex >= 0) {\n            var nextNotation = this.note.neume.score.notations[\n              notationIndex + 1\n            ];\n            if (nextNotation && nextNotation.notes) {\n              nextNote = nextNotation.notes[0];\n            }\n          }\n        } else if (this.note.shape !== NoteShape.Inclinatum) {\n          this.note.neume.calculatedTrailingSpace += this.origin.x;\n        }\n      }\n    }\n\n    if (this.positionHint === MarkingPositionHint.Above) {\n      if (staffPosition % 2 === 0) verticalOffset -= ctxt.staffInterval * 1.75;\n      else verticalOffset -= ctxt.staffInterval * 0.75;\n    } else if (this.positionHint === MarkingPositionHint.Below) {\n      if (staffPosition % 2 === 0) verticalOffset += ctxt.staffInterval * 1.75;\n      else verticalOffset += ctxt.staffInterval * 0.75;\n    } else {\n      if (staffPosition % 2 === 0) {\n        // if the note is in a space and followed by a note on the line below, we often want to move the mora dot up slightly so that it is centered\n        // between the top of the note's space and the top of the following note.\n        if (nextNote && nextNote.staffPosition === staffPosition - 1) {\n          verticalOffset -= ctxt.staffInterval * 0.25;\n        }\n      } else {\n        verticalOffset -= ctxt.staffInterval * 0.75;\n      }\n    }\n    this.bounds.x = this.horizontalOffset + this.note.bounds.right();\n    this.bounds.y += verticalOffset;\n  }\n}\n\n// indicates the shape of the brace\nexport var BraceShape = {\n  RoundBrace: 0,\n  CurlyBrace: 1,\n  AccentedCurlyBrace: 2\n};\n\n// indicates how the brace is alignerd to the note to which it's connected\nexport var BraceAttachment = {\n  Left: 0,\n  Right: 1\n};\n\nexport class BracePoint extends ChantLayoutElement {\n  constructor(note, isAbove, shape, attachment) {\n    super();\n\n    this.note = note;\n    this.isAbove = isAbove;\n    this.shape = shape;\n    this.attachment = attachment;\n  }\n\n  getAttachmentX(note) {\n    if (!note) note = this.note;\n    if (this.attachment === BraceAttachment.Left)\n      return (note.neume ? note.neume.bounds.x : 0) + note.bounds.x;\n    else return (note.neume ? note.neume.bounds.x : 0) + note.bounds.right();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.Markings.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { Step } from \"./Exsurge.Core.js\";\nimport {\n  ChantNotationElement, DividerLineVisualizer, GlyphCode,\n  GlyphVisualizer\n} from \"./Exsurge.Drawing.js\";\n\n/*\n *\n */\nexport class Custos extends ChantNotationElement {\n  // if auto is true, then the custos will automatically try to determine it's height based on\n  // subsequent notations\n  constructor(auto = false) {\n    super();\n    this.auto = auto;\n    this.staffPosition = 0; // default sane value\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    if (this.auto) {\n      var neume = ctxt.findNextNeume();\n\n      if (neume)\n        this.staffPosition = ctxt.activeClef.pitchToStaffPosition(\n          neume.notes[0].pitch\n        );\n\n      // in case there was a weird fa/do clef change, let's sanitize the staffPosition by making sure it is\n      // within reasonable bounds\n      while (this.staffPosition < -6) this.staffPosition += 7;\n\n      while (this.staffPosition > 6) this.staffPosition -= 7;\n    }\n\n    var glyph = new GlyphVisualizer(\n      ctxt,\n      Custos.getGlyphCode(this.staffPosition)\n    );\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n    this.addVisualizer(glyph);\n\n    this.finishLayout(ctxt);\n  }\n\n  // called when layout has changed and our dependencies are no longer good\n  resetDependencies() {\n    // we only need to resolve new dependencies if we're an automatic custos\n    if (this.auto) this.needsLayout = true;\n  }\n\n  static getGlyphCode(staffPosition) {\n    if (staffPosition <= 2) {\n      // ascending custodes\n      if (Math.abs(staffPosition) % 2 === 1) return GlyphCode.CustosLong;\n      else return GlyphCode.CustosShort;\n    } else {\n      // descending custodes\n      if (Math.abs(staffPosition) % 2 === 1) return GlyphCode.CustosDescLong;\n      else return GlyphCode.CustosDescShort;\n    }\n  }\n}\n\n/*\n * Divider\n */\nexport class Divider extends ChantNotationElement {\n  constructor() {\n    super();\n\n    this.isDivider = true;\n    this.resetsAccidentals = true;\n  }\n}\n\n/*\n * QuarterBar\n */\nexport class QuarterBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    this.addVisualizer(new DividerLineVisualizer(ctxt, 2, 4, this));\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * HalfBar\n */\nexport class HalfBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -2, 2, this));\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * FullBar\n */\nexport class FullBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -3, 3, this));\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Insertion Cursor\n */\nexport class InsertionCursor extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -4, 4));\n\n    this.origin.x = this.bounds.width / 2;\n    this.bounds.width = 0;\n    this.bounds.height = 0;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * DominicanBar\n */\nexport class DominicanBar extends Divider {\n  constructor(staffPosition) {\n    super();\n    staffPosition--;\n    var parity = staffPosition % 2;\n\n    this.staffPosition = staffPosition - 2 * parity;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    this.addVisualizer(\n      new DividerLineVisualizer(\n        ctxt,\n        this.staffPosition - 3,\n        this.staffPosition,\n        this\n      )\n    );\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * DoubleBar\n */\nexport class DoubleBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var line0 = new DividerLineVisualizer(ctxt, -3, 3, this);\n    line0.bounds.x = 0;\n    this.addVisualizer(line0);\n\n    var line1 = new DividerLineVisualizer(ctxt, -3, 3, this);\n    line1.bounds.x = ctxt.intraNeumeSpacing * 2 - line1.bounds.width;\n    this.addVisualizer(line1);\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\nexport const AccidentalType = {\n  Flat: -1,\n  Natural: 0,\n  Sharp: 1\n};\n\n/*\n * Accidental\n */\nexport class Accidental extends ChantNotationElement {\n  constructor(staffPosition, accidentalType) {\n    super();\n    this.isAccidental = true;\n    this.keepWithNext = true; // accidentals should always stay connected...\n\n    this.staffPosition = staffPosition;\n    this.accidentalType = accidentalType;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(this.createGlyphVisualizer(ctxt));\n\n    this.finishLayout(ctxt);\n  }\n\n  // creation of the glyph visualizer is refactored out or performLayout\n  // so that clefs can use the same logic for their accidental glyph\n  createGlyphVisualizer(ctxt) {\n    var glyphCode = GlyphCode.Flat;\n\n    switch (this.accidentalType) {\n      case AccidentalType.Natural:\n        glyphCode = GlyphCode.Natural;\n        break;\n      case AccidentalType.Sharp:\n        glyphCode = GlyphCode.Sharp;\n        break;\n      default:\n        glyphCode = GlyphCode.Flat;\n        break;\n    }\n\n    var glyph = new GlyphVisualizer(ctxt, glyphCode);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n\n    return glyph;\n  }\n\n  adjustStep(step) {\n    switch (this.accidentalType) {\n      case AccidentalType.Flat:\n        if (step === Step.Ti) return Step.Te;\n        if (step === Step.Mi) return Step.Me;\n        break;\n      case AccidentalType.Sharp:\n        if (step === Step.Do) return Step.Du;\n        if (step === Step.Fa) return Step.Fu;\n        break;\n      case AccidentalType.Natural:\n        if (step === Step.Te) return Step.Ti;\n        if (step === Step.Me) return Step.Mi;\n        if (step === Step.Du) return Step.Do;\n        if (step === Step.Fu) return Step.Fa;\n        break;\n    }\n\n    // no adjustment needed\n    return step;\n  }\n\n  applyToPitch(pitch) {\n    // no adjusment needed\n    if (this.pitch.octave !== pitch.octave) return;\n\n    pitch.step = this.adjustStep(pitch.step);\n  }\n}\n\n/*\n * Virgula\n */\nexport class Virgula extends Divider {\n  constructor() {\n    super();\n\n    // unlike other dividers a virgula does not reset accidentals\n    this.resetsAccidentals = false;\n\n    // the staff position of the virgula is customizable, so that it\n    // can be placed on different lines (top or bottom) depending on the\n    // notation tradition of what is being notated (e.g., Benedictine has it\n    //  on top line, Norbertine at the bottom)\n    this.staffPosition = 3;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.Virgula);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n\n    this.addVisualizer(glyph);\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.Signs.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport {\n  Units,\n  Pitch,\n  Point,\n  Rect,\n  Margins,\n  Size,\n  Step\n} from \"./Exsurge.Core.js\";\nimport {\n  MarkingPositionHint,\n  LyricType,\n  Lyric,\n  LyricArray,\n  AboveLinesText,\n  ChoralSign,\n  TranslationText,\n  DefaultTrailingSpace,\n  GlyphCode\n} from \"./Exsurge.Drawing.js\";\nimport {\n  Note,\n  LiquescentType,\n  NoteShape,\n  NoteShapeModifiers,\n  ChantMapping,\n  ChantScore,\n  ChantDocument,\n  Clef,\n  DoClef,\n  FaClef,\n  TextOnly,\n  ChantLineBreak\n} from \"./Exsurge.Chant.js\";\nimport * as Markings from \"./Exsurge.Chant.Markings.js\";\nimport * as Signs from \"./Exsurge.Chant.Signs.js\";\nimport * as Neumes from \"./Exsurge.Chant.Neumes.js\";\n\n// reusable reg exps\nvar __syllablesRegex = /(?=\\S)((?:<v>[\\s\\S]*<\\/v>|[^(])*)(?:\\(?([^)]*)\\)?)?/g\nvar __altTranslationRegex = /<alt>(.*?)<\\/alt>|\\[(alt:)?(.*?)\\]/g;\n\nvar __notationsRegex = /z0|z|Z|::|:|[,;][1-6]?|`|[cf][1-4]|cb[1-4]|\\/+| |\\!|-?[a-mA-M][oOwWvVrRsxy#~\\+><_\\.'012345]*(?:\\[[^\\]]*\\]?)*|\\{([^}]+)\\}?/g;\nvar __notationsRegex_group_insideBraces = 1;\n\nvar __bracketedCommandRegex = /^([a-z]+):(.*)/;\n\n// for the brace string inside of [ and ] in notation data\n// the capturing groups are:\n//  1. o or u, to indicate over or under\n//  2. b, cb, or cba, to indicate the brace type\n//  3. 0 or 1 to indicate the attachment point\n//  4. { or } to indicate opening/closing (this group will be null if the metric version is used)\n//  5. a float indicating the millimeter length of the brace (not supported yet)\nvar __braceSpecRegex = /([ou])(b|cb|cba):([01])(?:([{}])|;(\\d*(?:\\.\\d+)?)mm)/;\n\nconst TrailingSpaceForAccidental = ctxt =>\n  ctxt.intraNeumeSpacing * ctxt.accidentalSpaceMultiplier;\nconst TrailingSpaceMultiple = multiplier => ctxt =>\n  ctxt.intraNeumeSpacing * multiplier;\n\nconst regexHeaderEnd = /(?:^|\\n)%%\\s?\\n/;\nconst regexHeaderLine = /^([\\w-_.]+):\\s*((?:[^;\\r\\n]|;[ \\t])*)(?:;|$)/i;\nconst regexHeaderComment = /^%.*/;\nexport class GabcHeader {\n  static getLength(gabc) {\n    let match = gabc.match(regexHeaderEnd);\n    return match ? match.index + match[0].length : 0;\n  }\n\n  constructor(text) {\n    if (typeof text !== \"string\") text = \"\";\n    this.comments = [];\n    this.cValues = {};\n    this.original = \"\";\n    let match = text.match(regexHeaderEnd);\n    if (match) {\n      let txtHeader = (this.original = text.slice(\n        0,\n        match.index + match[0].length\n      ));\n      var lines = txtHeader.split(/\\r?\\n/g);\n      for (var i = 0; i < lines.length; ++i) {\n        let line = lines[i],\n          match = regexHeaderLine.exec(line);\n        if (match) {\n          var key = match[1].replace(/-([a-z])/g, function(a, letter) {\n            return letter.toUpperCase();\n          });\n          if (this[match[1]]) {\n            var arrayName = match[1] + \"Array\";\n            if (!this[arrayName]) {\n              this[arrayName] = [this[match[1]]];\n            }\n            this[arrayName].push(match[2]);\n          } else {\n            this[match[1]] = match[2];\n          }\n          if (key !== match[1]) this[key] = this[match[1]];\n        } else if ((match = regexHeaderComment.exec(line))) {\n          if (line !== \"%%\") {\n            match = regexHeaderLine.exec(line.slice(1));\n            if (match) {\n              let key = match[1].replace(/-([a-z])/g, function(a, letter) {\n                return letter.toUpperCase();\n              });\n              this.cValues[match[1]] = match[2];\n              if (key !== match[1]) this.cValues[key] = match[2];\n            } else {\n              this.comments[i] = line;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  toString() {\n    var result = [];\n    for (let key in this) {\n      if (\n        typeof this[key] !== \"string\" ||\n        /^(length|original|comments|cValues)$/.test(key)\n      ) {\n        continue;\n      }\n      var alternateKey = key.replace(/[A-Z]/g, function(letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n      if (alternateKey !== key && alternateKey in this) continue;\n      var array = this[key + \"Array\"];\n      if (array) {\n        for (var i = 0; i < array.length; ++i) {\n          result.push(key + \": \" + array[i] + \";\");\n        }\n      } else {\n        result.push(key + \": \" + this[key] + \";\");\n      }\n    }\n    for (let key in this.cValues) {\n      if (key.length === 0 || !this.cValues.hasOwnProperty(key)) continue;\n      result.push(\"%\" + key + \": \" + this.cValues[key] + \";\");\n    }\n    for (let i in this.comments) {\n      if (!this.comments.hasOwnProperty(i)) continue;\n      try {\n        result.splice(i, 0, this.comments[i]);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    return result.join(\"\\n\") + \"\\n%%\\n\";\n  }\n}\n\nvar elementCountForNotations = items =>\n  items.reduce((sum, item) => sum + (item.notes ? item.notes.length : 1), 0);\n\nexport class Gabc {\n  // takes gabc source code (without the header info) and returns an array\n  // of ChantMappings describing the chant. A chant score can then be created\n  // fron the chant mappings and later updated via updateMappings() if need\n  // be...\n  static createMappingsFromSource(ctxt, gabcSource) {\n    var headerLength = GabcHeader.getLength(gabcSource);\n    gabcSource = gabcSource.slice(headerLength);\n    var words = this.splitWords(gabcSource);\n\n    // set the default clef\n    ctxt.activeClef = Clef.default();\n\n    var mappings = this.createMappingsFromWords(\n      ctxt,\n      words,\n      clef => (ctxt.activeClef = clef)\n    );\n\n    // always set the last notation to have a trailingSpace of 0. This makes layout for the last chant line simpler\n    if (\n      mappings.length > 0 &&\n      mappings[mappings.length - 1].notations.length > 0\n    )\n      mappings[mappings.length - 1].notations[\n        mappings[mappings.length - 1].notations.length - 1\n      ].trailingSpace = 0;\n\n    return mappings;\n  }\n\n  // A simple general purpose diff algorithm adapted here for comparing\n  // an array of existing mappings with an updated list of gabc words.\n  // note before is an array of mappings, and after is an array of strings\n  // (gabc words).\n  //\n  // This is definitely not the most effecient diff algorithm, but for our\n  // limited needs and source size it seems to work just fine...\n  //\n  // code is adapted from: https://github.com/paulgb/simplediff\n  //\n  // Returns:\n  //   A list of pairs, with the first part of the pair being one of three\n  //   strings ('-', '+', '=') and the second part being a list of values from\n  //   the original before and/or after lists. The first part of the pair\n  //   corresponds to whether the list of values is a deletion, insertion, or\n  //   unchanged, respectively.\n  static diffDescriptorsAndNewWords(before, after) {\n    // Create a map from before values to their indices\n    var oldIndexMap = {},\n      i;\n    for (i = 0; i < before.length; i++) {\n      oldIndexMap[before[i].source] = oldIndexMap[before[i].source] || [];\n      oldIndexMap[before[i].source].push(i);\n    }\n\n    var overlap = [],\n      startOld,\n      startNew,\n      subLength,\n      inew;\n\n    startOld = startNew = subLength = 0;\n\n    for (inew = 0; inew < after.length; inew++) {\n      var _overlap = [];\n      oldIndexMap[after[inew]] = oldIndexMap[after[inew]] || [];\n      for (i = 0; i < oldIndexMap[after[inew]].length; i++) {\n        var iold = oldIndexMap[after[inew]][i];\n        // now we are considering all values of val such that\n        // `before[iold] == after[inew]`\n        _overlap[iold] = ((iold && overlap[iold - 1]) || 0) + 1;\n        if (_overlap[iold] > subLength) {\n          // this is the largest substring seen so far, so store its indices\n          subLength = _overlap[iold];\n          startOld = iold - subLength + 1;\n          startNew = inew - subLength + 1;\n        }\n      }\n      overlap = _overlap;\n    }\n\n    if (subLength === 0) {\n      // If no common substring is found, we return an insert and delete...\n      var result = [];\n\n      if (before.length) result.push([\"-\", before]);\n\n      if (after.length) result.push([\"+\", after]);\n\n      return result;\n    }\n\n    // ...otherwise, the common substring is unchanged and we recursively\n    // diff the text before and after that substring\n    return [].concat(\n      this.diffDescriptorsAndNewWords(\n        before.slice(0, startOld),\n        after.slice(0, startNew)\n      ),\n      [[\"=\", after.slice(startNew, startNew + subLength)]],\n      this.diffDescriptorsAndNewWords(\n        before.slice(startOld + subLength),\n        after.slice(startNew + subLength)\n      )\n    );\n  }\n\n  // this function essentially performs and applies a rudimentary diff between a\n  // previously parsed set of mappings and between a new gabc source text.\n  // the mappings array passed in is changed in place to be updated from the\n  // new source\n  static updateMappingsFromSource(\n    ctxt,\n    mappings,\n    newGabcSource,\n    insertionIndex = null,\n    oldInsertionIndex = null\n  ) {\n    var headerLength = GabcHeader.getLength(newGabcSource);\n    newGabcSource = newGabcSource.slice(headerLength);\n    // always remove the last old mapping since it's spacing/trailingSpace is handled specially\n    mappings.pop();\n\n    if (insertionIndex === null) {\n      insertionIndex = NaN;\n    }\n    if (oldInsertionIndex === null) {\n      oldInsertionIndex = NaN;\n    }\n\n    var newWords = this.splitWords(newGabcSource);\n\n    var results = this.diffDescriptorsAndNewWords(mappings, newWords);\n\n    var index = 0,\n      j,\n      k,\n      l,\n      sourceIndex = 0,\n      wordLength = 0,\n      mapping,\n      elementIndex = 0;\n\n    ctxt.activeClef = Clef.default();\n\n    // apply the results to the mappings, marking notations that need to be processed\n    var lastTranslationNeumes = [];\n    for (var i = 0; i < results.length; i++) {\n      var resultCode = results[i][0];\n      var resultValues = results[i][1];\n\n      if (index > 0)\n        sourceIndex =\n          mappings[index - 1].sourceIndex +\n          mappings[index - 1].source.length +\n          1;\n      if (resultCode === \"=\") {\n        var sourceIndexDiff = sourceIndex - mappings[index].sourceIndex;\n        // skip over ones that haven't changed, but updating the clef and source\n        // index (and pitch in case clef or accidentals have changed) as we go\n        for (j = 0; j < resultValues.length; j++, index++) {\n          mapping = mappings[index];\n          if (\n            elementIndex === 0 &&\n            mapping.notations.length &&\n            mapping.notations[0].isClef\n          ) {\n            // the first clef doesn't get kept as a notation:\n            elementIndex = -1;\n          }\n          if (\n            insertionIndex >= elementIndex ||\n            oldInsertionIndex >= elementIndex\n          ) {\n            // check if the insertion index is within this mapping:\n            let elementCount = elementCountForNotations(mapping.notations);\n            if (\n              (insertionIndex >= elementIndex &&\n                insertionIndex < elementIndex + elementCount) ||\n              (oldInsertionIndex >= elementIndex &&\n                oldInsertionIndex < elementIndex + elementCount)\n            ) {\n              // re-do this mapping:\n              // TODO: check sourceIndex\n              let sourceIndex = mapping.sourceIndex + sourceIndexDiff;\n              mapping = this.createMappingFromWord(\n                ctxt,\n                resultValues[j],\n                sourceIndex,\n                lastTranslationNeumes,\n                insertionIndex - elementIndex\n              );\n              mappings.splice(index, 1, mapping);\n\n              elementIndex += elementCount;\n              continue;\n            }\n            elementIndex += elementCount;\n          }\n          mapping.sourceIndex += sourceIndexDiff;\n          for (k = 0; k < mapping.notations.length; k++) {\n            var curNotation = mapping.notations[k];\n            var prevIsAccidental =\n              mapping.notations[k - 1] && mapping.notations[k - 1].isAccidental;\n            // notify the notation that its dependencies are no longer valid\n            curNotation.resetDependencies();\n\n            if (curNotation.isClef) {\n              ctxt.activeClef = mappings[index].notations[k];\n            }\n\n            if (curNotation.isAccidental) {\n              ctxt.activeClef.activeAccidental = curNotation;\n            } else if (\n              curNotation.resetsAccidentals ||\n              (!prevIsAccidental &&\n                curNotation.hasLyrics() &&\n                curNotation.lyrics[0].lyricType <= LyricType.BeginningSyllable)\n            ) {\n              ctxt.activeClef.resetAccidentals();\n            }\n\n            // update source index, pitch, and automatic braces\n            if (curNotation.notes) {\n              for (l = 0; l < curNotation.notes.length; ++l) {\n                let note = curNotation.notes[l];\n                note.sourceIndex += sourceIndexDiff;\n                note.pitch = ctxt.activeClef.staffPositionToPitch(\n                  note.staffPosition\n                );\n                if (note.braceEnd && note.braceEnd.automatic)\n                  delete note.braceEnd;\n                if (this.needToEndBrace && !note.braceStart && !note.braceEnd) {\n                  note.braceEnd = new Markings.BracePoint(\n                    note,\n                    this.needToEndBrace.isAbove,\n                    this.needToEndBrace.shape,\n                    this.needToEndBrace.attachment ===\n                    Markings.BraceAttachment.Left\n                      ? Markings.BraceAttachment.Right\n                      : Markings.BraceAttachment.Left\n                  );\n                  note.braceEnd.automatic = true;\n                  delete this.needToEndBrace;\n                } else if (note.braceStart && note.braceStart.automatic) {\n                  this.needToEndBrace = note.braceStart;\n                }\n              }\n            }\n            if (curNotation.translationText) {\n              for (l = 0; l < curNotation.translationText.length; ++l) {\n                let transText = curNotation.translationText[l];\n                delete transText.endNeume;\n                curNotation.translationText[l].sourceIndex += sourceIndexDiff;\n                if (\n                  transText.textAnchor === \"end\" &&\n                  lastTranslationNeumes[0]\n                ) {\n                  let lastTranslationText =\n                    lastTranslationNeumes[0].translationText[l];\n                  if (lastTranslationText)\n                    lastTranslationText.endNeume = curNotation;\n                }\n              }\n              lastTranslationNeumes[0] = curNotation;\n            }\n            if (sourceIndexDiff) {\n              if (typeof curNotation.sourceIndex === \"number\") {\n                curNotation.sourceIndex += sourceIndexDiff;\n              }\n              for (l = 0; l < curNotation.lyrics.length; ++l) {\n                curNotation.lyrics[l].sourceIndex += sourceIndexDiff;\n              }\n              if (curNotation.alText) {\n                for (l = 0; l < curNotation.alText.length; ++l) {\n                  curNotation.alText[l].sourceIndex += sourceIndexDiff;\n                }\n              }\n            }\n          }\n        }\n      } else if (resultCode === \"-\") {\n        // delete elements that no longer exist, but first notify all\n        // elements of the change\n        mappings.splice(index, resultValues.length);\n      } else if (resultCode === \"+\") {\n        // insert new ones\n        for (j = 0; j < resultValues.length; j++) {\n          wordLength = resultValues[j].length + 1;\n          mapping = this.createMappingFromWord(\n            ctxt,\n            resultValues[j],\n            sourceIndex,\n            lastTranslationNeumes,\n            insertionIndex - elementIndex\n          );\n\n          if (\n            elementIndex === 0 &&\n            mapping.notations.length &&\n            mapping.notations[0].isClef\n          ) {\n            // the first clef doesn't get kept as a notation:\n            elementIndex = -1;\n            let elementCount = elementCountForNotations(mapping.notations);\n            if (insertionIndex < elementCount) {\n              // re-do the first mapping, because it was broken up incorrectly, due to the presence of the initial clef\n              mapping = this.createMappingFromWord(\n                ctxt,\n                resultValues[j],\n                sourceIndex,\n                lastTranslationNeumes,\n                insertionIndex - elementIndex\n              );\n            }\n          }\n\n          for (k = 0; k < mapping.notations.length; k++) {\n            let curNotation = mapping.notations[k];\n            elementIndex += curNotation.notes ? curNotation.notes.length : 1;\n            if (curNotation.isClef) {\n              ctxt.activeClef = mapping.notations[k];\n            }\n          }\n\n          mappings.splice(index++, 0, mapping);\n          sourceIndex += wordLength;\n        }\n      }\n    }\n\n    // always set the last notation to have a trailingSpace of 0. This makes layout for the last chant line simpler\n    if (\n      mappings.length > 0 &&\n      mappings[mappings.length - 1].notations.length > 0\n    )\n      mappings[mappings.length - 1].notations[\n        mappings[mappings.length - 1].notations.length - 1\n      ].trailingSpace = 0;\n\n    return headerLength;\n  }\n\n  // takes an array of gabc words (like that returned by splitWords below)\n  // and returns an array of ChantMapping objects, one for each word.\n  static createMappingsFromWords(ctxt, words) {\n    var mappings = [];\n    var sourceIndex = 0,\n      wordLength = 0,\n      lastTranslationNeumes = [];\n\n    for (var i = 0; i < words.length; i++) {\n      sourceIndex += wordLength;\n      wordLength = words[i].length + 1;\n      var word = words[i].trim();\n\n      if (word === \"\") continue;\n\n      var mapping = this.createMappingFromWord(\n        ctxt,\n        word,\n        sourceIndex,\n        lastTranslationNeumes\n      );\n\n      if (mapping) mappings.push(mapping);\n    }\n\n    return mappings;\n  }\n\n  // takes a gabc word (like those returned by splitWords below) and returns\n  // a ChantMapping object that contains the gabc word source text as well\n  // as the generated notations.\n  static createMappingFromWord(\n    ctxt,\n    word,\n    sourceIndex,\n    lastTranslationNeumes,\n    insertionIndex\n  ) {\n    var matches = [];\n    var notations = [];\n    var currSyllable = 0;\n\n    while ((match = __syllablesRegex.exec(word))) matches.push(match);\n\n    for (var j = 0; j < matches.length; j++) {\n      var match = matches[j];\n\n      var lyricText = match[1].replace(\n        /(^|<\\/sp>)([\\s\\S]*?)($|<sp>)/g,\n        (_, pre, main, post) => `${pre}${main.replace(/~/g, \" \")}${post}`\n      );\n      var alText = [];\n      var translationText = [];\n      var notationData = match[2];\n\n      // new words reset the accidentals, per the Solesmes style (see LU xviij)\n      // but we need to also make sure that there _is_ a word and that it has notes associated with it.\n      if (\n        currSyllable === 0 &&\n        /[a-z]/i.test(lyricText) &&\n        /[a-m]/i.test(notationData)\n      )\n        ctxt.activeClef.resetAccidentals();\n\n      var items = this.parseNotations(\n        ctxt,\n        notationData,\n        sourceIndex + match.index + match[1].length + 1,\n        insertionIndex\n      );\n\n      if (items.length === 0) continue;\n\n      if (insertionIndex >= 0)\n        insertionIndex -= elementCountForNotations(items);\n\n      items[0].firstOfSyllable = !!lyricText;\n      items[0].firstOfParentheses = true;\n      notations.push(...items);\n\n      // add the lyrics and/or alText to the first notation that makes sense...\n      var notationWithLyrics = null;\n      for (var i = 0; i < items.length; i++) {\n        var cne = items[i];\n\n        if (cne.isAccidental && i + 1 < items.length) continue;\n\n        notationWithLyrics = cne;\n        break;\n      }\n\n      var m = __altTranslationRegex.exec();\n      let indexOffset = 0;\n      while ((m = __altTranslationRegex.exec(lyricText))) {\n        let index = m.index;\n        lyricText =\n          lyricText.slice(0, index) + lyricText.slice(index + m[0].length);\n        index += sourceIndex + indexOffset + 1;\n        if (typeof m[1] === \"string\") {\n          let elem = new AboveLinesText(\n            ctxt,\n            m[1],\n            notationWithLyrics,\n            index + 4\n          );\n          elem.alIndex = alText.push(elem) - 1;\n        } else if (typeof m[2] === \"string\") {\n          let elem = new AboveLinesText(\n            ctxt,\n            m[3],\n            notationWithLyrics,\n            index + m[2].length\n          );\n          elem.alIndex = alText.push(elem) - 1;\n        } else {\n          let elem = new TranslationText(ctxt, m[3], notationWithLyrics, index);\n          elem.translationIndex = translationText.push(elem) - 1;\n        }\n        indexOffset += m[0].length;\n        __altTranslationRegex.exec();\n      }\n      if (lyricText === \"\" && alText.length === 0) continue;\n\n      if (notationWithLyrics === null)\n        return new ChantMapping(word, notations, sourceIndex);\n\n      if (alText.length) notationWithLyrics.alText = alText;\n\n      if (translationText.length) {\n        notationWithLyrics.translationText = translationText;\n        for (i = 0; i < translationText.length; ++i) {\n          let transText = translationText[i];\n          if (transText.textAnchor === \"end\" && lastTranslationNeumes[0]) {\n            let lastTranslationText =\n              lastTranslationNeumes[0].translationText[i];\n            if (lastTranslationText)\n              lastTranslationText.endNeume = notationWithLyrics;\n          }\n        }\n        lastTranslationNeumes[0] = notationWithLyrics;\n      }\n\n      if (lyricText === \"\") continue;\n\n      var proposedLyricType;\n\n      // if it's not a neume or a TextOnly notation, then make the lyrics a directive\n      if (!cne.isNeume && cne.constructor !== TextOnly)\n        proposedLyricType = LyricType.Directive;\n      // otherwise trye to guess the lyricType for the first lyric anyway\n      else if (currSyllable === 0 && j === matches.length - 1)\n        proposedLyricType = LyricType.SingleSyllable;\n      else if (currSyllable === 0 && j < matches.length - 1)\n        proposedLyricType = LyricType.BeginningSyllable;\n      else if (j === matches.length - 1)\n        proposedLyricType = LyricType.EndingSyllable;\n      else proposedLyricType = LyricType.MiddleSyllable;\n\n      currSyllable++;\n\n      var lyrics = this.createSyllableLyrics(\n        ctxt,\n        lyricText,\n        proposedLyricType,\n        notationWithLyrics,\n        items,\n        sourceIndex + match.index\n      );\n\n      if (lyrics === null || lyrics.length === 0) continue;\n\n      notationWithLyrics.lyrics = lyrics;\n    }\n\n    return new ChantMapping(word, notations, sourceIndex);\n  }\n\n  // returns an array of lyrics (an array because each syllable can have multiple lyrics)\n  static createSyllableLyrics(\n    ctxt,\n    text,\n    proposedLyricType,\n    notation,\n    notations,\n    sourceIndex\n  ) {\n    var lyrics = [];\n\n    // an extension to gabc: multiple lyrics per syllable can be separated by a |\n    var lyricTexts = text.split(\"|\");\n\n    for (var i = 0; i < lyricTexts.length; i++) {\n      var lyricText = lyricTexts[i];\n\n      if (i > 0) {\n        if (lyricText.match(/\\s$/)) {\n          lyricText = lyricText.replace(/s+$/, \"\");\n          proposedLyricType = LyricType.EndingSyllable;\n        } else {\n          proposedLyricType = LyricType.MiddleSyllable;\n        }\n      }\n\n      // gabc allows lyrics to indicate the centering part of the text by\n      // using braces to indicate how to center the lyric. So a lyric can\n      // look like \"f{i}re\" or \"{fenced}\" to center on the i or on the entire\n      // word, respectively. Here we determine if the lyric should be spaced\n      // manually with this method of using braces.\n      // however, we don't want to consider any braces inside of v tags, so we\n      // do a bit of text processing here:\n      var lyricTextWithoutVTags = lyricText;\n      const vtagRegex = /<v>[\\s\\S]*?<\\/v>/;\n      let match;\n      const vtags = [];\n      while ((match = vtagRegex.exec(lyricTextWithoutVTags))) {\n        let index = match.index;\n        let length = match[0].length;\n        vtags[index] = length;\n        lyricTextWithoutVTags = lyricTextWithoutVTags.slice(0, index) + lyricTextWithoutVTags.slice(index + length);\n      }\n      var centerStartIndex = lyricTextWithoutVTags.indexOf(\"{\");\n      var centerLength = 0;\n\n      if (centerStartIndex >= 0) {\n        let indexClosingBracket = lyricTextWithoutVTags.indexOf(\"}\");\n\n        if (\n          indexClosingBracket >= 0 &&\n          indexClosingBracket > centerStartIndex\n        ) {\n          const getTrueIndex = (indexWithoutVTags) => {\n            // map indices back to the lyricText with the V tags:\n            let accum = 0;\n            for (let index in vtags) {\n              if (vtags.hasOwnProperty(index) && indexWithoutVTags >= index) {\n                accum += vtags[index];\n              } else {\n                break;\n              }\n            }\n            return indexWithoutVTags + accum;\n          }\n          centerStartIndex = getTrueIndex(centerStartIndex);\n          indexClosingBracket = getTrueIndex(indexClosingBracket);\n          centerLength = indexClosingBracket - centerStartIndex - 1;\n\n          // strip out the brackets:\n          lyricText =\n            lyricText.substring(0, centerStartIndex) +\n            lyricText.substring(centerStartIndex + 1, indexClosingBracket) +\n            lyricText.substring(indexClosingBracket + 1, lyricText.length);\n        } else centerStartIndex = -1; // if there's no closing bracket, don't enable centering\n      }\n\n      var lyric = this.makeLyric(\n        ctxt,\n        lyricText,\n        proposedLyricType,\n        notation,\n        notations,\n        sourceIndex\n      );\n\n      if (centerStartIndex >= 0) {\n        // update indices in case there had been any tags, etc.\n        let textIndex = 0,\n          centerEndIndex = -1;\n        for (let span of lyric.spans) {\n          if (\n            centerStartIndex >= span.index &&\n            centerStartIndex <= span.index + span.text.length\n          ) {\n            centerEndIndex = centerStartIndex + centerLength;\n            centerStartIndex += textIndex - span.index;\n          }\n          if (\n            centerEndIndex >= 0 &&\n            centerEndIndex >= span.index &&\n            centerEndIndex <= span.index + span.text.length\n          ) {\n            centerEndIndex += textIndex - span.index;\n            centerLength = centerEndIndex - centerStartIndex;\n            centerEndIndex = -1;\n            break;\n          }\n          textIndex += span.text.length;\n        }\n        if (centerEndIndex >= 0) {\n          centerEndIndex = textIndex;\n          centerLength = centerEndIndex - centerStartIndex;\n        }\n      }\n\n      // if we have manual lyric centering, then set it now\n      if (centerStartIndex >= 0) {\n        lyric.centerStartIndex = centerStartIndex;\n        lyric.centerLength = centerLength;\n      }\n\n      lyric.lyricIndex = lyrics.push(lyric) - 1;\n      sourceIndex += lyricText.length + 1;\n    }\n    notation.lyrics = lyrics;\n    return lyrics;\n  }\n\n  static makeLyric(ctxt, text, lyricType, notation, notations, sourceIndex) {\n    var elides = false;\n    var forceConnector = false;\n    if (text.length > 1) {\n      if (text[text.length - 1] === \"-\") {\n        forceConnector = true;\n        if (lyricType === LyricType.EndingSyllable)\n          lyricType = LyricType.MiddleSyllable;\n        else if (lyricType === LyricType.SingleSyllable)\n          lyricType = LyricType.BeginningSyllable;\n\n        text = text.slice(0, -1);\n      } else if (text[text.length - 1] === \" \") {\n        if (lyricType === LyricType.MiddleSyllable)\n          lyricType = LyricType.EndingSyllable;\n        else if (lyricType === LyricType.BeginningSyllable)\n          lyricType = LyricType.SingleSyllable;\n\n        text = text.slice(0, -1);\n      } else if (/<\\/i>$/.test(text)) {\n        // must be an elision\n        elides = true;\n      }\n    }\n\n    if (text.match(/^(?:[*†]+|i+j|\\d+)\\.?$/)) lyricType = LyricType.Directive;\n\n    var lyric = new Lyric(\n      ctxt,\n      text,\n      lyricType,\n      notation,\n      notations,\n      sourceIndex\n    );\n    lyric.elidesToNext = elides;\n    if (forceConnector) lyric.setForceConnector(true);\n\n    return lyric;\n  }\n\n  // takes a string of gabc notations and creates exsurge objects out of them.\n  // returns an array of notations.\n  static parseNotations(ctxt, data, sourceIndex, insertionIndex) {\n    // if there is no data, then this must be a text only object\n    if (!data) return [new TextOnly(sourceIndex, 0)];\n\n    var baseSourceIndex = sourceIndex;\n    var sourceLength = 0;\n    var notations = [];\n    var notes = [];\n    var trailingSpace = DefaultTrailingSpace;\n\n    var addToLastSourceGabc = gabc => {\n      if (notes.length > 0) {\n        notes[notes.length - 1].sourceGabc += gabc;\n      }\n    };\n    var addNotation = notation => {\n      // first, if we have any notes left over, we create a neume out of them\n      if (notes.length > 0) {\n        // create neume(s)\n        var neumes = this.createNeumesFromNotes(ctxt, notes, trailingSpace);\n        for (var i = 0; i < neumes.length; i++) notations.push(neumes[i]);\n\n        notes = [];\n      }\n\n      // reset the trailing space\n      trailingSpace = DefaultTrailingSpace;\n\n      // then, if we're passed a notation, let's add it\n      // also, perform chant logic here\n      if (notation !== null) {\n        let prevNotation = notations[notations.length - 1];\n        notation.sourceIndex = sourceIndex;\n        notation.sourceGabc = match[0];\n        if (notation.isClef) {\n          ctxt.activeClef = notation;\n          if (\n            prevNotation &&\n            prevNotation.trailingSpace.isDefault &&\n            prevNotation.isDivider\n          ) {\n            prevNotation.trailingSpace = TrailingSpaceForAccidental;\n          }\n        } else if (notation.isAccidental) {\n          ctxt.activeClef.activeAccidental = notation;\n        } else if (\n          notation.trailingSpace.isDefault &&\n          notation instanceof Signs.Custos\n        ) {\n          notation.trailingSpace = TrailingSpaceForAccidental;\n        } else if (notation.resetsAccidentals)\n          ctxt.activeClef.resetAccidentals();\n\n        notations.push(notation);\n      }\n    };\n\n    var regex = new RegExp(__notationsRegex.source, \"g\");\n    var match;\n\n    while ((match = regex.exec(data))) {\n      sourceIndex = baseSourceIndex + match.index;\n      sourceLength = match[0].length;\n      var atom = match[0];\n\n      // handle the clefs and dividers here\n      switch (atom) {\n        case \",\":\n          addNotation(new Signs.QuarterBar());\n          break;\n        case \"`\":\n          addNotation(new Signs.Virgula());\n          break;\n        case \";\":\n          addNotation(new Signs.HalfBar());\n          break;\n        case \";1\":\n        case \";2\":\n        case \";3\":\n        case \";4\":\n        case \";5\":\n        case \";6\":\n        case \",1\":\n        case \",2\":\n        case \",3\":\n        case \",4\":\n        case \",5\":\n        case \",6\":\n          addNotation(new Signs.DominicanBar(parseInt(atom[1], 10)));\n          break;\n        case \":\":\n          addNotation(new Signs.FullBar());\n          break;\n        case \"::\":\n          addNotation(new Signs.DoubleBar());\n          break;\n        // other gregorio dividers are not supported yet\n\n        case \"c1\":\n          addNotation((ctxt.activeClef = new DoClef(-3, 2)));\n          break;\n\n        case \"c2\":\n          addNotation((ctxt.activeClef = new DoClef(-1, 2)));\n          break;\n\n        case \"c3\":\n          addNotation((ctxt.activeClef = new DoClef(1, 2)));\n          break;\n\n        case \"c4\":\n          addNotation((ctxt.activeClef = new DoClef(3, 2)));\n          break;\n\n        case \"f1\":\n          addNotation((ctxt.activeClef = new FaClef(-3, 2)));\n          break;\n\n        case \"f2\":\n          addNotation((ctxt.activeClef = new FaClef(-1, 2)));\n          break;\n\n        case \"f3\":\n          addNotation((ctxt.activeClef = new FaClef(1, 2)));\n          break;\n\n        case \"f4\":\n          addNotation((ctxt.activeClef = new FaClef(3, 2)));\n          break;\n\n        case \"cb1\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              -3,\n              2,\n              new Signs.Accidental(-4, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"cb2\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              -1,\n              2,\n              new Signs.Accidental(-2, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"cb3\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              1,\n              2,\n              new Signs.Accidental(0, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"cb4\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              3,\n              2,\n              new Signs.Accidental(2, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"z\":\n          addNotation(new ChantLineBreak(true));\n          break;\n        case \"Z\":\n          addNotation(new ChantLineBreak(false));\n          break;\n        case \"z0\":\n          addNotation(new Signs.Custos(true));\n          break;\n\n        // spacing indicators\n        case \"!\":\n          trailingSpace = 0;\n          addToLastSourceGabc(atom);\n          addNotation(null);\n          break;\n        case \" \":\n          // fixme: is this correct? logically what is the difference in gabc\n          // between putting a space between notes vs putting '//' between notes?\n          trailingSpace = TrailingSpaceMultiple(2);\n          addToLastSourceGabc(atom);\n          addNotation(null);\n          break;\n\n        default:\n          // might be a number of slashes, a custos, might be an accidental, or might be a note\n          if (atom[0] === \"/\") {\n            trailingSpace = TrailingSpaceMultiple(atom.length);\n            addToLastSourceGabc(atom);\n            addNotation(null);\n          } else if (atom.length > 1 && atom[1] === \"+\") {\n            // custos\n            var custos = new Signs.Custos();\n\n            custos.staffPosition = this.gabcHeightToExsurgeHeight(atom[0]);\n\n            addNotation(custos);\n          } else if (atom.length > 1 && /[xy#]/.test(atom[1])) {\n            var accidentalType;\n\n            switch (atom[1]) {\n              case \"y\":\n                accidentalType = Signs.AccidentalType.Natural;\n                break;\n              case \"#\":\n                accidentalType = Signs.AccidentalType.Sharp;\n                break;\n              default:\n                accidentalType = Signs.AccidentalType.Flat;\n                break;\n            }\n\n            var noteArray = [];\n            this.createNoteFromData(\n              ctxt,\n              ctxt.activeClef,\n              atom,\n              noteArray,\n              sourceIndex\n            );\n            var accidental = new Signs.Accidental(\n              noteArray[0].staffPosition,\n              accidentalType\n            );\n            accidental.pitch = this.gabcHeightToExsurgePitch(\n              ctxt.activeClef,\n              atom[0]\n            );\n            accidental.sourceIndex = sourceIndex;\n            accidental.sourceLength = sourceLength;\n            accidental.trailingSpace = TrailingSpaceForAccidental;\n\n            ctxt.activeClef.activeAccidental = accidental;\n\n            addNotation(accidental);\n          } else if (atom.length > 1 && atom[0] === \"{\") {\n            trailingSpace = 0;\n            addNotation(null);\n            let bracketedNotations = this.parseNotations(\n              ctxt,\n              match[__notationsRegex_group_insideBraces],\n              sourceIndex + 1\n            );\n            // Set the width of these notations to 0\n            bracketedNotations.forEach(neume => {\n              neume.hasNoWidth = true;\n              neume.firstWithNoWidth = bracketedNotations[0];\n            });\n            notations.push(...bracketedNotations);\n          } else {\n            // looks like it's a note\n            if (insertionIndex === -1) {\n              trailingSpace = TrailingSpaceMultiple(1);\n              addNotation(null);\n            }\n            this.createNoteFromData(\n              ctxt,\n              ctxt.activeClef,\n              atom,\n              notes,\n              sourceIndex\n            );\n            --insertionIndex;\n          }\n          break;\n      }\n    }\n\n    // finish up any remaining notes we have left\n    addNotation(null);\n\n    return notations;\n  }\n\n  static createNeumesFromNotes(ctxt, notes, finalTrailingSpace) {\n    var neumes = [];\n    var firstNoteIndex = 0;\n    var currNoteIndex = 0;\n\n    // here we use a simple finite state machine to create the neumes from the notes\n    // createNeume is helper function which returns the next state after a neume is created\n    // (unknownState). Each state object has a neume() function and a handle() function.\n    // neume() allows us to create the neume of the state in the event that we run out\n    // of notes. handle() gives the state an opportunity to examine the currNote and\n    // determine what to do...either transition to a different neume/state, or\n    // continue building the neume of that state. handle() returns the next state\n\n    var createNeume = function(neume, includeCurrNote, includePrevNote = true) {\n      // add the notes to the neume\n      var lastNoteIndex;\n      if (includeCurrNote) lastNoteIndex = currNoteIndex;\n      else if (includePrevNote) lastNoteIndex = currNoteIndex - 1;\n      else lastNoteIndex = currNoteIndex - 2;\n\n      if (lastNoteIndex < 0) return;\n\n      while (firstNoteIndex <= lastNoteIndex) {\n        let note = notes[firstNoteIndex++];\n        neume.addNote(note);\n        if (note.alText) {\n          if (!neume.alText) neume.alText = [];\n          neume.alText.push(note.alText);\n          note.alText.noteIndex = firstNoteIndex - 1;\n        }\n      }\n\n      neumes.push(neume);\n\n      if (includeCurrNote === false) {\n        currNoteIndex--;\n\n        if (includePrevNote === false) currNoteIndex--;\n\n        neume.keepWithNext = true;\n        if (notes[currNoteIndex + 1].shape === NoteShape.Quilisma)\n          neume.trailingSpace = 0;\n        else {\n          neume.trailingSpace = TrailingSpaceMultiple(1);\n          neume.allowLineBreakBeforeNext = true;\n        }\n      }\n\n      return unknownState;\n    };\n\n    var unknownState = {\n      neume: function() {\n        return new Neumes.Punctum();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape === NoteShape.Virga) return virgaState;\n        else if (currNote.shape === NoteShape.Stropha) return apostrophaState;\n        else if (currNote.shape === NoteShape.Oriscus) return oriscusState;\n        else if (currNote.shape === NoteShape.Inclinatum)\n          return punctaInclinataState;\n        else if (currNote.shapeModifiers & NoteShapeModifiers.Cavum)\n          return createNeume(new Neumes.Punctum(), true);\n        else return punctumState;\n      }\n    };\n\n    var punctumState = {\n      neume: function() {\n        return new Neumes.Punctum();\n      },\n      handle: function(currNote, prevNote, notesRemaining) {\n        if (currNote.shape || prevNote.liquescent === LiquescentType.Small) {\n          var neume = new Neumes.Punctum();\n          var state = createNeume(neume, false);\n          // if the current note is on a space within the staff AND the previous note is on the line below AND the previous note has a mora,\n          // then we went the trailing space at its default of intraNeumeSpacing to prevent the dot from running up into the current note.\n          // Otherwise, we want no trailing space.\n          if (\n            currNote.staffPosition > prevNote.staffPosition &&\n            (currNote.staffPosition % 2 === 1 ||\n              prevNote.staffPosition !== currNote.staffPosition - 1 ||\n              !prevNote.morae ||\n              prevNote.morae.length === 0)\n          )\n            neume.trailingSpace = 0;\n          return state;\n        }\n\n        if (currNote.staffPosition > prevNote.staffPosition) {\n          if (currNote.ictus)\n            currNote.ictus.positionHint = MarkingPositionHint.Above;\n          return podatusState;\n        } else if (currNote.staffPosition < prevNote.staffPosition) {\n          if (prevNote.ictus)\n            prevNote.ictus.positionHint = MarkingPositionHint.Above;\n          if (currNote.shape === NoteShape.Inclinatum) return climacusState;\n          else if (prevNote.staffPosition - currNote.staffPosition <= 4) {\n            return clivisState;\n          }\n        } else if (!prevNote.morae || !prevNote.morae.length) {\n          return distrophaState;\n        }\n        return createNeume(new Neumes.Punctum(), false);\n      }\n    };\n\n    var punctaInclinataState = {\n      neume: function() {\n        return new Neumes.PunctaInclinata();\n      },\n      handle: function() {\n        if (currNote.shape !== NoteShape.Inclinatum)\n          return createNeume(new Neumes.PunctaInclinata(), false);\n        else return punctaInclinataState;\n      }\n    };\n\n    var oriscusState = {\n      neume: function() {\n        return new Neumes.Oriscus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape === NoteShape.Default) {\n          if (currNote.staffPosition > prevNote.staffPosition) {\n            prevNote.shapeModifiers |= NoteShapeModifiers.Ascending;\n            return createNeume(new Neumes.PesQuassus(), true);\n          } else if (currNote.staffPosition < prevNote.staffPosition) {\n            prevNote.shapeModifiers |= NoteShapeModifiers.Descending;\n            return createNeume(new Neumes.Clivis(), true);\n          }\n        }\n        // stand alone oriscus\n        var neume = new Neumes.Oriscus(),\n          state = createNeume(neume, false);\n        // if the current note is on a space within the staff AND the previous note is on the line below AND the previous note has a mora,\n        // then we went the trailing space at its default of intraNeumeSpacing to prevent the dot from running up into the current note.\n        // Otherwise, we want no trailing space.\n        if (\n          currNote.staffPosition > prevNote.staffPosition &&\n          (currNote.staffPosition % 2 === 1 ||\n            prevNote.staffPosition !== currNote.staffPosition - 1 ||\n            !prevNote.morae ||\n            prevNote.morae.length === 0)\n        )\n          neume.trailingSpace = 0;\n        return state;\n      }\n    };\n\n    var podatusState = {\n      neume: function() {\n        return new Neumes.Podatus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition > prevNote.staffPosition) {\n          if (currNote.ictus)\n            currNote.ictus.positionHint = MarkingPositionHint.Above;\n          if (prevNote.ictus)\n            prevNote.ictus.positionHint = MarkingPositionHint.Below;\n\n          if (prevNote.shape === NoteShape.Oriscus) return salicusState;\n          else return scandicusState;\n        } else if (currNote.staffPosition < prevNote.staffPosition) {\n          if (currNote.shape === NoteShape.Inclinatum)\n            return pesSubpunctisState;\n          else return torculusState;\n        } else return createNeume(new Neumes.Podatus(), false);\n      }\n    };\n\n    var clivisState = {\n      neume: function() {\n        return new Neumes.Clivis();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition > prevNote.staffPosition\n        ) {\n          if (currNote.ictus)\n            currNote.ictus.positionHint = MarkingPositionHint.Above;\n          return porrectusState;\n        } else return createNeume(new Neumes.Clivis(), false);\n      }\n    };\n\n    var climacusState = {\n      neume: function() {\n        return new Neumes.Climacus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape !== NoteShape.Inclinatum)\n          return createNeume(new Neumes.Climacus(), false);\n        else return state;\n      }\n    };\n\n    var porrectusState = {\n      neume: function() {\n        return new Neumes.Porrectus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return createNeume(new Neumes.PorrectusFlexus(), true);\n        else return createNeume(new Neumes.Porrectus(), false);\n      }\n    };\n\n    var pesSubpunctisState = {\n      neume: function() {\n        return new Neumes.PesSubpunctis();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape !== NoteShape.Inclinatum)\n          return createNeume(new Neumes.PesSubpunctis(), false);\n        else return state;\n      }\n    };\n\n    var salicusState = {\n      neume: function() {\n        return new Neumes.Salicus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition < prevNote.staffPosition)\n          return salicusFlexusState;\n        else return createNeume(new Neumes.Salicus(), false);\n      }\n    };\n\n    var salicusFlexusState = {\n      neume: function() {\n        return new Neumes.SalicusFlexus();\n      },\n      handle: function(currNote, prevNote) {\n        return createNeume(new Neumes.SalicusFlexus(), false);\n      }\n    };\n\n    var scandicusState = {\n      neume: function() {\n        return new Neumes.Scandicus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          prevNote.shape === NoteShape.Virga &&\n          currNote.shape === NoteShape.Inclinatum &&\n          currNote.staffPosition < prevNote.staffPosition\n        ) {\n          // if we get here, then it seems we have a podatus, now being followed by a climacus\n          // rather than a scandicus. react accordingly\n          return createNeume(new Neumes.Podatus(), false, false);\n        } else if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return scandicusFlexusState;\n        else return createNeume(new Neumes.Scandicus(), false);\n      }\n    };\n\n    var scandicusFlexusState = {\n      neume: function() {\n        return new Neumes.ScandicusFlexus();\n      },\n      handle: function(currNote, prevNote) {\n        return createNeume(new Neumes.ScandicusFlexus(), false);\n      }\n    };\n\n    var virgaState = {\n      neume: function() {\n        return new Neumes.Virga();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Inclinatum &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return climacusState;\n        else if (\n          currNote.shape === NoteShape.Virga &&\n          currNote.staffPosition === prevNote.staffPosition\n        )\n          return bivirgaState;\n        else return createNeume(new Neumes.Virga(), false);\n      }\n    };\n\n    var bivirgaState = {\n      neume: function() {\n        return new Neumes.Bivirga();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Virga &&\n          currNote.staffPosition === prevNote.staffPosition\n        )\n          return createNeume(new Neumes.Trivirga(), true);\n        else return createNeume(new Neumes.Bivirga(), false);\n      }\n    };\n\n    var apostrophaState = {\n      neume: function() {\n        return new Neumes.Apostropha();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition === prevNote.staffPosition)\n          return distrophaState;\n        else return createNeume(new Neumes.Apostropha(), false);\n      }\n    };\n\n    var distrophaState = {\n      neume: function() {\n        return new Neumes.Distropha();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition === prevNote.staffPosition) {\n          if (prevNote.morae && prevNote.morae.length) {\n            return createNeume(new Neumes.Distropha(), false);\n          } else {\n            return tristrophaState;\n          }\n        } else return createNeume(new Neumes.Apostropha(), false, false);\n      }\n    };\n\n    var tristrophaState = {\n      neume: function() {\n        return new Neumes.Tristropha();\n      },\n      handle: function(currNote, prevNote) {\n        // we only create a tristropha when the note run ends after three\n        // and the neume() function of this state is called. Otherwise\n        // we always interpret the third note to belong to the next sequence\n        // of notes.\n        //\n        // fixme: gabc allows any number of punctum/stropha in succession...\n        // is this a valid neume type? Or is it just multiple *stropha neumes\n        // in succession? Should we simplify the apostropha/distropha/\n        // tristropha classes to a generic stropha neume that can have 1 or\n        // more successive notes?\n        return createNeume(new Neumes.Distropha(), false, false);\n      }\n    };\n\n    var torculusState = {\n      neume: function() {\n        return new Neumes.Torculus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition > prevNote.staffPosition\n        ) {\n          let prevNoteButOne = notes[currNoteIndex - 2];\n          if (\n            prevNoteButOne &&\n            prevNoteButOne.staffPosition - prevNote.staffPosition <= 4\n          ) {\n            if (currNote.ictus)\n              currNote.ictus.positionHint = MarkingPositionHint.Above;\n            return torculusResupinusState;\n          }\n        }\n        return createNeume(new Neumes.Torculus(), false);\n      }\n    };\n\n    var torculusResupinusState = {\n      neume: function() {\n        return new Neumes.TorculusResupinus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return createNeume(new Neumes.TorculusResupinusFlexus(), true);\n        else return createNeume(new Neumes.TorculusResupinus(), false);\n      }\n    };\n\n    var state = unknownState;\n\n    while (currNoteIndex < notes.length) {\n      var prevNote = currNoteIndex > 0 ? notes[currNoteIndex - 1] : null;\n      var currNote = notes[currNoteIndex];\n\n      state = state.handle(\n        currNote,\n        prevNote,\n        notes.length - 1 - currNoteIndex\n      );\n\n      // if we are on the last note, then try to create a neume if we need to.\n      if (currNoteIndex === notes.length - 1 && state !== unknownState)\n        createNeume(state.neume(), true);\n\n      currNoteIndex++;\n    }\n\n    if (neumes.length > 0) {\n      if (!finalTrailingSpace.isDefault) {\n        neumes[neumes.length - 1].trailingSpace = finalTrailingSpace;\n        neumes[neumes.length - 1].keepWithNext = true;\n\n        if (finalTrailingSpace > 0)\n          neumes[neumes.length - 1].allowLineBreakBeforeNext = neumes[\n            neumes.length - 1\n          ].keepWithNext = true;\n      }\n    }\n\n    return neumes;\n  }\n\n  // appends any notes created to the notes array argument\n  static createNoteFromData(ctxt, clef, data, notes, sourceIndex) {\n    var note = new Note();\n    note.sourceIndex = sourceIndex;\n    note.sourceGabc = data;\n\n    if (data.length < 1) throw \"Invalid note data: \" + data;\n\n    if (data[0] === \"-\") {\n      // liquescent initio debilis\n      note.liquescent = LiquescentType.InitioDebilis;\n      data = data.substring(1);\n    }\n\n    if (data.length < 1) throw \"Invalid note data: \" + data;\n\n    // the next char is always the pitch\n    var pitch = this.gabcHeightToExsurgePitch(clef, data[0]);\n\n    if (data[0] === data[0].toUpperCase()) note.shape = NoteShape.Inclinatum;\n\n    note.staffPosition = this.gabcHeightToExsurgeHeight(data[0]);\n    note.pitch = pitch;\n\n    var mark;\n\n    var episemaNoteIndex = notes.length;\n    var episemaNote = note;\n\n    // process the modifiers\n    for (var i = 1; i < data.length; i++) {\n      var c = data[i];\n      var lookahead = \"\\0\";\n\n      var haveLookahead = i + 1 < data.length;\n      if (haveLookahead) lookahead = data[i + 1];\n\n      switch (c) {\n        // rhythmic markings\n        case \".\":\n          mark = null;\n\n          // gabc supports putting up to two morae on each note, by repeating the\n          // period. here, we check to see if we've already created a mora for the\n          // note, and if so, we simply force the second one to have an Above\n          // position hint. if a user decides to try to put position indicators\n          // on the double morae (such as 1 or 2), then really the behavior is\n          // not defined by gabc, so it's on the user to figure it out.\n          if (note.morae.length > 0 && notes.length) {\n            var previousNote = notes.slice(-1)[0];\n            var previousMora = note.morae.slice(-1)[0];\n            previousMora.note = previousNote;\n          }\n\n          mark = new Markings.Mora(ctxt, note);\n          if (haveLookahead && lookahead === \"1\")\n            mark.positionHint = MarkingPositionHint.Above;\n          else if (haveLookahead && lookahead === \"0\")\n            mark.positionHint = MarkingPositionHint.Below;\n\n          note.morae.push(mark);\n          break;\n\n        case \"_\":\n          var episemaHadModifier = false;\n\n          mark = new Markings.HorizontalEpisema(episemaNote);\n          while (haveLookahead) {\n            if (lookahead === \"0\")\n              mark.positionHint = MarkingPositionHint.Below;\n            else if (lookahead === \"1\")\n              mark.positionHint = MarkingPositionHint.Above;\n            else if (lookahead === \"2\") mark.terminating = true;\n            // episema terminates\n            else if (lookahead === \"3\")\n              mark.alignment = Markings.HorizontalEpisemaAlignment.Left;\n            else if (lookahead === \"4\")\n              mark.alignment = Markings.HorizontalEpisemaAlignment.Center;\n            else if (lookahead === \"5\")\n              mark.alignment = Markings.HorizontalEpisemaAlignment.Right;\n            else break;\n\n            // the gabc definition for episemata is so convoluted...\n            // - double underscores create episemata over multiple notes.\n            // - unless the _ has a 0, 1, 3, 4, or 5 modifier, which means\n            //   another underscore puts a second episema on the same note\n            // - (when there's a 2 lookahead, then this is treated as an\n            //   unmodified underscore, so another underscore would be\n            //   added to previous notes\n            if (\n              mark.alignment !== Markings.HorizontalEpisemaAlignment.Default &&\n              mark.positionHint !== MarkingPositionHint.Below\n            )\n              episemaHadModifier = true;\n\n            i++;\n            haveLookahead = i + 1 < data.length;\n\n            if (haveLookahead) lookahead = data[i + 1];\n          }\n\n          // since gabc allows consecutive underscores which is a shortcut to\n          // apply the episemata to previous notes, we keep track of that here\n          // in order to add the new episema to the correct note.\n\n          if (episemaNote) episemaNote.episemata.push(mark);\n\n          if (episemaNote === note && episemaHadModifier) episemaNote = note;\n          else if (episemaNoteIndex >= 0 && notes.length > 0)\n            episemaNote = notes[--episemaNoteIndex];\n\n          break;\n\n        case \"'\":\n          mark = new Markings.Ictus(ctxt, note);\n          if (haveLookahead && lookahead === \"1\")\n            mark.positionHint = MarkingPositionHint.Above;\n          else if (haveLookahead && lookahead === \"0\")\n            mark.positionHint = MarkingPositionHint.Below;\n          else if (note.shape === NoteShape.Virga)\n            // ictus on a virga goes above by default:\n            mark.positionHint = MarkingPositionHint.Above;\n\n          note.ictus = mark;\n          break;\n\n        //note shapes\n        case \"r\":\n          if (haveLookahead && /^[0-5]$/.test(lookahead)) {\n            switch (lookahead) {\n              case \"0\":\n                note.shapeModifiers |= NoteShapeModifiers.Cavum;\n                note.shapeModifiers |= NoteShapeModifiers.Linea;\n                break;\n              case \"1\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.AcuteAccent\n                );\n                break;\n              case \"2\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.GraveAccent\n                );\n                break;\n              case \"3\":\n                note.accent = new Markings.Accent(ctxt, note, GlyphCode.Circle);\n                break;\n              case \"4\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.Semicircle\n                );\n                break;\n              case \"5\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.ReversedSemicircle\n                );\n                break;\n              default:\n            }\n            i++;\n          } else note.shapeModifiers |= NoteShapeModifiers.Cavum;\n          break;\n        \n        case \"R\":\n          note.shapeModifiers |= NoteShapeModifiers.Linea;\n          break;\n\n        case \"s\":\n          if (note.shape === NoteShape.Stropha) {\n            // if we're already a stropha, that means this is gabc's\n            // quick stropha feature (e.g., gsss). create a new note\n            let newNote = new Note();\n            newNote.sourceIndex = sourceIndex + i;\n            newNote.sourceGabc = \"s\";\n            newNote.staffPosition = note.staffPosition;\n            newNote.pitch = note.pitch;\n            notes.push(note);\n            note = newNote;\n            episemaNoteIndex++; // since a new note was added, increase the index here\n          }\n\n          note.shape = NoteShape.Stropha;\n          break;\n\n        case \"v\":\n          if (note.shape === NoteShape.Virga) {\n            // if we're already a stropha, that means this is gabc's\n            // quick virga feature (e.g., gvvv). create a new note\n            let newNote = new Note();\n            newNote.sourceIndex = sourceIndex + i;\n            newNote.sourceGabc = \"v\";\n            newNote.staffPosition = note.staffPosition;\n            newNote.pitch = note.pitch;\n            notes.push(note);\n            note = newNote;\n            episemaNoteIndex++; // since a new note was added, increase the index here\n          }\n\n          note.shape = NoteShape.Virga;\n          break;\n        \n        case \"V\":\n          note.shape = NoteShape.Virga;\n          note.shapeModifers |= NoteShapeModifiers.Reverse;\n          break;\n\n        case \"w\":\n          note.shape = NoteShape.Quilisma;\n          break;\n\n        case \"o\":\n          note.shape = NoteShape.Oriscus;\n          if (haveLookahead && lookahead === \"<\") {\n            note.shapeModifiers |= NoteShapeModifiers.Ascending;\n            i++;\n          } else if (haveLookahead && lookahead === \">\") {\n            note.shapeModifiers |= NoteShapeModifiers.Descending;\n            i++;\n          }\n          break;\n\n        case \"O\":\n          note.shape = NoteShape.Oriscus;\n          if (haveLookahead && lookahead === \"<\") {\n            note.shapeModifiers |=\n              NoteShapeModifiers.Ascending | NoteShapeModifiers.Stemmed;\n            i++;\n          } else if (haveLookahead && lookahead === \">\") {\n            note.shapeModifiers |=\n              NoteShapeModifiers.Descending | NoteShapeModifiers.Stemmed;\n            i++;\n          } else note.shapeModifiers |= NoteShapeModifiers.Stemmed;\n          break;\n\n        // liquescents\n        case \"~\":\n          if (note.shape === NoteShape.Inclinatum)\n            note.liquescent |= LiquescentType.Small;\n          else if (note.shape === NoteShape.Oriscus)\n            note.liquescent |= LiquescentType.Large;\n          else note.liquescent |= LiquescentType.Small;\n          break;\n        case \"<\":\n          note.liquescent |= LiquescentType.Ascending;\n          break;\n        case \">\":\n          note.liquescent |= LiquescentType.Descending;\n          break;\n\n        // accidentals\n        case \"x\":\n          if (note.pitch.step === Step.Mi) note.pitch.step = Step.Me;\n          else if (note.pitch.step === Step.Ti) note.pitch.step = Step.Te;\n          break;\n        case \"y\":\n          if (note.pitch.step === Step.Te) note.pitch.step = Step.Ti;\n          else if (note.pitch.step === Step.Me) note.pitch.step = Step.Mi;\n          else if (note.pitch.step === Step.Du) note.pitch.step = Step.Do;\n          else if (note.pitch.step === Step.Fu) note.pitch.step = Step.Fa;\n          break;\n        case \"#\":\n          if (note.pitch.step === Step.Do) note.pitch.step = Step.Du;\n          else if (note.pitch.step === Step.Fa) note.pitch.step = Step.Fu;\n          break;\n\n        // gabc special item groups\n        case \"[\":\n          // read in the whole group and parse it\n          var startIndex = ++i;\n          while (i < data.length && data[i] !== \"]\") i++;\n\n          this.processInstructionForNote(\n            ctxt,\n            note,\n            data.substring(startIndex, i),\n            startIndex\n          );\n          break;\n      }\n    }\n\n    if (\n      this.needToEndBrace &&\n      !note.braceStart &&\n      !note.braceEnd &&\n      !/[xy#]/.test(c)\n    ) {\n      note.braceEnd = new Markings.BracePoint(\n        note,\n        this.needToEndBrace.isAbove,\n        this.needToEndBrace.shape,\n        this.needToEndBrace.attachment === Markings.BraceAttachment.Left\n          ? Markings.BraceAttachment.Right\n          : Markings.BraceAttachment.Left\n      );\n      note.braceEnd.automatic = true;\n      delete this.needToEndBrace;\n    }\n\n    notes.push(note);\n  }\n\n  // an instruction in this context is referring to a special gabc coding found after\n  // notes between ['s and ]'s. choral signs and braces fall into this\n  // category.\n  //\n  // currently only brace instructions are supported here!\n  static processInstructionForNote(ctxt, note, instruction, sourceIndexOffset) {\n    var results = instruction.match(__bracketedCommandRegex);\n    if (results === null) return;\n    var cmd = results[1];\n    var data = results[2];\n    switch (cmd) {\n      case \"cs\":\n        note.choralSign = new ChoralSign(\n          ctxt,\n          data,\n          note,\n          note.sourceIndex + sourceIndexOffset,\n          instruction.length\n        );\n        return;\n      case \"alt\":\n        note.alText = new AboveLinesText(\n          ctxt,\n          data,\n          note,\n          note.sourceIndex + sourceIndexOffset,\n          instruction.length\n        );\n        return;\n    }\n\n    results = instruction.match(__braceSpecRegex);\n\n    if (results === null) return;\n\n    // see the comments at the definition of __braceSpecRegex for the\n    // capturing groups\n    var above = results[1] === \"o\";\n    var shape = Markings.BraceShape.CurlyBrace; // default\n\n    switch (results[2]) {\n      case \"b\":\n        shape = Markings.BraceShape.RoundBrace;\n        break;\n      case \"cb\":\n        shape = Markings.BraceShape.CurlyBrace;\n        break;\n      case \"cba\":\n        shape = Markings.BraceShape.AccentedCurlyBrace;\n        break;\n    }\n\n    var attachmentPoint =\n      results[3] === \"1\"\n        ? Markings.BraceAttachment.Left\n        : Markings.BraceAttachment.Right;\n\n    if (results[4] === \"{\" || results[5])\n      note.braceStart = new Markings.BracePoint(\n        note,\n        above,\n        shape,\n        attachmentPoint\n      );\n    else\n      note.braceEnd = new Markings.BracePoint(\n        note,\n        above,\n        shape,\n        attachmentPoint\n      );\n\n    // just have the next note end a brace that uses length;\n    if (results[5]) {\n      note.braceStart.automatic = true;\n      this.needToEndBrace = note.braceStart;\n    }\n  }\n\n  // takes raw gabc text source and parses it into words. For example, passing\n  // in a string of \"me(f.) (,) ma(fff)num(d!ewf) tu(fgF'E)am,(f.)\" would return\n  // an array of four strings: [\"me(f.)\", \"(,)\", \"ma(fff)num(d!ewf)\", \"tu(fgF'E)am,(f.)\"]\n  static splitWords(gabcNotations) {\n    // split the notations on whitespace boundaries, as long as the space\n    // immediately follows a set of parentheses. Prior to doing that, we replace\n    // all whitespace with spaces, which prevents tabs and newlines from ending\n    // up in the notation data.\n    gabcNotations = gabcNotations\n      // .trim()\n      // .replace(/\\s/g, \" \")\n      .replace(/\\)\\s(?=[^\\)]*(?:\\(|$))/g, \")\\n\");\n    return gabcNotations.split(/\\n/g);\n  }\n\n  static parseSource(gabcSource) {\n    return this.parseWords(this.splitWords(gabcSource));\n  }\n\n  // gabcWords is an array of strings, e.g., the result of splitWords above\n  static parseWords(gabcWords) {\n    var words = [];\n\n    for (var i = 0; i < gabcWords.length; i++)\n      words.push(this.parseWord(gabcWords[i]));\n\n    return words;\n  }\n\n  // returns an array of objects, each of which has the following properties\n  //  - notations (string)\n  //  - lyrics (array of strings)\n  static parseWord(gabcWord) {\n    var syllables = [];\n    var matches = [];\n\n    syllables.wordLength = gabcWord.length;\n\n    while ((match = __syllablesRegex.exec(gabcWord))) matches.push(match);\n\n    for (var j = 0; j < matches.length; j++) {\n      var match = matches[j];\n\n      var lyrics = match[1].trim().split(\"|\");\n      var notations = match[2];\n\n      syllables.push({\n        notations: notations,\n        lyrics: lyrics\n      });\n    }\n\n    return syllables;\n  }\n\n  // returns pitch\n  static gabcHeightToExsurgeHeight(gabcHeight) {\n    return gabcHeight.toLowerCase().charCodeAt(0) - \"a\".charCodeAt(0) - 6;\n  }\n\n  // returns pitch\n  static gabcHeightToExsurgePitch(clef, gabcHeight) {\n    var exsurgeHeight = this.gabcHeightToExsurgeHeight(gabcHeight);\n\n    var pitch = clef.staffPositionToPitch(exsurgeHeight);\n\n    return pitch;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Gabc.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport {\n  LiquescentType,\n  NoteShape,\n  NoteShapeModifiers\n} from \"./Exsurge.Chant.js\";\nimport {\n  ChantNotationElement,\n  GlyphCode, LineaVisualizer, MarkingPositionHint,\n  NeumeLineVisualizer, VirgaLineVisualizer\n} from \"./Exsurge.Drawing.js\";\nimport { Glyphs } from \"./Exsurge.Glyphs.js\";\n\nclass NeumeBuilder {\n  constructor(ctxt, neume, startingX = 0) {\n    this.ctxt = ctxt;\n    this.neume = neume;\n    this.x = startingX;\n    this.lastNote = null;\n    this.lineIsHanging = false;\n    this.minX = 0;\n  }\n\n  // used to start a hanging line on the left of the next note\n  lineFrom(note) {\n    var previousNotation = this.ctxt.notations[this.ctxt.currNotationIndex - 1];\n    if (\n      this.x === 0 &&\n      previousNotation &&\n      previousNotation.notes &&\n      previousNotation.trailingSpace === 0\n    ) {\n      this.lastNote = previousNotation.notes.slice(-1)[0];\n      this.minX = -this.ctxt.neumeLineWeight;\n    } else {\n      this.lastNote = note;\n      this.lineIsHanging = true;\n    }\n    return this;\n  }\n\n  // add a note, with a connecting line on the left if we have one\n  noteAt(note, glyph, withLineTo = true) {\n    if (!note) throw \"NeumeBuilder.noteAt: note must be a valid note\";\n\n    if (!glyph) throw \"NeumeBuilder.noteAt: glyph must be a valid glyph code\";\n\n    note.setGlyph(this.ctxt, glyph);\n    var noteAlignsRight = note.glyphVisualizer.align === \"right\";\n\n    var needsLine =\n      withLineTo &&\n      this.lastNote !== null &&\n      (this.lineIsHanging ||\n        (this.lastNote.glyphVisualizer &&\n          this.lastNote.glyphVisualizer.align === \"right\") ||\n        Math.abs(this.lastNote.staffPosition - note.staffPosition) > 1);\n\n    if (needsLine) {\n      var line = new NeumeLineVisualizer(\n        this.ctxt,\n        this.lastNote,\n        note,\n        this.lineIsHanging\n      );\n      this.neume.addVisualizer(line);\n      line.bounds.x = Math.max(this.minX, this.x - line.bounds.width);\n\n      if (!noteAlignsRight) this.x = line.bounds.x;\n    }\n    \n    let xOffset = 0;\n    if (note.shapeModifiers & NoteShapeModifiers.Linea) {\n      var linea = new LineaVisualizer(\n        this.ctxt,\n        note\n      );\n      this.neume.addVisualizer(linea);\n      note.origin.x += linea.origin.x;\n      xOffset = linea.origin.x;\n    }\n\n    // if this is the first note of a right aligned glyph (probably an initio debilis),\n    // then there's nothing to worry about. but if it's not then first, then this\n    // subtraction will right align it visually\n    if (noteAlignsRight && this.lastNote)\n      note.bounds.x = this.x - note.bounds.width;\n    else {\n      note.bounds.x = this.x + xOffset;\n      this.x += note.bounds.width + xOffset;\n    }\n\n    this.neume.addVisualizer(note);\n\n    this.lastNote = note;\n    this.lineIsHanging = false;\n\n    return this;\n  }\n\n  // a special form of noteAdd that creates a virga\n  // uses a punctum cuadratum and a line rather than the virga glyphs\n  virgaAt(note, withLineTo = true) {\n    // add the punctum for the virga\n    this.noteAt(note, GlyphCode.PunctumQuadratum);\n\n    // add a line for the virga\n    var line = new VirgaLineVisualizer(this.ctxt, note);\n    this.x -= line.bounds.width;\n    if (note.shapeModifers & NoteShapeModifiers.Reverse) {\n      line.bounds.x = 0;\n    } else {\n      line.bounds.x = this.x;\n    }\n    this.neume.addVisualizer(line);\n\n    this.lastNote = note;\n    this.lineIsHanging = false;\n\n    return this;\n  }\n\n  advanceBy(x) {\n    this.lastNote = null;\n    this.lineIsHanging = false;\n\n    this.x += x;\n\n    return this;\n  }\n\n  // for terminating hanging lines with no lower notes\n  withLineEndingAt(note) {\n    if (this.lastNote === null) return;\n\n    var line = new NeumeLineVisualizer(this.ctxt, this.lastNote, note, true);\n    this.neume.addVisualizer(line);\n    this.x -= line.bounds.width;\n    line.bounds.x = this.x;\n\n    this.neume.addVisualizer(line);\n\n    this.lastNote = note;\n\n    return this;\n  }\n\n  withPodatus(lowerNote, upperNote) {\n    var upperGlyph;\n    var lowerGlyph;\n\n    if (lowerNote.liquescent === LiquescentType.InitioDebilis) {\n      // liquescent upper note or not?\n      if (upperNote.liquescent === LiquescentType.None)\n        upperGlyph = GlyphCode.PunctumQuadratum;\n      else upperGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n\n      lowerGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (upperNote.liquescent & LiquescentType.Small) {\n      lowerGlyph = GlyphCode.BeginningAscLiquescent;\n      upperGlyph = GlyphCode.TerminatingAscLiquescent;\n    } else if (upperNote.liquescent & LiquescentType.Ascending) {\n      lowerGlyph = GlyphCode.PunctumQuadratum;\n      upperGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    } else if (upperNote.liquescent & LiquescentType.Descending) {\n      lowerGlyph = GlyphCode.PunctumQuadratum;\n      upperGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    } else {\n      // standard shape\n      lowerGlyph = GlyphCode.PodatusLower;\n      upperGlyph = GlyphCode.PodatusUpper;\n    }\n\n    // allow a quilisma pes\n    if (lowerNote.shape === NoteShape.Quilisma) lowerGlyph = GlyphCode.Quilisma;\n\n    this.noteAt(lowerNote, lowerGlyph).noteAt(upperNote, upperGlyph);\n\n    // make sure we don't have lines connected to the podatus\n    this.lastNote = null;\n\n    return this;\n  }\n\n  withClivis(upper, lower) {\n    var lowerGlyph;\n\n    if (upper.shape === NoteShape.Oriscus)\n      this.noteAt(upper, GlyphCode.OriscusDes, false);\n    else this.lineFrom(lower).noteAt(upper, GlyphCode.PunctumQuadratum);\n\n    if (lower.liquescent & LiquescentType.Small) {\n      lowerGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (lower.liquescent === LiquescentType.Ascending)\n      lowerGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (lower.liquescent === LiquescentType.Descending)\n      lowerGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else lowerGlyph = GlyphCode.PunctumQuadratum;\n\n    this.noteAt(lower, lowerGlyph);\n\n    // make sure we don't have lines connected to the clivis\n    this.lastNote = null;\n\n    return this;\n  }\n\n  // lays out a sequence of notes that are inclinata (e.g., climacus, pes subpunctis)\n  withInclinata(notes) {\n    var staffPosition = notes[0].staffPosition,\n      prevStaffPosition = notes[0].staffPosition;\n\n    // it is important to advance by the width of the inclinatum glyph itself\n    // rather than by individual note widths, so that any liquescents are spaced\n    // the same as non-liquscents\n    var advanceWidth =\n      Glyphs.PunctumInclinatum.bounds.width * this.ctxt.glyphScaling;\n\n    // now add all the punctum inclinatum\n    for (var i = 0; i < notes.length; i++, prevStaffPosition = staffPosition) {\n      var note = notes[i];\n\n      if (note.liquescent & LiquescentType.Small)\n        note.setGlyph(this.ctxt, GlyphCode.PunctumInclinatumLiquescent);\n      else if (note.liquescent & LiquescentType.Large)\n        // fixme: is the large inclinatum liquescent the same as the apostropha?\n        note.setGlyph(this.ctxt, GlyphCode.Stropha);\n      // fixme: some climaci in the new chant books end with a punctum quadratum\n      // (see, for example, the antiphon \"Sancta Maria\" for October 7).\n      else note.setGlyph(this.ctxt, GlyphCode.PunctumInclinatum);\n\n      staffPosition = note.staffPosition;\n\n      var multiple = Math.abs(prevStaffPosition - staffPosition);\n      switch (multiple) {\n        case 0:\n          multiple = 1.1;\n          break;\n        default:\n          multiple *= 2 / 3;\n          break;\n      }\n\n      if (i > 0) this.x += advanceWidth * multiple;\n\n      note.bounds.x = this.x;\n\n      this.neume.addVisualizer(note);\n    }\n\n    return this;\n  }\n\n  withPorrectusSwash(start, end) {\n    var needsLine =\n      this.lastNote !== null &&\n      (this.lineIsHanging ||\n        (this.lastNote.glyphVisualizer &&\n          this.lastNote.glyphVisualizer.align === \"right\") ||\n        Math.abs(this.lastNote.staffPosition - start.staffPosition) > 1);\n\n    if (needsLine) {\n      var line = new NeumeLineVisualizer(\n        this.ctxt,\n        this.lastNote,\n        start,\n        this.lineIsHanging\n      );\n      this.x = Math.max(this.minX, this.x - line.bounds.width);\n      line.bounds.x = this.x;\n      this.neume.addVisualizer(line);\n    }\n\n    var glyph;\n\n    switch (start.staffPosition - end.staffPosition) {\n      case 1:\n        glyph = GlyphCode.Porrectus1;\n        break;\n      case 2:\n        glyph = GlyphCode.Porrectus2;\n        break;\n      case 3:\n        glyph = GlyphCode.Porrectus3;\n        break;\n      case 4:\n        glyph = GlyphCode.Porrectus4;\n        break;\n      default:\n        // fixme: should we generate an error here?\n        glyph = GlyphCode.None;\n        break;\n    }\n\n    start.setGlyph(this.ctxt, glyph);\n    start.bounds.x = this.x;\n\n    // the second glyph does not draw anything, but it still has logical importance for the editing\n    // environment...it can respond to changes which will then change the swash glyph of the first.\n    end.setGlyph(this.ctxt, GlyphCode.None);\n\n    this.x = start.bounds.right();\n    end.bounds.x = this.x - end.bounds.width;\n\n    this.neume.addVisualizer(start);\n    this.neume.addVisualizer(end);\n\n    this.lastNote = end;\n    this.lineIsHanging = false;\n\n    return this;\n  }\n}\n\n/*\n * Neumes base class\n */\nexport class Neume extends ChantNotationElement {\n  constructor(notes = []) {\n    super();\n\n    this.isNeume = true; // poor man's reflection\n    this.notes = notes;\n\n    for (var i = 0; i < notes.length; i++) notes[i].neume = this;\n  }\n\n  addNote(note) {\n    note.neume = this;\n    this.notes.push(note);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n  }\n\n  finishLayout(ctxt) {\n    this.ledgerLines = this.requiresLedgerLine();\n\n    // allow subclasses an opportunity to position their own markings...\n    this.positionMarkings();\n\n    // layout the markings of the notes\n    for (var i = 0; i < this.notes.length; i++) {\n      var note = this.notes[i];\n      var j;\n\n      for (j = 0; j < note.episemata.length; j++) {\n        note.episemata[j].performLayout(ctxt);\n        this.addVisualizer(note.episemata[j]);\n      }\n\n      for (j = 0; j < note.morae.length; j++) {\n        note.morae[j].performLayout(ctxt);\n        this.addVisualizer(note.morae[j]);\n      }\n\n      // if the note has an ictus, then add it here\n      if (note.ictus) {\n        note.ictus.performLayout(ctxt);\n        this.addVisualizer(note.ictus);\n      }\n\n      if (note.accent) {\n        note.accent.performLayout(ctxt);\n        this.addVisualizer(note.accent);\n      }\n\n      if (note.choralSign) {\n        note.choralSign.performLayout(ctxt);\n        this.addVisualizer(note.choralSign);\n      }\n\n      // braces are handled by the chant line, so we don't mess with them here\n      // this is because brace size depends on chant line logic (neume spacing,\n      // justification, etc.) so they are considered chant line level\n      // markings rather than note level markings\n    }\n\n    this.origin.x = this.notes[0].origin.x;\n    this.origin.y = this.notes[0].origin.y;\n\n    super.finishLayout(ctxt);\n  }\n\n  requiresLedgerLine() {\n    var firstAbove = false,\n      needsAbove = false,\n      firstBelow = false,\n      needsBelow = false,\n      // isPorrectus = false,\n      result = [];\n\n    if (!this.notes) return result;\n\n    for (var i = 0; i < this.notes.length; ++i) {\n      var note = this.notes[i];\n      var staffPosition = note.staffPosition;\n      if (staffPosition >= 4) {\n        needsAbove = needsAbove || staffPosition >= 5;\n        if (firstAbove === false) firstAbove = Math.max(0, i - 1);\n        if (staffPosition >= 5) continue;\n      } else if (staffPosition <= -4) {\n        needsBelow = needsBelow || staffPosition <= -5;\n        if (firstBelow === false) firstBelow = Math.max(0, i - 1);\n        if (staffPosition <= -5) continue;\n      }\n      if (needsAbove || needsBelow) {\n        var endI = i; // Math.abs(staffPosition) >= 4? i : i - 1;\n        result.push({\n          element: this.notes[firstAbove || firstBelow || 0],\n          endElem: this.notes[endI],\n          staffPosition: needsAbove ? 5 : -5\n        });\n        firstAbove = firstBelow = needsAbove = needsBelow = false;\n      }\n      // isPorrectus = /^Porrectus\\d$/.test(note.glyphVisualizer.glyphCode);\n    }\n    if (needsAbove || needsBelow) {\n      result.push({\n        element: this.notes[firstAbove || firstBelow || 0],\n        endElem: this.notes[this.notes.length - 1],\n        staffPosition: needsAbove ? 5 : -5\n      });\n    }\n    return result;\n  }\n\n  resetDependencies() {}\n\n  build(ctxt) {\n    return new NeumeBuilder(ctxt, this);\n  }\n  positionEpisemata(note, position) {\n    var i;\n    for (i = 0; i < note.episemata.length; i++)\n      if (note.episemata[i].positionHint === MarkingPositionHint.Default)\n        note.episemata[i].positionHint = position;\n    if (note.choralSign) note.choralSign.positionHint = position;\n    return note.episemata.length;\n  }\n  positionEpisemataAbove(note) {\n    return this.positionEpisemata(note, MarkingPositionHint.Above);\n  }\n  positionEpisemataBelow(note) {\n    return this.positionEpisemata(note, MarkingPositionHint.Below);\n  }\n\n  positionPodatusEpisemata(bottomNote, topNote) {\n    // 1. episema on lower note by default be below, upper note above\n    this.positionEpisemataBelow(bottomNote);\n    this.positionEpisemataAbove(topNote);\n    if (topNote.ictus) {\n      topNote.ictus.positionHint = MarkingPositionHint.Above;\n    }\n  }\n  positionInclinataMorae(notes) {\n    notes = notes.slice(-2);\n    if (notes.length < 2 || notes[1].staffPosition > notes[0].staffPosition)\n      return;\n    var bottomNote = notes[1],\n      topNote = notes[0],\n      mark;\n\n    // The mora on the second (lower) note should be below the punctum,\n    // if the punctum is on a line and the previous punctum is in the space above.\n    if (\n      Math.abs(bottomNote.staffPosition % 2) === 1 &&\n      topNote.staffPosition - bottomNote.staffPosition === 1 &&\n      bottomNote.morae.length > 0\n    ) {\n      mark = bottomNote.morae.slice(-1)[0];\n      if (mark.positionHint === MarkingPositionHint.Default)\n        mark.positionHint = MarkingPositionHint.Below;\n    }\n  }\n  positionPodatusMorae(bottomNote, topNote) {\n    var mark;\n\n    // The mora on the first (lower) note should be below it,\n    // if it is on a line.\n    if (Math.abs(bottomNote.staffPosition % 2) === 1) {\n      if (bottomNote.morae.length === 1) {\n        mark = bottomNote.morae[0];\n      } else if (topNote.morae.length > 1) {\n        mark = topNote.morae[0];\n      }\n      if (mark && mark.positionHint === MarkingPositionHint.Default)\n        mark.positionHint = MarkingPositionHint.Below;\n    }\n\n    // if there is a mora on the first note but not on the second, and the neume\n    // continues with a punctum higher than the second note, we need to adjust\n    // the space after the neume so that it follows immediately with no gap\n    if (bottomNote.morae.length > 0 && topNote.morae.length === 0) {\n      bottomNote.morae[0].ignoreBounds = true;\n    }\n  }\n  // for any subclasses that begin with a podatus, they can call this from their own positionMarkings()\n  positionPodatusMarkings(bottomNote, topNote) {\n    this.positionPodatusEpisemata(bottomNote, topNote);\n    this.positionPodatusMorae(bottomNote, topNote);\n  }\n\n  // just like a clivis, but the first note of the three also works like the second note of the clivis:\n  // episema below, unless the middle note also has an episema\n  positionTorculusMarkings(firstNote, secondNote, thirdNote) {\n    var hasTopEpisema = this.positionClivisMarkings(secondNote, thirdNote);\n    hasTopEpisema =\n      this.positionEpisemata(\n        firstNote,\n        hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n      ) && hasTopEpisema;\n    return hasTopEpisema;\n  }\n  positionClivisMorae(firstNote, secondNote) {\n    // 1. second note of a clivis that ends on a line and goes down one step has its mora below:\n    var morae = firstNote.morae.concat(secondNote.morae);\n    if (\n      secondNote.morae.length &&\n      firstNote.staffPosition - secondNote.staffPosition === 1 &&\n      Math.abs(secondNote.staffPosition % 2) === 1\n    ) {\n      morae.slice(-1)[0].positionHint = MarkingPositionHint.Below;\n    }\n  }\n  positionClivisEpisemata(firstNote, secondNote) {\n    var hasTopEpisema = this.positionEpisemataAbove(firstNote);\n    this.positionEpisemata(\n      secondNote,\n      hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n    );\n    return hasTopEpisema;\n  }\n  positionClivisMarkings(firstNote, secondNote) {\n    this.positionClivisMorae(firstNote, secondNote);\n    return this.positionClivisEpisemata(firstNote, secondNote);\n  }\n\n  positionPorrectusMarkings(firstNote, secondNote, thirdNote) {\n    // episemata on first and second note work like a clivis,\n    // the second note should have its episema below, unless the first note also has an episema.\n    this.positionClivisEpisemata(firstNote, secondNote);\n    this.positionPodatusMarkings(secondNote, thirdNote);\n  }\n\n  positionPorrectusFlexusMarkings(first, second, third, fourth) {\n    var hasTopEpisema = this.positionEpisemataAbove(first);\n    hasTopEpisema = this.positionClivisMarkings(third, fourth) || hasTopEpisema;\n    this.positionEpisemata(\n      second,\n      hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n    );\n  }\n\n  // subclasses can override this in order to correctly place markings in a neume specific way\n  positionMarkings() {}\n}\n\n/*\n * Apostropha\n */\nexport class Apostropha extends Neume {\n  positionMarkings() {\n    var positionHint = MarkingPositionHint.Above;\n\n    // logic here is this: if first episema is default position, place it above.\n    // then place the second one (if there is one) opposite of the first.\n    for (var i = 0; i < this.notes[0].episemata.length; i++) {\n      if (\n        this.notes[0].episemata[i].positionHint === MarkingPositionHint.Default\n      )\n        this.notes[0].episemata[i].positionHint = positionHint;\n      else positionHint = this.notes[0].episemata[i].positionHint;\n\n      // now place the next one in the opposite position\n      positionHint =\n        positionHint === MarkingPositionHint.Above\n          ? MarkingPositionHint.Below\n          : MarkingPositionHint.Above;\n    }\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).noteAt(\n      this.notes[0],\n      Apostropha.getNoteGlyphCode(this.notes[0])\n    );\n\n    this.finishLayout(ctxt);\n  }\n\n  static getNoteGlyphCode(note) {\n    if (note.shape === NoteShape.Stropha) return GlyphCode.Stropha;\n\n    if (note.liquescent & LiquescentType.Ascending)\n      return GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (note.liquescent & LiquescentType.Descending)\n      return GlyphCode.PunctumQuadratumDesLiquescent;\n\n    if (note.shapeModifiers & NoteShapeModifiers.Cavum)\n      return GlyphCode.PunctumCavum;\n\n    return GlyphCode.PunctumQuadratum;\n  }\n}\n\n/*\n * Bivirga\n *\n * For simplicity in implementation, Bivirga's have two notes in the object\n * structure. These technically must be the same pitch though.\n */\nexport class Bivirga extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt)\n      .virgaAt(this.notes[0])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .virgaAt(this.notes[1]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Trivirga\n *\n * For simplicity in implementation, Trivirga's have three notes in the object\n * structure. These technically must be the same pitch though.\n */\nexport class Trivirga extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n    this.positionEpisemataAbove(this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt)\n      .virgaAt(this.notes[0])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .virgaAt(this.notes[1])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .virgaAt(this.notes[2]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Climacus\n */\nexport class Climacus extends Neume {\n  positionMarkings() {\n    for (var i = 0; i < this.notes.length; i++) {\n      this.positionEpisemataAbove(this.notes[i]);\n    }\n    this.positionInclinataMorae(this.notes);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt)\n      .virgaAt(this.notes[0])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .withInclinata(this.notes.slice(1));\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Clivis\n */\nexport class Clivis extends Neume {\n  positionMarkings() {\n    this.positionClivisMarkings(this.notes[0], this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var upper = this.notes[0];\n    var lower = this.notes[1];\n\n    this.build(ctxt).withClivis(upper, lower);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Distropha\n *\n * For simplicity in implementation, Distropha's have two notes in the object\n * structure. These technically must be the same pitch though (like Bivirga).\n */\nexport class Distropha extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    let glyphCodes = this.notes.map((note) =>\n      Apostropha.getNoteGlyphCode(note)\n    );\n    let glyphAdvance = ctxt.intraNeumeSpacing;\n    glyphCodes.slice(0, 2).forEach((glyphCode) => {\n      if (glyphCode === GlyphCode.Stropha)\n        glyphAdvance -= ctxt.intraNeumeSpacing / 4;\n    });\n\n    this.build(ctxt)\n      .noteAt(this.notes[0], glyphCodes[0])\n      .advanceBy(glyphAdvance)\n      .noteAt(this.notes[1], glyphCodes[1]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Oriscus\n */\nexport class Oriscus extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    // determine the glyph to use\n    var note = this.notes[0];\n    var glyph;\n\n    if (note.liquescent !== LiquescentType.None) {\n      glyph = GlyphCode.OriscusLiquescent;\n    } else {\n      if (note.shapeModifiers & NoteShapeModifiers.Ascending)\n        glyph = GlyphCode.OriscusAsc;\n      else if (note.shapeModifiers & NoteShapeModifiers.Descending)\n        glyph = GlyphCode.OriscusDes;\n      else {\n        // by default we take the descending form, unless we can figure out by a lookahead here\n        glyph = GlyphCode.OriscusDes;\n\n        // try to find a neume following this one\n        var neume = ctxt.findNextNeume();\n\n        if (neume) {\n          var nextNoteStaffPosition = ctxt.activeClef.pitchToStaffPosition(\n            neume.notes[0].pitch\n          );\n\n          if (nextNoteStaffPosition > note.staffPosition)\n            glyph = GlyphCode.OriscusAsc;\n        }\n      }\n    }\n\n    this.build(ctxt).noteAt(note, glyph);\n\n    this.finishLayout(ctxt);\n  }\n\n  resetDependencies() {\n    // a single oriscus tries to automatically use the right direction\n    // based on the following neumes. if we don't have a manually designated\n    // direction, then we reset our layout so that we can try to guess it\n    // at next layout phase.\n    if (\n      this.notes[0].shapeModifiers & NoteShapeModifiers.Ascending ||\n      this.notes[0].shapeModifiers & NoteShapeModifiers.Descending\n    )\n      return;\n\n    this.needsLayout = true;\n  }\n}\n\n/*\n * PesQuassus\n */\nexport class PesQuassus extends Neume {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var lower = this.notes[0];\n    var upper = this.notes[1];\n\n    var lowerGlyph;\n\n    var lowerStaffPos = lower.staffPosition;\n    var upperStaffPos = upper.staffPosition;\n\n    if (lower.shape === NoteShape.Oriscus) lowerGlyph = GlyphCode.OriscusAsc;\n    else lowerGlyph = GlyphCode.PunctumQuadratum;\n\n    var builder = this.build(ctxt).noteAt(lower, lowerGlyph);\n\n    if (upperStaffPos - lowerStaffPos === 1)\n      // use a virga glyph in this case\n      builder.virgaAt(upper);\n    else if (upper.liquescent === LiquescentType.LargeDescending)\n      builder\n        .noteAt(upper, GlyphCode.PunctumQuadratumDesLiquescent)\n        .withLineEndingAt(lower);\n    else\n      builder.noteAt(upper, GlyphCode.PunctumQuadratum).withLineEndingAt(lower);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * PesSubpunctis\n */\nexport class PesSubpunctis extends Neume {\n  positionMarkings() {\n    this.positionPodatusEpisemata(this.notes[0], this.notes[1]);\n    for (var i = 2; i < this.notes.length; ++i) {\n      this.positionEpisemataAbove(this.notes[i]);\n    }\n    this.positionInclinataMorae(this.notes.slice(1));\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    // podatus followed by inclinata\n    this.build(ctxt)\n      .withPodatus(this.notes[0], this.notes[1])\n      .advanceBy(ctxt.intraNeumeSpacing * 0.68)\n      .withInclinata(this.notes.slice(2));\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Podatus\n *\n * This podatus class handles a few neume types actually, depending on the note\n * data: Podatus (including various liquescent types on the upper note),\n * Podatus initio debilis, and Quilisma-Pes\n */\nexport class Podatus extends Neume {\n  positionMarkings() {\n    this.positionPodatusMarkings(this.notes[0], this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).withPodatus(this.notes[0], this.notes[1]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Porrectus\n */\nexport class Porrectus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusMarkings(this.notes[0], this.notes[1], this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n\n    var thirdGlyph;\n\n    if (third.liquescent & LiquescentType.Small)\n      thirdGlyph = GlyphCode.TerminatingAscLiquescent;\n    else if (third.liquescent & LiquescentType.Descending)\n      thirdGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else thirdGlyph = GlyphCode.PodatusUpper;\n\n    this.build(ctxt)\n      .lineFrom(second)\n      .withPorrectusSwash(first, second)\n      .noteAt(third, thirdGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * PorrectusFlexus\n */\nexport class PorrectusFlexus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusFlexusMarkings(\n      this.notes[0],\n      this.notes[1],\n      this.notes[2],\n      this.notes[3]\n    );\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    var thirdGlyph = GlyphCode.PunctumQuadratum,\n      fourthGlyph;\n\n    if (fourth.liquescent & LiquescentType.Small) {\n      thirdGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n      fourthGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (fourth.liquescent & LiquescentType.Ascending)\n      fourthGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (fourth.liquescent & LiquescentType.Descending)\n      fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else fourthGlyph = GlyphCode.PunctumQuadratum;\n\n    this.build(ctxt)\n      .lineFrom(second)\n      .withPorrectusSwash(first, second)\n      .noteAt(third, thirdGlyph)\n      .noteAt(fourth, fourthGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n// this is some type of pseudo nume right? there is no such thing as a neume\n// of puncta inclinata, but this will be part of other composite neumes.\nexport class PunctaInclinata extends Neume {\n  positionMarkings() {\n    this.positionInclinataMorae(this.notes);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).withInclinata(this.notes);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Punctum\n */\nexport class Punctum extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var note = this.notes[0];\n    var glyph = GlyphCode.PunctumQuadratum;\n\n    // determine the glyph to use\n    if (note.liquescent !== LiquescentType.None) {\n      if (note.shape === NoteShape.Inclinatum)\n        glyph = GlyphCode.PunctumInclinatumLiquescent;\n      else if (note.shape === NoteShape.Oriscus)\n        glyph = GlyphCode.OriscusLiquescent;\n      else if (note.liquescent & LiquescentType.Ascending)\n        glyph = GlyphCode.PunctumQuadratumAscLiquescent;\n      else if (note.liquescent & LiquescentType.Descending)\n        glyph = GlyphCode.PunctumQuadratumDesLiquescent;\n      else glyph = GlyphCode.PunctumQuadratumLiquescent;\n    } else {\n      if (note.shapeModifiers & NoteShapeModifiers.Cavum)\n        glyph = GlyphCode.PunctumCavum;\n      else if (note.shape === NoteShape.Inclinatum)\n        glyph = GlyphCode.PunctumInclinatum;\n      else if (note.shape === NoteShape.Quilisma) glyph = GlyphCode.Quilisma;\n      else glyph = GlyphCode.PunctumQuadratum;\n    }\n\n    this.build(ctxt).noteAt(note, glyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Salicus\n */\nexport class Salicus extends Neume {\n  positionMarkings() {\n    // by default place episema below\n    // fixme: is this correct?\n    for (var i = 0; i < this.notes.length; i++)\n      this.positionEpisemataBelow(this.notes[i]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n\n    var builder = this.build(ctxt).noteAt(first, GlyphCode.PunctumQuadratum);\n\n    // if the next note doesn't require a stem connector, then add a tad bit\n    // of spacing here\n    if (!(second.shapeModifiers & NoteShapeModifiers.Stemmed))\n      builder.advanceBy(ctxt.intraNeumeSpacing);\n\n    // second note is always an oriscus, which may or may not be stemmed\n    // to the first\n    builder.noteAt(second, GlyphCode.OriscusAsc);\n\n    // third note can be a punctum quadratum or various liquescent forms\n    if (third.liquescent & LiquescentType.Small)\n      builder.noteAt(third, GlyphCode.TerminatingAscLiquescent);\n    else if (third.liquescent === LiquescentType.Ascending)\n      builder.noteAt(third, GlyphCode.PunctumQuadratumAscLiquescent);\n    else if (third.liquescent === LiquescentType.Descending)\n      builder.noteAt(third, GlyphCode.PunctumQuadratumDesLiquescent);\n    else builder.virgaAt(third);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Salicus Flexus\n */\nexport class SalicusFlexus extends Neume {\n  positionMarkings() {\n    var hasTopEpisema = this.positionTorculusMarkings(\n      this.notes[1],\n      this.notes[2],\n      this.notes[3]\n    );\n    this.positionEpisemata(\n      this.notes[0],\n      hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n    );\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    var builder = this.build(ctxt).noteAt(first, GlyphCode.PunctumQuadratum);\n\n    // if the next note doesn't require a stem connector, then add a tad bit\n    // of spacing here\n    if (!(second.shapeModifiers & NoteShapeModifiers.Stemmed))\n      builder.advanceBy(ctxt.intraNeumeSpacing);\n\n    // second note is always an oriscus, which may or may not be stemmed\n    // to the first\n    builder.noteAt(second, GlyphCode.OriscusAsc);\n\n    // third note can be a punctum quadratum or various liquescent forms,\n    // ...based on note four though!\n    if (fourth.liquescent & LiquescentType.Small)\n      builder.noteAt(third, GlyphCode.PunctumQuadratumDesLiquescent);\n    else builder.noteAt(third, GlyphCode.PunctumQuadratum);\n\n    // finally, do the fourth note\n    if (fourth.liquescent & LiquescentType.Small)\n      builder.noteAt(fourth, GlyphCode.TerminatingDesLiquescent);\n    else if (fourth.liquescent & LiquescentType.Ascending)\n      builder.noteAt(fourth, GlyphCode.PunctumQuadratumAscLiquescent);\n    else if (fourth.liquescent & LiquescentType.Descending)\n      builder.noteAt(fourth, GlyphCode.PunctumQuadratumDesLiquescent);\n    else builder.noteAt(fourth, GlyphCode.PunctumQuadratum);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Scandicus\n */\nexport class Scandicus extends Neume {\n  positionMarkings() {\n    if (this.notes[2].shape === NoteShape.Virga) {\n      this.positionPodatusMarkings(this.notes[0], this.notes[1]);\n      this.positionEpisemataAbove(this.notes[2]);\n    } else {\n      this.positionEpisemataBelow(this.notes[0]);\n      this.positionPodatusMarkings(this.notes[1], this.notes[2]);\n    }\n  }\n\n  // if the third note shape is a virga, then the scadicus is rendered\n  // as a podatus followed by a virga. Otherwise, it's rendered as a\n  // punctum followed by a podatus...\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n\n    if (third.shape === NoteShape.Virga) {\n      this.build(ctxt).withPodatus(first, second).virgaAt(third);\n    } else {\n      this.build(ctxt)\n        .noteAt(\n          first,\n          first.shape === NoteShape.Quilisma\n            ? GlyphCode.Quilisma\n            : GlyphCode.PunctumQuadratum\n        )\n        .withPodatus(second, third);\n    }\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Scandicus Flexus\n */\nexport class ScandicusFlexus extends Neume {\n  positionMarkings() {\n    if (this.notes[2].shape === NoteShape.Virga) {\n      this.positionPodatusMarkings(this.notes[0], this.notes[1]);\n      this.positionClivisMarkings(this.notes[2], this.notes[3]);\n    } else {\n      this.positionEpisemataBelow(this.notes[0]);\n      this.positionPodatusMarkings(this.notes[1], this.notes[2]);\n      this.positionEpisemataAbove(this.notes[3]);\n    }\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    if (third.shape === NoteShape.Virga) {\n      this.build(ctxt)\n        .withPodatus(first, second)\n        .advanceBy(ctxt.intraNeumeSpacing)\n        .withClivis(third, fourth);\n    } else {\n      var fourthGlyph = GlyphCode.PunctumQuadratum;\n\n      if (fourth.liquescent & LiquescentType.Ascending)\n        fourthGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n      else if (fourth.liquescent & LiquescentType.Descending)\n        fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n\n      this.build(ctxt)\n        .noteAt(first, GlyphCode.PunctumQuadratum)\n        .withPodatus(second, third)\n        .advanceBy(ctxt.intraNeumeSpacing)\n        .noteAt(fourth, fourthGlyph);\n    }\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Torculus\n */\nexport class Torculus extends Neume {\n  positionMarkings() {\n    this.positionTorculusMarkings(this.notes[0], this.notes[1], this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var note1 = this.notes[0];\n    var note2 = this.notes[1];\n    var note3 = this.notes[2];\n\n    var glyph1, glyph3;\n\n    if (note1.liquescent === LiquescentType.InitioDebilis)\n      glyph1 = GlyphCode.TerminatingDesLiquescent;\n    else if (note1.shape === NoteShape.Quilisma) glyph1 = GlyphCode.Quilisma;\n    else glyph1 = GlyphCode.PunctumQuadratum;\n\n    if (note3.liquescent & LiquescentType.Small)\n      glyph3 = GlyphCode.TerminatingDesLiquescent;\n    else if (note3.liquescent & LiquescentType.Ascending)\n      glyph3 = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (note3.liquescent & LiquescentType.Descending)\n      glyph3 = GlyphCode.PunctumQuadratumDesLiquescent;\n    else glyph3 = GlyphCode.PunctumQuadratum;\n\n    this.build(ctxt)\n      .noteAt(note1, glyph1)\n      .noteAt(note2, GlyphCode.PunctumQuadratum)\n      .noteAt(note3, glyph3);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * TorculusResupinus\n */\nexport class TorculusResupinus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusMarkings(this.notes[1], this.notes[2], this.notes[3]);\n    this.positionClivisEpisemata(this.notes[1], this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    var firstGlyph, fourthGlyph;\n\n    if (first.liquescent === LiquescentType.InitioDebilis) {\n      firstGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (first.shape === NoteShape.Quilisma)\n      firstGlyph = GlyphCode.Quilisma;\n    else firstGlyph = GlyphCode.PunctumQuadratum;\n\n    if (fourth.liquescent & LiquescentType.Small)\n      fourthGlyph = GlyphCode.TerminatingAscLiquescent;\n    else if (third.liquescent & LiquescentType.Descending)\n      fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else fourthGlyph = GlyphCode.PodatusUpper;\n\n    this.build(ctxt)\n      .noteAt(first, firstGlyph)\n      .withPorrectusSwash(second, third)\n      .noteAt(fourth, fourthGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * TorculusResupinusFlexus\n */\nexport class TorculusResupinusFlexus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusFlexusMarkings(\n      this.notes[1],\n      this.notes[2],\n      this.notes[3],\n      this.notes[4]\n    );\n    this.positionClivisEpisemata(this.notes[1], this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n    var fifth = this.notes[4];\n\n    var firstGlyph,\n      fourthGlyph = GlyphCode.PunctumQuadratum,\n      fifthGlyph;\n\n    if (first.liquescent === LiquescentType.InitioDebilis) {\n      firstGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (first.shape === NoteShape.Quilisma)\n      firstGlyph = GlyphCode.Quilisma;\n    else firstGlyph = GlyphCode.PunctumQuadratum;\n\n    if (fifth.liquescent & LiquescentType.Small) {\n      fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n      fifthGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (fifth.liquescent & LiquescentType.Ascending)\n      fifthGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (fifth.liquescent & LiquescentType.Descending)\n      fifthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else fifthGlyph = GlyphCode.PunctumQuadratum;\n\n    this.build(ctxt)\n      .noteAt(first, firstGlyph)\n      .withPorrectusSwash(second, third)\n      .noteAt(fourth, fourthGlyph)\n      .noteAt(fifth, fifthGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Tristropha\n *\n * For simplicity in implementation, Tristropha's have three notes in the object\n * structure. These technically must be the same pitch though (like the\n * Distropha and Bivirga).\n */\nexport class Tristropha extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n    this.positionEpisemataAbove(this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    let glyphCodes = this.notes.map((note) =>\n      Apostropha.getNoteGlyphCode(note)\n    );\n    let glyphAdvance =\n      glyphCodes[0] === GlyphCode.Stropha\n        ? ctxt.intraNeumeSpacing / 2\n        : ctxt.intraNeumeSpacing;\n\n    this.build(ctxt)\n      .noteAt(this.notes[0], glyphCodes[0])\n      .advanceBy(glyphAdvance)\n      .noteAt(this.notes[1], glyphCodes[1])\n      .advanceBy(glyphAdvance)\n      .noteAt(this.notes[2], glyphCodes[2]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Virga\n */\nexport class Virga extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).virgaAt(this.notes[0]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.Neumes.js","//\n// Author(s):\n// Benjamin Bloomfield <benjamin@sourceandsummit.com>\n//\n// Copyright (c) 2019\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { Rect } from \"./Exsurge.Core.js\";\nimport {\n  ChantLayoutElement, QuickSvg, Subtitle, Supertitle, TextLeftRight, Title\n} from \"./Exsurge.Drawing.js\";\n\nexport class Titles extends ChantLayoutElement {\n  constructor(\n    ctxt,\n    score,\n    { supertitle, title, subtitle, textLeft, textRight } = {}\n  ) {\n    super();\n    this.score = score;\n    this.setSupertitle(ctxt, supertitle);\n    this.setTitle(ctxt, title);\n    this.setSubtitle(ctxt, subtitle);\n    this.setTextLeft(ctxt, textLeft);\n    this.setTextRight(ctxt, textRight);\n  }\n\n  setBoundsX(ctxt, elementName, width) {\n    let element = this[elementName];\n    switch (ctxt.textStyles[elementName].alignment) {\n      case \"left\":\n        element.textAnchor = \"start\";\n        element.bounds.x = 0;\n        break;\n      case \"right\":\n        element.textAnchor = \"end\";\n        element.bounds.x = width;\n        break;\n      case \"center\":\n      default:\n        element.textAnchor = \"middle\";\n        element.bounds.x = width / 2;\n    }\n  }\n\n  /**\n   * Lays out the titles, and returns their total height\n   * @param  {ChantContext} ctxt\n   * @return {number}      the tottal height of titles laid out\n   */\n  layoutTitles(ctxt, width) {\n    this.bounds = new Rect(0, 0, 0, 0);\n    let y = 0;\n    if (this.supertitle) {\n      this.supertitle.recalculateMetrics(ctxt);\n      this.supertitle.setMaxWidth(ctxt, width);\n\n      this.setBoundsX(ctxt, \"supertitle\", width);\n      this.supertitle.bounds.y = y;\n      this.bounds.union(this.supertitle.bounds);\n      this.supertitle.bounds.y += this.supertitle.origin.y;\n      y += this.supertitle.bounds.height + this.supertitle.padding(ctxt);\n    }\n    if (this.title) {\n      if (y) y += this.title.padding(ctxt);\n      this.title.recalculateMetrics(ctxt);\n      this.title.setMaxWidth(ctxt, width);\n      this.setBoundsX(ctxt, \"title\", width);\n      this.title.bounds.y = y;\n      this.bounds.union(this.title.bounds);\n      this.title.bounds.y += this.title.origin.y;\n      y += this.title.bounds.height + this.title.padding(ctxt);\n    }\n    if (this.subtitle) {\n      if (y) y += this.subtitle.padding(ctxt);\n      this.subtitle.recalculateMetrics(ctxt);\n      this.subtitle.setMaxWidth(ctxt, width);\n      this.setBoundsX(ctxt, \"subtitle\", width);\n      this.subtitle.bounds.y = y;\n      this.bounds.union(this.subtitle.bounds);\n      this.subtitle.bounds.y += this.subtitle.origin.y;\n      y += this.subtitle.bounds.height + this.subtitle.padding(ctxt);\n    }\n    let finalY = y,\n      textLeft = this.score.overrideTextLeft || this.textLeft;\n    if (textLeft) {\n      textLeft.recalculateMetrics(ctxt);\n      textLeft.bounds.y = y;\n      this.bounds.union(textLeft.bounds);\n      textLeft.bounds.y += textLeft.origin.y;\n      finalY = y + textLeft.bounds.height + textLeft.padding(ctxt);\n    }\n    if (this.textRight) {\n      this.textRight.recalculateMetrics(ctxt);\n      this.textRight.bounds.x = width;\n      this.textRight.bounds.y = y;\n      this.bounds.union(this.textRight.bounds);\n      this.textRight.bounds.y += this.textRight.origin.y;\n      finalY = Math.max(\n        finalY,\n        y + this.textRight.bounds.height + this.textRight.padding(ctxt)\n      );\n    }\n    return finalY;\n  }\n\n  setSupertitle(ctxt, supertitle) {\n    this.supertitle = supertitle ? new Supertitle(ctxt, supertitle) : null;\n  }\n  setTitle(ctxt, title) {\n    this.title = title ? new Title(ctxt, title) : null;\n  }\n  setSubtitle(ctxt, subtitle) {\n    this.subtitle = subtitle ? new Subtitle(ctxt, subtitle) : null;\n  }\n  setTextLeft(ctxt, textLeft) {\n    this.textLeft = textLeft\n      ? new TextLeftRight(ctxt, textLeft, \"textLeft\")\n      : null;\n  }\n  setTextRight(ctxt, textRight) {\n    this.textRight = textRight\n      ? new TextLeftRight(ctxt, textRight, \"textRight\")\n      : null;\n  }\n\n  hasSupertitle(ctxt, supertitle) {\n    return !!this.supertitle;\n  }\n  hasTitle(ctxt, title) {\n    return !!this.title;\n  }\n  hasSubtitle(ctxt, subtitle) {\n    return !!this.subtitle;\n  }\n  hasTextLeft(ctxt, textLeft) {\n    return !!this.textLeft;\n  }\n  hasTextRight(ctxt, textRight) {\n    return !!this.textRight;\n  }\n\n  draw(ctxt, scale = 1) {\n    var canvasCtxt = ctxt.canvasCtxt;\n    canvasCtxt.translate(this.bounds.x, this.bounds.y);\n\n    for (let el of [\n      this.supertitle,\n      this.title,\n      this.subtitle,\n      this.score.overrideTextLeft || this.textLeft,\n      this.textRight\n    ]) {\n      if (el) el.draw(ctxt, scale);\n    }\n\n    canvasCtxt.translate(-this.bounds.x, -this.bounds.y);\n  }\n\n  getInnerNodes(ctxt, functionName = \"createSvgNode\") {\n    var nodes = [];\n\n    for (let el of [\n      this.supertitle,\n      this.title,\n      this.subtitle,\n      this.score.overrideTextLeft || this.textLeft,\n      this.textRight\n    ]) {\n      if (el) nodes.push(el[functionName](ctxt));\n    }\n    return nodes;\n  }\n\n  createSvgNode(ctxt) {\n    var nodes = this.getInnerNodes(ctxt, \"createSvgNode\");\n\n    var node = QuickSvg.createNode(\"g\", { class: \"Titles\" }, nodes);\n\n    node.source = this;\n    this.svg = node;\n\n    return node;\n  }\n\n  createSvgTree(ctxt) {\n    var nodes = this.getInnerNodes(ctxt, \"createSvgTree\");\n\n    return QuickSvg.createSvgTree(\n      \"g\",\n      { class: \"Titles\", source: this },\n      ...nodes\n    );\n  }\n\n  createSvgFragment(ctxt) {\n    var fragment = \"\";\n\n    for (let el of [\n      this.supertitle,\n      this.title,\n      this.subtitle,\n      this.score.overrideTextLeft || this.textLeft,\n      this.textRight\n    ]) {\n      if (el) fragment += el.createSvgFragment(ctxt);\n    }\n\n    fragment = QuickSvg.createFragment(\"g\", { class: \"Titles\" }, fragment);\n    return fragment;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Titles.js"],"sourceRoot":""}