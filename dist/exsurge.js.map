{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dc895af201fef9034a90","webpack:///./src/index.js","webpack:///./src/Exsurge.Core.js","webpack:///./src/Exsurge.Text.js","webpack:///./src/Exsurge.Glyphs.js","webpack:///./src/Exsurge.Drawing.js","webpack:///./src/Exsurge.Chant.js","webpack:///./src/Exsurge.Chant.ChantLine.js","webpack:///./src/Exsurge.Chant.Neumes.js","webpack:///./src/Exsurge.Chant.Signs.js","webpack:///./src/Exsurge.Chant.Markings.js","webpack:///./src/Exsurge.Gabc.js","webpack:///./src/Exsurge.Titles.js"],"names":["DeviceIndependent","Centimeters","Millimeters","Inches","ToCentimeters","ToMillimeters","ToInches","generateRandomGuid","getCssForProperties","Units","DeviceIndepenedent","DIU_PER_INCH","DIU_PER_CENTIMETER","ToDeviceIndependent","n","inputUnits","FromDeviceIndependent","outputUnits","StringToUnitsType","s","ToLower","UnitsTypeToString","units","Point","x","y","point","Rect","width","height","Infinity","rect","other","right","Math","max","bottom","min","Margins","left","top","margins","Size","size","Step","Do","Du","Re","Me","Mi","Fa","Fu","So","La","Te","Ti","__StepToStaffPosition","__StaffOffsetToStep","Pitch","step","octave","floor","toInt","pitch","offset","length","s4","random","toString","substring","properties","Object","keys","map","key","join","Exsurge","Language","name","centerNeume","text","parsedWords","words","split","i","end","push","syllabifyWord","English","startIndex","regexLetter","match","exec","slice","found","index","Latin","diphthongs","possibleDiphthongs","concat","regexVowel","wordExceptions","vowels","vowelsThatMightBeConsonants","muteConsonantsAndF","liquidConsonants","c","isVowelThatMightBeConsonant","isVowel","word","syllables","haveCompleteSyllable","previousWasVowel","workingString","toLowerCase","startSyllable","lookahead","haveLookahead","makeSyllable","substr","wordLength","cIsVowel","isDiphthong","isMuteConsonantOrF","isLiquidConsonant","Spanish","weakVowels","strongVowels","uDiphthongExceptions","previousIsVowel","previousIsStrongVowel","cIsStrongVowel","isStrongVowel","createSyllable","numberOfConsonants","consonant2","j","d","indexOf","tripthong","endj","findVowelSegment","language","english","latin","spanish","Glyphs","None","paths","type","data","bounds","origin","align","AcuteAccent","GraveAccent","Circle","Semicircle","ReversedSemicircle","Stropha","BeginningAscLiquescent","BeginningDesLiquescent","CustosDescLong","CustosDescShort","CustosLong","CustosShort","DoClef","FaClef","Flat","Mora","Natural","Sharp","OriscusAsc","OriscusDes","OriscusLiquescent","PodatusLower","PodatusUpper","Porrectus1","Porrectus2","Porrectus3","Porrectus4","PunctumCavum","PunctumQuadratum","PunctumQuadratumLiquescent","PunctumQuadratumAscLiquescent","PunctumQuadratumDesLiquescent","PunctumInclinatum","PunctumInclinatumLiquescent","Quilisma","TerminatingAscLiquescent","TerminatingDesLiquescent","VerticalEpisemaAbove","VerticalEpisemaBelow","VirgaLong","VirgaShort","Virgula","getFontFilenameForProperties","url","italic","bold","replace","canAccessDOM","document","__getNeumeFromSvgElem","score","elem","note","notes","parentElement","querySelector","getAttribute","neume","MarkingPositionHint","Default","Above","Below","TextTypes","supertitle","display","defaultSize","containedInScore","titles","hasSupertitle","getFromScore","title","hasTitle","subtitle","hasSubtitle","leftRight","cssClass","hasTextLeft","hasTextRight","extraClass","getFromSvgElem","classList","contains","annotation","mergeAnnotationWithTextLeft","dropCap","elementIndex","annotations","al","hasAboveLinesText","notations","notation","notationIndex","alText","alIndex","choralSign","ctxt","staffInterval","lyric","hasLyrics","lyrics","lyricIndex","translation","hasTranslations","translationText","translationIndex","TextTypesByClass","entries","forEach","entry","DefaultTrailingSpace","intraNeumeSpacing","interSyllabicMultiplier","isDefault","GlyphCode","StrophaLiquescent","UpperBrace","QuickSvg","ns","xmlns","xlink","hasDOMAccess","svg","node","createElementNS","setAttribute","setAttributeNS","defs","appendChild","clearNotations","removeChild","hasChildNodes","lastChild","line","x1","y1","x2","y2","g","tspan","str","textContent","use","nodeRef","svgFragmentForGlyph","glyph","svgSrc","path","createFragment","undefined","fill","nodesForGlyph","functionName","nodes","props","createNode","attributes","children","source","attr","hasOwnProperty","val","constructor","createSvgTree","className","class","Array","convertKeysToCamelCase","obj","test","camelCase","whole","letter","toUpperCase","style","sourceGabc","child","fragment","parseFragment","well","createElement","container","innerHTML","il","firstChild","childNodes","translate","scale","sx","sy","TextMeasuringStrategy","Svg","Canvas","OpenTypeJS","specialCharMap","ChantContext","textMeasuringStrategy","makeDefs","defsNode","textStyles","textColor","setFont","rubricColor","specialCharProperties","textBeforeSpecialChar","textAfterSpecialChar","specialCharText","char","fontStyleDictionary","b","u","ul","sc","markupSymbolDictionary","prefix","padding","minLedgerSeparation","minSpaceAboveStaff","minSpaceBelowStaff","spaceBetweenSystems","glyphPunctumWidth","glyphPunctumHeight","maxExtraSpaceInStaffIntervals","activeClef","neumeLineColor","staffLineColor","dividerLineColor","defaultLanguage","pixelRatio","window","devicePixelRatio","svgTextMeasurer","body","insertBefore","makeCanvasIfNeeded","syllableConnector","scaleDefs","setGlyphScaling","accidentalSpaceMultiplier","interVerbalMultiplier","drawGuides","drawDebuggingBounds","activeNotations","currNotationIndex","condensingTolerance","autoColor","useExtraTextOnly","insertFontsInDoc","fontFamily","keyWithFontFamily","fontDictionary","Regular","font","baseStyle","opentypeFontDictionary","textType","textStyle","color","baseTextStyle","glyphScaling","createStyleCss","hyphen","Lyric","LyricType","SingleSyllable","multiplier","minLyricWordSpacing","hyphenWidth","staffHeight","staffLineWeight","ceil","neumeLineWeight","dividerLineWeight","episemaLineWeight","updateHyphenWidth","staffPosition","styleElement","getElementById","id","head","isNeume","hasNoWidth","canvas","canvasCtxt","getContext","setTransform","ChantLayoutElement","selected","highlighted","DividerLineVisualizer","staffPosition0","staffPosition1","divider","y0","calculateHeightFromStaffPosition","temp","fillStyle","fillRect","sourceIndex","getSvgProps","NeumeLineVisualizer","note0","note1","hanging","abs","VirgaLineVisualizer","GlyphVisualizer","glyphCode","setGlyph","getDefProps","options","transform","makeDef","makeSvgTree","Path2D","noteIndex","nextNote","isSelected","model","result","getSvgAttributes","RoundBraceVisualizer","isAbove","braceHeight","generatePathString","stroke","getSvgPathProps","accent","createSvgNode","createSvgFragment","dx","dy","cx1","cy","cx2","dp","toFixed","CurlyBraceVisualizer","addAcuteAccent","union","q","h","qy1","qx2","qy2","tx1","ty1","qy3","qx4","qy4","TextSpan","activeTags","MarkupStackFrame","tagName","createStackFrame","__subsForTspans","TextElement","fontSize","textAnchor","dominantBaseline","generateSpansFromText","recalculateMetrics","spans","markupStack","spanStartIndex","newLineInNextSpan","filterFrames","frame","symbol","Symbol","closeSpan","spanText","extraProperties","assign","newLine","markupRegex","openedAsterisk","closeCurrentSpan","specialChar","specialChar2","specialChar3","markupSymbol","closingTag","enclosedText","pop","filter","findIndex","splice","parseFloat","resize","measureSubstring","returnBBox","lines","widths","newLineSpans","subStringLength","numLines","bbox","span","myText","parseInt","rightAligned","xOffset","firstLineMaxWidth","getCanvasFontForProperties","metrics","measureText","actualBoundingBoxLeft","actualBoundingBoxAscent","actualBoundingBoxDescent","DropCap","getFontForProperties","features","liga","smcp","spanFontSize","subBbox","getPath","getBoundingBox","subWidth","getAdvanceWidth","resetNewLines","maxWidth","createStyleNode","getBBox","measureSubstringBBox","reduce","percentage","lastWidth","lastMatch","regex","spanIndex","splitSpan","textLeft","textRight","newSpans","needsLayout","textAlign","translateWidth","translateHeight","count","getExtraStyleProperties","fillText","textLength","getCssClasses","trim","useStyleObject","lengthAdjust","getSpanOptions","svgNode","escapeForTspan","setFontFamilyAttributes","string","String","BeginningSyllable","MiddleSyllable","EndingSyllable","Directive","LyricArray","getLeft","lyricArray","NaN","Number","MAX_VALUE","getRight","presumeConnectorNeeded","MIN_VALUE","l","allowsConnector","needsConnector","getConnectorWidth","hasOnlyOneLyric","originalText","indexOfLyric","mergeIn","newLyrics","mergeInArray","setNotation","lyricType","centerStartIndex","centerLength","connectorSpan","force","forceConnector","needs","setConnectorWidth","widthWithoutConnector","connectorWidth","defaultConnectorWidth","setNeedsConnector","activeLanguage","vowelSegmentWidth","getSubStringLength","lastIndexOf","dropCapSpan","clone","dropCapLowerCase","dropCapSourceGabcLength","classes","ChoralSign","positionHint","AboveLinesText","TranslationText","gabcSource","anchor","TitleTextElement","Supertitle","Title","Subtitle","TextLeftRight","headerKey","Annotation","Annotations","texts","apply","updateBounds","draw","ChantNotationElement","leadingSpace","trailingSpace","keepWithNext","visualizers","chantLayoutElement","ignoreBounds","isEmpty","unshift","calculatedTrailingSpace","calculateLyricX","inner","getInnerSvgNodes","svgProps","LiquescentType","Large","Small","Ascending","Descending","InitioDebilis","LargeAscending","LargeDescending","SmallAscending","SmallDescending","NoteShape","Virga","Inclinatum","Oriscus","NoteShapeModifiers","Cavum","Stemmed","Note","glyphVisualizer","liquescent","shape","shapeModifiers","episemata","morae","setStaffPosition","shapeModifier","Clef","defaultAccidental","isClef","activeAccidental","performLayout","accidentalGlyph","createGlyphVisualizer","addVisualizer","__defaultDoClef","stepToStaffOffset","octaveOffset","staffOffsetToStep","accidentalType","finishLayout","TextOnly","sourceLength","ChantLineBreak","justify","lb","ChantMapping","__connectorSpan","__mergeAnnotationWithTextLeft","annotationSpans","ChantScore","mappings","useDropCap","Titles","startingClef","compiled","autoColoring","updateNotations","startLine","endLine","lastLine","selection","elementSelection","element","indices","selectedIndices","insertion","afterElementIndex","includes","insertionCursor","insertionElement","insertionLine","chantLine","InsertionCursor","mapping","default","elements","recreateDropCap","generateDropCap","initializeLayout","finishedCallback","setTimeout","onFontLoaded","performLayoutAsync","layoutElementsAsync","timeout","Date","getTime","overrideTextLeft","layoutTitles","currIndex","ChantLine","buildFromChantNotationIndex","notationsStartIndex","numNotationsOnLine","pages","updateSelection","pageHeightOffset","startLineIndex","pageHeight","copyLines","setCanvasSize","clearRect","zoom","version","editable","viewBox","cloneNode","createStyleTree","def","createStyle","lineFragment","fragmentDefs","createDropCap","Gabc","parseChantNotations","unsanitizedText","ChantDocument","defaults","layout","page","scores","copyLayout","to","from","unserializeFromJson","serializeToJson","Neumes","notationBounds","staffLeft","staffRight","custos","ledgerLines","braces","nextLine","previousLine","lyricLineHeight","lyricLineBaseline","numLyricLines","spaceAfterNotations","spaceBetweenTextTracks","lastLyrics","lastNeumeIndex","extraTextOnlyIndex","lastIndex","altLineHeight","altLineBaseline","numAltLines","translationLineHeight","translationLineBaseline","numTranslationLines","notationBoundsOffset","extraTextOnlyHeight","extraTextOnlyLyricIndex","lastNotation","extraLines","lineWidth","lowestPossibleAnnotationY","lyricAndTextRect","altLineTextRect","totalHeight","strokeStyle","beginPath","moveTo","lineTo","layoutInsertionCursor","ledgerLine","functionNames","quickSvg","getInnerNodes","len","qx1","qx3","newElementStart","beginningLyrics","prev","prevNeume","prevLyrics","condensableSpaces","paddingLeft","DoubleBar","newLyric","elidesToNext","MAX_SAFE_INTEGER","minX","a","curr","rightNotationBoundary","lastTranslationTextWithEndNeume","lastNotationIndex","lastStartBrace","lastLyricsBeforeTextOnly","textOnlyStartIndex","actualRightBoundary","Custos","isDivider","forceBreak","fitsOnLine","positionNotationElement","candidateForExtraTextOnlyLine","currentLyric","nextNotation","firstOnLine","startExtraTextOnlyFromFirst","lastNotationWithLyrics","reverse","find","lastLyricRight","setMaxWidth","cne","firstWithNoWidth","allowLineBreakBeforeNext","maxNumNotationsOnLine","findNeumesToJustify","extraSpace","getWhitespaceOnRight","toJustify","next","sum","condensable","endNeume","last","isLastLine","whitespace","rightEdge","minHyphenWidth","justifyElements","centerDividers","oldBoundsX","leftPoint","rightPoint","FullBar","nextOrCurr","isAccidental","lastRightNeume","lastRightLyric","doJustify","extraSpaceBeforeCustos","increment","toJustifyIndex","nextToJustify","incrementOffsetAtNextChance","startBrace","k","startNote","BraceShape","RoundBrace","getAttachmentX","braceEnd","AccentedCurlyBrace","processElementForLedgerLine","endElem","offsetX","half","minY","maxY","positionNonLyricText","rightX","beyondStaffRight","ll","episema","spaceBetweenEpisemata","terminating","alignment","HorizontalEpisemaAlignment","Left","Center","Right","newY","newWidth","handleEndBrace","braceStart","nextNotationButOne","nextNoteButOne","BracePoint","BraceAttachment","space","fixedX","total","maxRight","currLyric","minLeft","firstOfSyllable","hasShifted","atLeastOneWithoutConnector","prevLyricRight","condensableSpacesSincePrevLyric","condensableSpaceSincePrevLyric","notationI","currLyricLeft","shift","spaceBetweenSyls","pLyrics","lastCondensable","useMidpoint","minIndex","maxIndex","curIndex","notationX","closenessToLeft","closenessToRight","NeumeBuilder","startingX","lastNote","lineIsHanging","previousNotation","withLineTo","noteAlignsRight","needsLine","noteAt","lowerNote","upperNote","upperGlyph","lowerGlyph","upper","lower","lineFrom","prevStaffPosition","advanceWidth","multiple","start","Neume","requiresLedgerLine","positionMarkings","ictus","firstAbove","needsAbove","firstBelow","needsBelow","endI","position","positionEpisemata","bottomNote","topNote","positionEpisemataBelow","positionEpisemataAbove","mark","positionPodatusEpisemata","positionPodatusMorae","firstNote","secondNote","thirdNote","hasTopEpisema","positionClivisMarkings","positionClivisMorae","positionClivisEpisemata","positionPodatusMarkings","first","second","third","fourth","Apostropha","build","getNoteGlyphCode","Bivirga","virgaAt","advanceBy","Trivirga","Climacus","positionInclinataMorae","withInclinata","Clivis","withClivis","Distropha","glyphCodes","glyphAdvance","findNextNeume","nextNoteStaffPosition","pitchToStaffPosition","PesQuassus","lowerStaffPos","upperStaffPos","builder","withLineEndingAt","PesSubpunctis","withPodatus","Podatus","Porrectus","positionPorrectusMarkings","thirdGlyph","withPorrectusSwash","PorrectusFlexus","positionPorrectusFlexusMarkings","fourthGlyph","PunctaInclinata","Punctum","Salicus","SalicusFlexus","positionTorculusMarkings","Scandicus","ScandicusFlexus","Torculus","note2","note3","glyph1","glyph3","TorculusResupinus","firstGlyph","TorculusResupinusFlexus","fifth","fifthGlyph","Tristropha","auto","getGlyphCode","Divider","resetsAccidentals","QuarterBar","HalfBar","DominicanBar","parity","line0","line1","AccidentalType","Accidental","adjustStep","Accent","HorizontalEpisema","minDistanceAway","punctumInclinatumShorten","prevNote","Ictus","collisionWithEpisema","horizontalOffset","verticalOffset","shortOffset","extraOffset","collisionWithStaffLine","CurlyBrace","attachment","Markings","Signs","__syllablesRegex","__altTranslationRegex","__notationsRegex","__notationsRegex_group_insideBraces","__bracketedCommandRegex","__braceSpecRegex","TrailingSpaceForAccidental","TrailingSpaceMultiple","regexHeaderEnd","regexHeaderLine","regexHeaderComment","GabcHeader","gabc","comments","cValues","original","txtHeader","arrayName","alternateKey","array","e","console","warn","elementCountForNotations","items","item","headerLength","getLength","splitWords","createMappingsFromWords","clef","before","after","oldIndexMap","overlap","startOld","startNew","subLength","inew","_overlap","iold","diffDescriptorsAndNewWords","newGabcSource","insertionIndex","oldInsertionIndex","newWords","results","lastTranslationNeumes","resultCode","resultValues","sourceIndexDiff","elementCount","createMappingFromWord","curNotation","prevIsAccidental","resetDependencies","resetAccidentals","staffPositionToPitch","automatic","needToEndBrace","transText","lastTranslationText","matches","currSyllable","lyricText","notationData","parseNotations","firstOfParentheses","notationWithLyrics","m","indexOffset","proposedLyricType","createSyllableLyrics","lyricTexts","indexClosingBracket","makeLyric","textIndex","centerEndIndex","elides","setForceConnector","baseSourceIndex","addToLastSourceGabc","addNotation","neumes","createNeumesFromNotes","prevNotation","RegExp","atom","gabcHeightToExsurgeHeight","noteArray","createNoteFromData","accidental","gabcHeightToExsurgePitch","bracketedNotations","finalTrailingSpace","firstNoteIndex","currNoteIndex","createNeume","includeCurrNote","includePrevNote","lastNoteIndex","addNote","unknownState","handle","currNote","virgaState","apostrophaState","oriscusState","punctaInclinataState","punctumState","notesRemaining","state","podatusState","climacusState","clivisState","distrophaState","salicusState","scandicusState","pesSubpunctisState","torculusState","porrectusState","salicusFlexusState","scandicusFlexusState","bivirgaState","tristrophaState","prevNoteButOne","torculusResupinusState","episemaNoteIndex","episemaNote","previousNote","previousMora","episemaHadModifier","newNote","processInstructionForNote","instruction","sourceIndexOffset","cmd","above","attachmentPoint","gabcNotations","parseWords","gabcWords","parseWord","gabcWord","gabcHeight","charCodeAt","exsurgeHeight","setSupertitle","setTitle","setSubtitle","setTextLeft","setTextRight","elementName","setBoundsX","finalY","el"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,I;;;;;;;;;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","file":"exsurge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"exsurge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"exsurge\"] = factory();\n\telse\n\t\troot[\"exsurge\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc895af201fef9034a90","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n'use strict';\n\n// import { Annotation, ChantContext } from './Exsurge.Drawing.js'\n// import { Gabc } from './Exsurge.Gabc.js'\n//\n// // client side support\n//\n// if (typeof document !== 'undefined' && document.registerElement) {\n//   var ChantVisualElementPrototype = Object.create(HTMLElement.prototype);\n//\n//   ChantVisualElementPrototype.createdCallback = function() {\n//     var ctxt = new ChantContext();\n//\n//     ctxt.setFont(\"'Crimson Text', serif\", 19.2);\n//\n//     var useDropCap = true;\n//     var useDropCapAttr = this.getAttribute(\"use-drop-cap\");\n//     if (useDropCapAttr === 'false')\n//       useDropCap = false;\n//\n//     var score = Gabc.loadChantScore(ctxt, this.innerText, useDropCap);\n//\n//     var annotationAttr = this.getAttribute(\"annotation\");\n//     if (annotationAttr) {\n//       // add an annotation\n//       score.annotation = new Annotation(ctxt, annotationAttr);\n//     }\n//\n//     var _element = this;\n//\n//     var width = 0;\n//     var doLayout = function() {\n//       var newWidth = _element.parentElement.clientWidth;\n//       if(width === newWidth) return;\n//       width = newWidth;\n//       // perform layout on the chant\n//       score.performLayout(ctxt, function() {\n//         score.layoutChantLines(ctxt, width, function() {\n//           // render the score to svg code\n//           _element.appendElement(score.createSvgNode(ctxt));\n//         });\n//       });\n//     }\n//     doLayout();\n//     if (window.addEventListener)\n//       window.addEventListener('resize',doLayout,false);\n//     else if (window.attachEvent)\n//       window.attachEvent('onresize',doLayout);\n//   }\n//\n//   ChantVisualElementPrototype.attachedCallback = function() {\n//\n//   }\n//\n//   // register the custom element\n//   // if(window.customElements && window.customElements.define) {\n//   //   window.customElements.define('chant-visual', ChantVisualElementPrototype);\n//   // } else {\n//     document.registerElement('chant-visual', {\n//       prototype: ChantVisualElementPrototype\n//     });\n//   // }\n// }\n\nexport * from './Exsurge.Core.js'\nexport * from './Exsurge.Text.js'\nexport * from './Exsurge.Glyphs.js'\nexport * from './Exsurge.Drawing.js'\nexport * from './Exsurge.Chant.js'\nexport * from './Exsurge.Chant.ChantLine.js'\nexport * from './Exsurge.Chant.Markings.js'\nexport * from './Exsurge.Chant.Signs.js'\nexport * from './Exsurge.Chant.Neumes.js'\nexport * from './Exsurge.Gabc.js'\nexport * from './Exsurge.Titles.js'\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nexport var Units = {\n  // enums\n  DeviceIndepenedent: 0, // device independent units: 96/inch\n  Centimeters: 1,\n  Millimeters: 2,\n  Inches: 3,\n\n  // constants for device independent units (diu)\n  DIU_PER_INCH: 96,\n  DIU_PER_CENTIMETER: 96 / 2.54,\n\n  ToDeviceIndependent: function (n, inputUnits) {\n    switch (inputUnits) {\n      case Centimeters:\n        return n * Units.DIU_PER_CENTIMETER;\n      case Millimeters:\n        return n * Units.DIU_PER_CENTIMETER / 10;\n      case Inches:\n        return n * Units.DIU_PER_INCH;\n      default:\n        return n;\n    }\n  },\n\n  FromDeviceIndependent: function (n, outputUnits) {\n    switch (outputUnits) {\n      case Centimeters:\n        return n / Units.DIU_PER_CENTIMETER;\n      case Millimeters:\n        return n / Units.DIU_PER_CENTIMETER * 10;\n      case Inches:\n        return n / Units.DIU_PER_INCH;\n      default:\n        return n;\n    }\n  },\n\n\n  StringToUnitsType: function(s) {\n    switch (s.ToLower()) {\n      case \"in\":\n      case \"inches\":\n        return Units.Inches;\n\n      case \"cm\":\n      case \"centimeters\":\n        return Units.Centimeters;\n\n      case \"mm\":\n      case \"millimeters\":\n        return Units.Millimeters;\n\n      case \"di\":\n      case \"device-independent\":\n        return Units.DeviceIndepenedent;\n\n      default:\n        return Units.DeviceIndepenedent;\n    }\n  },\n\n  UnitsTypeToString: function(units) {\n    switch (units) {\n      case Units.Inches: return \"in\";\n      case Units.Centimeters: return \"cm\";\n      case Units.Millimeters: return \"mm\";\n      case Units.DeviceIndepenedent: return \"device-independent\";\n      default: return \"device-independent\";\n    }\n  }\n}\n\nexport function DeviceIndependent(n) {\n  return n;\n}\n\nexport function Centimeters(n) {\n  return Units.ToDeviceIndependent(n, Units.Centimeters);\n}\n\nexport function Millimeters(n) {\n  return Units.ToDeviceIndependent(n, Units.Millimeters);\n}\n\nexport function Inches(n) {\n  return Units.ToDeviceIndependent(n, Units.Inches);\n}\n\nexport function ToCentimeters(n) {\n  return Units.FromDeviceIndependent(n, Units.Centimeters);\n}\n\nexport function ToMillimeters(n) {\n  return Units.FromDeviceIndependent(n, Units.Millimeters);\n}\n\nexport function ToInches(n) {\n  return Units.FromDeviceIndependent(n, Units.Inches);\n}\n\n\n/*\n * Point\n */\nexport class Point {\n  constructor(x, y) {\n    this.x = (typeof x !== 'undefined') ? x : 0;\n    this.y = (typeof y !== 'undefined') ? y : 0;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  equals(point) {\n    return this.x === point.x && this.y === point.y;\n  }\n}\n\n/*\n * Rect\n */\nexport class Rect {\n  constructor(x, y, width, height) {\n    this.x = (typeof x !== 'undefined') ? x : Infinity;\n    this.y = (typeof y !== 'undefined') ? y : Infinity;\n    this.width = (typeof width !== 'undefined') ? width : -Infinity;\n    this.height = (typeof height !== 'undefined') ? height : -Infinity;\n  }\n\n  clone() {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n\n  isEmpty() {\n    return (this.x === Infinity &&\n            this.y === Infinity &&\n            this.width === -Infinity &&\n            this.height === -Infinity);\n  }\n\n  // convenience method\n  right() {\n    return this.x + this.width;\n  }\n\n  bottom() {\n    return this.y + this.height;\n  }\n\n  equals(rect) {\n    return this.x === rect.x && this.y === rect.y &&\n           this.width === rect.width && this.height === rect.height;\n  }\n\n  // other can be a Point or a Rect\n  contains(other) {\n    if (other instanceof Point) {\n      return other.x >= this.x &&\n              other.x <= this.x + this.width &&\n              other.y >= this.y &&\n              other.y <= this.y + this.height;\n    } else { // better be instance of Rect\n      return this.x <= other.x &&\n              this.x + this.width >= other.x + other.width &&\n              this.y <= other.y &&\n              this.y + this.height >= other.y + other.height;\n    }\n  }\n\n  union(rect) {\n\n    var right = Math.max(this.x + this.width, rect.x + rect.width);\n    var bottom = Math.max(this.y + this.height, rect.y + rect.height);\n\n    this.x = Math.min(this.x, rect.x);\n    this.y = Math.min(this.y, rect.y);\n\n    this.width = right - this.x;\n    this.height = bottom - this.y;\n  }\n}\n\n/**\n * Margins\n *\n * @class\n */\nexport class Margins {\n  constructor(left, top, right, bottom) {\n    this.left = (typeof left !== 'undefined') ? left : 0;\n    this.top = (typeof top !== 'undefined') ? top : 0;\n    this.right = (typeof right !== 'undefined') ? right : 0;\n    this.bottom = (typeof bottom !== 'undefined') ? bottom : 0;\n  }\n\n  clone() {\n    return new Margins(this.left, this.top, this.right, this.bottom);\n  }\n\n  equals(margins) {\n    return this.left === margins.left &&\n        this.top === margins.top &&\n        this.right === margins.right &&\n        this.bottom === margins.bottom;\n  }\n}\n\n/**\n * Size\n *\n * @class\n */\nexport class Size {\n  constructor(width, height) {\n    this.width = (typeof width !== 'undefined') ? width : 0;\n    this.height = (typeof height !== 'undefined') ? height : 0;\n  }\n\n  clone() {\n    return new Size(this.width, this.height);\n  }\n\n  equals(size) {\n    return this.width === size.width && this.height === size.height;\n  }\n}\n\n\n/*\n * Pitches, notes\n */\nexport var Step = {\n  Do: 0,\n  Du: 1,\n  Re: 2,\n  Me: 3,\n  Mi: 4,\n  Fa: 5,\n  Fu: 6,\n  So: 7,\n  La: 9,\n  Te: 10,\n  Ti: 11\n};\n\n  // this little array helps map step values to staff positions. The numeric values of steps\n  // correspond to whole step increments (2) or half step increments (1). This gives us the ability\n  // to compare pitches precisely, but makes it challenging to place steps on the staff. this little\n  // array maps the steps to an incremental position the steps take on the staff line. This works\n  // so simply because chant only uses do and fa clefs, and only has a flatted ti (te), making\n  // for relatively easy mapping to staff line locations.\n  //                         Do Du Re Me Mi Fa Fu So    La Te Ti\nvar __StepToStaffPosition = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6];\nvar __StaffOffsetToStep = [Step.Do, Step.Re, Step.Mi, Step.Fa, Step.So, Step.La, Step.Ti]; // no accidentals in this one\n\n\nexport class Pitch {\n  constructor(step, octave) {\n    if(typeof octave === 'undefined') {\n      octave = Math.floor(step / 12)\n      step = step % 12;\n    }\n    this.step = step;\n    this.octave = octave;\n  }\n\n  toInt() {\n    return this.octave * 12 + this.step;\n  }\n\n  transpose(step) {\n    return new Pitch(this.toInt() + step);\n  }\n\n  isHigherThan(pitch) {\n    return this.toInt() > pitch.toInt();\n  }\n\n  isLowerThan(pitch) {\n    return this.toInt() < pitch.toInt();\n  }\n\n  equals(pitch) {\n    return this.toInt() === pitch.toInt();\n  }\n\n  static stepToStaffOffset(step) {\n    return __StepToStaffPosition[step];\n  }\n\n  static staffOffsetToStep(offset) {\n    while (offset < 0)\n      offset = __StaffOffsetToStep.length + offset;\n\n    return __StaffOffsetToStep[offset % __StaffOffsetToStep.length];\n  }\n}\n\nexport function generateRandomGuid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4();\n}\n\nexport function getCssForProperties(properties) {\n  return Object.keys(properties).map(key => `${key}: ${properties[key]};`).join('');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Core.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport * as Exsurge from \"./Exsurge.Core.js\";\n\n/**\n * @class\n */\nexport class Language {\n  constructor(name) {\n    this.name = typeof name !== \"undefined\" ? name : \"<unknown>\";\n    this.centerNeume = false;\n  }\n\n  /**\n   * @param {String} text The string to parsed into words.\n   * @return {Word[]} the resulting parsed words from syllabification\n   */\n  syllabify(text) {\n    var parsedWords = [];\n\n    if (typeof text === \"undefined\" || text === \"\") return parsedWords;\n\n    // Divide the text into words separated by whitespace\n    var words = text.split(/[\\s]+/);\n\n    for (var i = 0, end = words.length; i < end; i++)\n      parsedWords.push(this.syllabifyWord(words[i]));\n\n    return parsedWords;\n  }\n}\n\nexport class English extends Language {\n  constructor() {\n    super(\"English\");\n    this.centerNeume = true;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n    var regexLetter = /[a-z\\u0300-\\u0311äëïöüÿáéíóúýàèìòùỳāēīōūȳăĕĭŏŭæœ‿]+/i;\n    var match = regexLetter.exec(s.slice(startIndex));\n    if (match)\n      return {\n        found: true,\n        startIndex: startIndex + match.index,\n        length: match[0].length\n      };\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\n/**\n * @class\n */\nexport class Latin extends Language {\n  /**\n   * @constructs\n   */\n  constructor() {\n    super(\"Latin\");\n\n    // fixme: ui is only diphthong in the exceptional cases below (according to Wheelock's Latin)\n    this.diphthongs = [\"ae\", \"au\", \"oe\", \"aé\", \"áu\", \"oé\"];\n    // for centering over the vowel, we will need to know any combinations that might be diphthongs:\n    this.possibleDiphthongs = this.diphthongs.concat([\n      \"ei\",\n      \"eu\",\n      \"ui\",\n      \"éi\",\n      \"éu\",\n      \"úi\"\n    ]);\n    this.regexVowel = /(i|(?:[qg]|^)u)?([eé][iu]|[uú]i|[ao][eé]|[aá]u|[aeiouáéíóúäëïöüāēīōūăĕĭŏŭåe̊o̊ůæœǽyýÿ])/i;\n\n    // some words that are simply exceptions to standard syllabification rules!\n    var wordExceptions = new Object();\n\n    // ui combos pronounced as diphthongs\n    wordExceptions[\"huius\"] = [\"hui\", \"us\"];\n    wordExceptions[\"cuius\"] = [\"cui\", \"us\"];\n    wordExceptions[\"huic\"] = [\"huic\"];\n    wordExceptions[\"cui\"] = [\"cui\"];\n    wordExceptions[\"hui\"] = [\"hui\"];\n\n    // eu combos pronounced as diphthongs\n    wordExceptions[\"euge\"] = [\"eu\", \"ge\"];\n    wordExceptions[\"seu\"] = [\"seu\"];\n\n    this.vowels = [\n      \"a\",\n      \"e\",\n      \"i\",\n      \"o\",\n      \"u\",\n      \"á\",\n      \"é\",\n      \"í\",\n      \"ó\",\n      \"ú\",\n      \"ä\",\n      \"ë\",\n      \"ï\",\n      \"ö\",\n      \"ü\",\n      \"ā\",\n      \"ē\",\n      \"ī\",\n      \"ō\",\n      \"ū\",\n      \"ă\",\n      \"ĕ\",\n      \"ĭ\",\n      \"ŏ\",\n      \"ŭ\",\n      \"å\",\n      \"e̊\",\n      \"o̊\",\n      \"ů\",\n      \"æ\",\n      \"œ\",\n      \"ǽ\", // no accented œ in unicode?\n      \"y\",\n      \"ý\",\n      \"ÿ\"\n    ]; // y is treated as a vowel; not native to Latin but useful for words borrowed from Greek\n\n    this.vowelsThatMightBeConsonants = [\"i\", \"u\"];\n\n    this.muteConsonantsAndF = [\"b\", \"c\", \"d\", \"g\", \"p\", \"t\", \"f\"];\n\n    this.liquidConsonants = [\"l\", \"r\"];\n  }\n\n  // c must be lowercase!\n  isVowel(c) {\n    for (var i = 0, end = this.vowels.length; i < end; i++)\n      if (this.vowels[i] === c) return true;\n\n    return false;\n  }\n\n  isVowelThatMightBeConsonant(c) {\n    for (var i = 0, end = this.vowelsThatMightBeConsonants.length; i < end; i++)\n      if (this.vowelsThatMightBeConsonants[i] === c) return true;\n\n    return false;\n  }\n\n  // substring should be a vowel and the character following\n  isVowelActingAsConsonant(substring) {\n    return (\n      this.isVowelThatMightBeConsonant(substring[0]) &&\n      this.isVowel(substring[1])\n    );\n  }\n\n  /**\n   * f is not a mute consonant, but we lump it together for syllabification\n   * since it is syntactically treated the same way\n   *\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isMuteConsonantOrF(c) {\n    for (var i = 0, end = this.muteConsonantsAndF.length; i < end; i++)\n      if (this.muteConsonantsAndF[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is a liquid consonant\n   */\n  isLiquidConsonant(c) {\n    for (var i = 0, end = this.liquidConsonants.length; i < end; i++)\n      if (this.liquidConsonants[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isDiphthong(s) {\n    for (var i = 0, end = this.diphthongs.length; i < end; i++)\n      if (this.diphthongs[i] === s) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isPossibleDiphthong(s) {\n    for (var i = 0, end = this.possibleDiphthongs.length; i < end; i++)\n      if (this.possibleDiphthongs[i] === s) return true;\n\n    return false;\n  }\n\n  /**\n   * Rules for Latin syllabification (from Collins, \"A Primer on Ecclesiastical Latin\")\n   *\n   * Divisions occur when:\n   *   1. After open vowels (those not followed by a consonant) (e.g., \"pi-us\" and \"De-us\")\n   *   2. After vowels followed by a single consonant (e.g., \"vi-ta\" and \"ho-ra\")\n   *   3. After the first consonant when two or more consonants follow a vowel\n   *      (e.g., \"mis-sa\", \"minis-ter\", and \"san-ctus\").\n   *\n   * Exceptions:\n   *   1. In compound words the consonants stay together (e.g., \"de-scribo\").\n   *   2. A mute consonant (b, c, d, g, p, t) or f followed by a liquid consonant (l, r)\n   *      go with the succeeding vowel: \"la-crima\", \"pa-tris\"\n   *\n   * In addition to these rules, Wheelock's Latin provides this sound exception:\n   *   -  Also counted as single consonants are qu and the aspirates ch, ph,\n   *      th, which should never be separated in syllabification:\n   *      architectus, ar-chi-tec-tus; loquacem, lo-qua-cem.\n   *\n   */\n  syllabifyWord(word) {\n    var syllables = [];\n    var haveCompleteSyllable = false;\n    var previousWasVowel = false;\n    var workingString = word.toLowerCase();\n    var startSyllable = 0;\n\n    var c, lookahead, haveLookahead;\n\n    // a helper function to create syllables\n    var makeSyllable = function(length) {\n      if (haveCompleteSyllable) {\n        syllables.push(word.substr(startSyllable, length));\n        startSyllable += length;\n      }\n\n      haveCompleteSyllable = false;\n    };\n\n    for (var i = 0, wordLength = workingString.length; i < wordLength; i++) {\n      c = workingString[i];\n\n      // get our lookahead in case we need them...\n      lookahead = \"*\";\n      haveLookahead = i + 1 < wordLength;\n\n      if (haveLookahead) lookahead = workingString[i + 1];\n\n      var cIsVowel = this.isVowel(c);\n\n      // i is a special case for a vowel. when i is at the beginning\n      // of the word (Iesu) or i is between vowels (alleluia),\n      // then the i is treated as a consonant (y)\n      if (c === \"i\") {\n        if (i === 0 && haveLookahead && this.isVowel(lookahead))\n          cIsVowel = false;\n        else if (previousWasVowel && haveLookahead && this.isVowel(lookahead)) {\n          cIsVowel = false;\n        }\n      }\n\n      if (c === \"-\") {\n        // a hyphen forces a syllable break, which effectively resets\n        // the logic...\n\n        haveCompleteSyllable = true;\n        previousWasVowel = false;\n        makeSyllable(i - startSyllable);\n        startSyllable++;\n      } else if (cIsVowel) {\n        // once we get a vowel, we have a complete syllable\n        haveCompleteSyllable = true;\n\n        if (\n          previousWasVowel &&\n          !this.isDiphthong(workingString[i - 1] + \"\" + c)\n        ) {\n          makeSyllable(i - startSyllable);\n          haveCompleteSyllable = true;\n        }\n\n        previousWasVowel = true;\n      } else if (haveLookahead) {\n        if (\n          (c === \"q\" && lookahead === \"u\") ||\n          (lookahead === \"h\" && (c === \"c\" || c === \"p\" || c === \"t\"))\n        ) {\n          // handle wheelock's exceptions for qu, ch, ph and th\n          makeSyllable(i - startSyllable);\n          i++; // skip over the 'h' or 'u'\n        } else if (previousWasVowel && this.isVowel(lookahead)) {\n          // handle division rule 2\n          makeSyllable(i - startSyllable);\n        } else if (\n          this.isMuteConsonantOrF(c) &&\n          this.isLiquidConsonant(lookahead)\n        ) {\n          // handle exception 2\n          makeSyllable(i - startSyllable);\n        } else if (haveCompleteSyllable) {\n          // handle division rule 3\n          makeSyllable(i + 1 - startSyllable);\n        }\n\n        previousWasVowel = false;\n      }\n    }\n\n    // if we have a complete syllable, we can add it as a new one. Otherwise\n    // we tack the remaining characters onto the last syllable.\n    if (haveCompleteSyllable) syllables.push(word.substr(startSyllable));\n    else if (startSyllable > 0)\n      syllables[syllables.length - 1] += word.substr(startSyllable);\n\n    return syllables;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n    var match = this.regexVowel.exec(s.slice(startIndex));\n    if (match) {\n      if (match[1]) {\n        // the first group should be ignored, as it is to separate an i or u that is used as a consonant.\n        match.index += match[1].length;\n      }\n      return {\n        found: true,\n        startIndex: startIndex + match.index,\n        length: match[2].length\n      };\n    }\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\n/**\n * @class\n */\nexport class Spanish extends Language {\n  constructor() {\n    super(\"Spanish\");\n\n    this.vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"á\", \"é\", \"í\", \"ó\", \"ú\", \"ü\"];\n\n    this.weakVowels = [\"i\", \"u\", \"ü\", \"y\"];\n\n    this.strongVowels = [\"a\", \"e\", \"o\", \"á\", \"é\", \"í\", \"ó\", \"ú\"];\n\n    this.diphthongs = [\n      \"ai\",\n      \"ei\",\n      \"oi\",\n      \"ui\",\n      \"ia\",\n      \"ie\",\n      \"io\",\n      \"iu\",\n      \"au\",\n      \"eu\",\n      \"ou\",\n      \"ua\",\n      \"ue\",\n      \"uo\",\n      \"ái\",\n      \"éi\",\n      \"ói\",\n      \"úi\",\n      \"iá\",\n      \"ié\",\n      \"ió\",\n      \"iú\",\n      \"áu\",\n      \"éu\",\n      \"óu\",\n      \"uá\",\n      \"ué\",\n      \"uó\",\n      \"üe\",\n      \"üi\"\n    ];\n\n    this.uDiphthongExceptions = [\"gue\", \"gui\", \"qua\", \"que\", \"qui\", \"quo\"];\n  }\n\n  // c must be lowercase!\n  isVowel(c) {\n    for (var i = 0, end = this.vowels.length; i < end; i++)\n      if (this.vowels[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isWeakVowel(c) {\n    for (var i = 0, end = this.weakVowels.length; i < end; i++)\n      if (this.weakVowels[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isStrongVowel(c) {\n    for (var i = 0, end = this.strongVowels.length; i < end; i++)\n      if (this.strongVowels[i] === c) return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isDiphthong(s) {\n    for (var i = 0, end = this.diphthongs.length; i < end; i++)\n      if (this.diphthongs[i] === s) return true;\n\n    return false;\n  }\n\n  createSyllable(text) {\n    /*\n    var accented = false;\n    var ellidesToNext = false;\n\n    if (text.length > 0) {\n\n        if (text[0] == '`') {\n            accented = true;\n            text = text.substr(1);\n        }\n\n        if (text[text.length - 1] == '_') {\n            ellidesToNext = true;\n            text = text.substr(0, text.length - 1);\n        }\n    }\n\n    var s = new Syllable(text);\n\n    s.isMusicalAccent = accented;\n    s.elidesToNext = ellidesToNext;*/\n\n    return text;\n  }\n\n  /**\n   */\n  syllabifyWord(word) {\n    var syllables = [];\n\n    var haveCompleteSyllable = false;\n    var previousIsVowel = false;\n    var previousIsStrongVowel = false; // only valid if previousIsVowel == true\n    var startSyllable = 0;\n\n    // fixme: first check for prefixes\n\n    for (var i = 0; i < word.length; i++) {\n      var c = word[i].toLowerCase();\n\n      if (this.isVowel(c)) {\n        // we have a complete syllable as soon as we have a vowel\n        haveCompleteSyllable = true;\n\n        var cIsStrongVowel = this.isStrongVowel(c);\n\n        if (previousIsVowel) {\n          // if we're at a strong vowel, then we finish out the last syllable\n          if (cIsStrongVowel) {\n            if (previousIsStrongVowel) {\n              syllables.push(\n                this.createSyllable(\n                  word.substr(startSyllable, i - startSyllable)\n                )\n              );\n              startSyllable = i;\n            }\n          }\n        }\n\n        previousIsVowel = true;\n        previousIsStrongVowel = cIsStrongVowel;\n      } else {\n        if (!haveCompleteSyllable) {\n          // do nothing since we don't have a complete syllable yet...\n        } else {\n          // handle explicit syllable breaks\n          if (word[i] === \"-\") {\n            // start new syllable\n            syllables.push(\n              this.createSyllable(word.substr(startSyllable, i - startSyllable))\n            );\n            startSyllable = ++i;\n          } else {\n            var numberOfConsonants = 1,\n              consonant2;\n\n            // count how many more consonants there are\n            for (var j = i + 1; j < word.length; j++) {\n              if (this.isVowel(word[j])) break;\n              numberOfConsonants++;\n            }\n\n            if (numberOfConsonants === 1) {\n              // start new syllable\n              syllables.push(\n                this.createSyllable(\n                  word.substr(startSyllable, i - startSyllable)\n                )\n              );\n              startSyllable = i;\n            } else if (numberOfConsonants === 2) {\n              consonant2 = word[i + 1].toLowerCase();\n              if (\n                consonant2 === \"l\" ||\n                consonant2 === \"r\" ||\n                (c === \"c\" && consonant2 === \"h\")\n              ) {\n                // split before the consonant pair\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, i - startSyllable)\n                  )\n                );\n                startSyllable = i++;\n              } else {\n                //split the consonants\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, ++i - startSyllable)\n                  )\n                );\n                startSyllable = i;\n              }\n            } else if (numberOfConsonants === 3) {\n              consonant2 = word[i + 1].toLowerCase();\n\n              // if second consonant is s, divide cc-c, otherwise divide c-cc\n              if (consonant2 === \"s\") {\n                i += 2;\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, i - startSyllable)\n                  )\n                );\n              } else\n                syllables.push(\n                  this.createSyllable(\n                    word.substr(startSyllable, ++i - startSyllable)\n                  )\n                );\n\n              startSyllable = i;\n            } else if (numberOfConsonants === 4) {\n              // four always get split cc-cc\n              syllables.push(\n                this.createSyllable(\n                  word.substr(startSyllable, i - startSyllable + 2)\n                )\n              );\n              startSyllable = i + 2;\n              i += 3;\n            }\n          }\n\n          haveCompleteSyllable = false;\n        }\n\n        previousIsVowel = false;\n      }\n    }\n\n    // if we have a complete syllable, we can add it as a new one. Otherwise\n    // we tack the remaining characters onto the last syllable.\n    if (haveCompleteSyllable) syllables.push(word.substr(startSyllable));\n    else if (startSyllable > 0)\n      syllables[syllables.length - 1] += word.substr(startSyllable);\n    else if (syllables.length === 0) syllables.push(this.createSyllable(word));\n\n    return syllables;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n    var i, end, index;\n    var workingString = s.toLowerCase();\n\n    // do we have a diphthongs?\n    for (i = 0, end = this.diphthongs.length; i < end; i++) {\n      var d = this.diphthongs[i];\n      index = workingString.indexOf(d, startIndex);\n\n      if (index >= 0) {\n        // check the exceptions...\n        if (d[0] === \"u\" && index > 0) {\n          var tripthong = s.substr(index - 1, 3).toLowerCase();\n\n          for (\n            let j = 0, endj = this.uDiphthongExceptions.length;\n            i < endj;\n            j++\n          ) {\n            if (tripthong === this.uDiphthongExceptions[j]) {\n              // search from after the u...\n              return this.findVowelSegment(s, index + 1);\n            }\n          }\n        }\n\n        return { found: true, startIndex: index, length: d.length };\n      }\n    }\n\n    // no diphthongs. Let's look for single vowels then...\n    for (i = 0, end = this.vowels.length; i < end; i++) {\n      index = workingString.indexOf(this.vowels[i], startIndex);\n\n      if (index >= 0) return { found: true, startIndex: index, length: 1 };\n    }\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\nexport const language = {\n  english: new English(),\n  latin: new Latin(),\n  spanish: new Spanish()\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Text.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// generated based on the svg data\nexport let Glyphs = {\n  None: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    origin: {\n      x: 0,\n      y: 0\n    },\n    align: \"left\"\n  },\n  AcuteAccent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M4 0C-.614.52-.614.52-.803-3.182l60.768-108.422c4.52-7.182 10.543-13.67 18.075-13.67 5.27 0 14.31 1.264 23.346 7.793 7.53 5.223 8.803 11.752 8.803 16.975 0 3.917-.52 11.1-8.05 17.628L4 0z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 0, // TODO: figure out a better way to align this horizontally.  width should be 110.992,\n      height: 125.794\n    },\n    origin: {\n      x: 0.803,\n      y: 125.274\n    },\n    align: \"left\"\n  },\n  GraveAccent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M105.386.26C110 .78 110 .78 110.189-2.922l-60.768-108.422c-4.52-7.182-10.543-13.67-18.075-13.67-5.27 0-14.31 1.264-23.346 7.793-7.53 5.223-8.803 11.752-8.803 16.975 0 3.917.52 11.1 8.05 17.628L105.386.26z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 0, //110.992,\n      height: 125.794\n    },\n    origin: {\n      x: 0, // -110.992,\n      y: 125.274\n    },\n    align: \"left\"\n  },\n  Circle: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 -50A50 50 0 0 0 100 -50 50 50 0 0 0 0 -50M10 -50A40 40 0 0 1 90 -50 40 40 0 0 1 10 -50\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    },\n    origin: {\n      x: -50,\n      y: 100\n    }\n  },\n  Semicircle: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 -50A50 50 0 0 0 100 -50 5 5 0 0 0 90 -50 40 40 0 0 1 10 -50 5 5 0 0 0 0 -50\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 55\n    },\n    origin: {\n      x: -50,\n      y: 50\n    }\n  },\n  ReversedSemicircle: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 0A50 50 0 0 1 100 0 5 5 0 0 1 90 0 40 40 0 0 0 10 0 5 5 0 0 1 0 0\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 55\n    },\n    origin: {\n      x: -50,\n      y: 50\n    }\n  },\n  Stropha: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M1.22-73.438c4.165 13.02 12.238 27.084 24.217 42.188L49.657 0 34.812 27.344C18.666 55.47-.084 72.396-21.438 78.124c4.687-3.645 7.03-8.593 7.03-14.843 0-8.853-4.947-20.572-14.843-35.155L-48 0 1.22-73.438z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 97.657,\n      height: 151.562\n    },\n    origin: {\n      x: 48,\n      y: 73.438\n    },\n    align: \"left\"\n  },\n  BeginningAscLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 152.344\n    },\n    origin: {\n      x: 50,\n      y: 88.344\n    },\n    align: \"left\"\n  },\n  BeginningDesLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 151.562\n    },\n    origin: {\n      x: 50,\n      y: 75.562\n    },\n    align: \"left\"\n  },\n  CustosDescLong: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M39.063 273.472c5.73.52 7.29-6.25 4.687-20.312V-65.59c-13.542 2.083-24.22 5.468-32.03 10.156C3.905-50.226 0-43.714 0-35.904V71.91c5.73-5.21 10.677-8.594 14.844-10.157 5.73-1.562 12.24-2.343 19.53-2.343v196.875c0 11.458 1.563 17.187 4.688 17.187\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 46.353,\n      height: 339.582\n    },\n    origin: {\n      x: 0,\n      y: 65.59\n    },\n    align: \"left\"\n  },\n  CustosDescShort: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M34.375 191.923c0 8.333 1.563 12.24 4.688 11.72 3.125-.522 4.687-7.033 4.687-19.533v-250c-13.542 2.084-24.22 5.47-32.03 10.157C3.905-50.525 0-44.015 0-36.203V71.61c5.73-5.208 10.677-8.593 14.844-10.156 5.73-1.562 12.24-2.344 19.53-2.344v132.813z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 43.75,\n      height: 270.053\n    },\n    origin: {\n      x: 0,\n      y: 65.89\n    },\n    align: \"left\"\n  },\n  CustosLong: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M39.063-269.562c5.73-.52 7.29 6.25 4.687 20.312V69.5c-13.542-2.083-24.22-5.47-32.03-10.156C3.905 54.134 0 47.624 0 39.812V-68c5.73 5.208 10.677 8.594 14.844 10.156 5.73 1.563 12.24 2.344 19.53 2.344v-196.875c0-11.458 1.563-17.187 4.688-17.187z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 46.353,\n      height: 339.582\n    },\n    origin: {\n      x: 0,\n      y: 270.082\n    },\n    align: \"left\"\n  },\n  CustosShort: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M34.375-188.125c0-8.333 1.563-12.24 4.688-11.72 3.125.522 4.687 7.033 4.687 19.532v250c-13.542-2.083-24.22-5.468-32.03-10.156C3.905 54.324 0 47.813 0 40V-67.813c5.73 5.21 10.677 8.594 14.844 10.157 5.73 1.562 12.24 2.344 19.53 2.343v-132.812z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 43.75,\n      height: 270.052\n    },\n    origin: {\n      x: 0,\n      y: 200.365\n    },\n    align: \"left\"\n  },\n  DoClef: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0 98.406V-97.688C0-118 5.99-134.275 17.97-146.516c11.978-12.24 27.603-18.36 46.874-18.36 10.937 0 19.53 3.126 25.78 9.376s9.376 14.583 9.376 25v107.813l-6.25-5.47c-4.167-3.645-10.287-7.42-18.36-11.327-8.072-3.907-16.796-5.86-26.17-5.86-11.46 0-21.486 4.427-30.08 13.282-8.593 8.854-12.89 19.53-12.89 32.03s4.297 23.308 12.89 32.423c8.594 9.115 18.62 13.672 30.08 13.672 9.374 0 18.098-1.822 26.17-5.468 8.073-3.646 14.193-7.292 18.36-10.938l6.25-6.25V132c0 9.896-3.125 18.1-9.375 24.61-6.25 6.51-14.844 9.765-25.78 9.765-19.272 0-34.897-6.25-46.876-18.75C5.99 135.125 0 118.72 0 98.405z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 331.251\n    },\n    origin: {\n      x: 0,\n      y: 164.876\n    },\n    align: \"left\"\n  },\n  FaClef: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M85.156-32v193.75c0 9.375-1.562 14.323-4.687 14.844-1.564 0-2.605-.52-3.126-1.563-.52-1.04-.782-2.603-.78-4.686V56.28c-8.335-8.332-19.793-12.5-34.376-12.5-17.71 0-31.77 3.907-42.188 11.72V-32c0-18.23 14.193-27.344 42.578-27.344 28.385 0 42.578 9.115 42.578 27.344zM98.438 93V-92.156c0-19.27 5.73-34.896 17.187-46.875 11.458-11.98 26.562-17.97 45.313-17.97 10.937 0 19.14 2.865 24.61 8.594 5.467 5.73 8.202 13.542 8.202 23.437v103.126l-5.47-4.687c-3.645-3.647-9.374-7.293-17.186-10.94-7.813-3.645-15.886-5.467-24.22-5.468-11.978 0-22.004 4.167-30.077 12.5-8.073 8.334-12.11 18.36-12.11 30.08 0 11.717 4.037 22.004 12.11 30.858s18.1 13.28 30.078 13.28c8.333 0 16.406-1.822 24.22-5.468 7.81-3.645 13.54-7.03 17.186-10.156l5.47-5.468V125.81c0 9.896-2.865 17.84-8.594 23.83-5.73 5.988-13.802 8.983-24.22 8.983-18.75 0-33.853-6.12-45.31-18.36-11.46-12.24-17.19-27.994-17.19-47.265z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 193.752,\n      height: 333.595\n    },\n    origin: {\n      x: 0.001,\n      y: 157.001\n    },\n    align: \"left\"\n  },\n  Flat: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M7.813-204.406c4.166 0 6.25 5.208 6.25 15.625L12.5-10.657C33.854 13.302 54.167 25.28 73.438 25.28c9.374 0 14.062-4.686 14.062-14.06 0-6.25-1.042-11.72-3.125-16.407-2.083-4.688-7.03-9.766-14.844-15.235-7.81-5.47-13.02-8.984-15.624-10.547L27.344-45.81V-80.97c17.187 0 33.073 4.82 47.656 14.454C89.583-56.88 96.875-47.376 96.875-38c0 67.708-.26 101.562-.78 101.563-38.543 0-69.532-12.24-92.97-36.72C0-52.322-1.042-123.936 0-188c0-10.937 2.604-16.406 7.813-16.406z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 97.917,\n      height: 267.969\n    },\n    origin: {\n      x: 1.042,\n      y: 204.406\n    },\n    align: \"left\"\n  },\n  Mora: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M47.478-24c6.957 0 12.793 2.288 17.49 6.883C69.662-12.52 72-6.904 72-.267c0 6.64-2.337 12.352-7.033 17.118C60.27 21.618 54.435 24 47.477 24c-6.26 0-11.748-2.383-16.444-7.15C26.337 12.086 24 6.374 24-.265c0-6.638 2.337-12.255 7.033-16.85C35.73-21.713 41.217-24 47.478-24z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 48,\n      height: 48\n    },\n    origin: {\n      x: -24,\n      y: 24\n    },\n    align: \"left\"\n  },\n  Natural: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M7.906-166.563c-2.864 0-5.614.52-8.218 1.563v13.28l.78 56.25.782 78.907v85.157c.52 3.646 2.604 5.73 6.25 6.25l23.438-3.906 23.437-3.907v29.69c0 42.186-.26 63.54-.78 64.06l6.25 2.345c1.04.52 2.082.78 3.124.78 2.603 0 4.947-1.3 7.03-3.905L67.656-71.25c-.52-2.604-2.083-3.906-4.687-3.906-7.814 0-17.19 1.04-28.126 3.125l-19.53 3.124.78-38.28V-165c-2.604-1.042-5.323-1.562-8.188-1.563zM55.938-40v71.875l-41.407 7.03c0-48.436.262-72.655.783-72.655L55.938-40z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 70.311,\n      height: 330.469\n    },\n    origin: {\n      x: 0.312,\n      y: 166.563\n    },\n    align: \"left\"\n  },\n  Sharp: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"m41.725,-73.773c-5.421,-0.241-10.878,5.856-6.549,12.357L67.061,-20.473 61.264,-12.5 13.436,-71.199c-5.634,-5.934-16.988,1.032-11.232,9.783L50.756,0.182 2.203,61.416c-6.745,7.984 3.442,17.859 11.232,9.783L61.264,12.5l5.797,7.973-31.885,40.943c-5.578,6.844 5.588,16.005 11.594,9.783L77.568,33.154 108.367,71.199c4.894,6.717 17.343,-1.575 11.232,-9.783L87.715,20.473 93.873,12.5 141.34,71.199c6.725,7.67 17.509,-2.248 11.596,-9.783L104.02,0.182 152.936,-61.416c5.52,-7.02-5.541,-16.309-11.596,-9.783L93.873,-12.5l-6.158,-7.973 31.884766,-40.943c5.407,-7.045-5.505,-15.924-11.232,-9.783L77.568,-33.154 46.77,-71.199c-1.435,-1.708-3.238,-2.494-5.044922,-2.574zM77.568,-8.516 84.09,0.182 77.568,8.516 70.684,0.182Z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 154.646,\n      height: 147.987\n    },\n    origin: {\n      x: 0,\n      y: 74.098\n    },\n    align: \"left\"\n  },\n  OriscusAsc: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M50 30.25c0 12.5-3.125 21.354-9.375 26.562-3.125 2.605-7.813 3.907-14.063 3.907-3.125 0-5.99-.522-8.593-1.564-2.605-1.04-5.6-2.474-8.986-4.297C5.6 53.035 2.734 51.603.39 50.56c-2.343-1.04-5.338-2.474-8.984-4.296-3.646-1.823-6.77-3.256-9.375-4.297-2.603-1.043-5.468-1.564-8.593-1.564-6.25 0-10.937 1.563-14.062 4.688C-46.875 50.824-50 59.677-50 71.656v-106.25c0-13.02 3.125-21.875 9.375-26.562 3.125-2.604 7.813-3.906 14.063-3.907 3.125 0 5.99.52 8.593 1.563 2.605 1.042 5.73 2.474 9.376 4.297 3.646 1.823 6.51 2.995 8.594 3.516l10.938 5.468c6.25 3.126 11.458 4.69 15.624 4.69 6.25 0 10.938-1.564 14.063-4.69C46.875-55.426 50-64.02 50-76V30.25z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 147.656\n    },\n    origin: {\n      x: 50,\n      y: 76\n    },\n    align: \"left\"\n  },\n  OriscusDes: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 30.844v-106.25c0 11.458 3.125 20.052 9.375 25.78 3.125 3.126 7.813 4.69 14.063 4.688 4.687 0 13.41-3.255 26.17-9.765 12.762-6.51 21.746-9.766 26.954-9.766 6.25 0 10.938 1.303 14.063 3.907C46.875-55.874 50-47.02 50-34V72.25c0-11.98-3.125-20.833-9.375-26.563C37.5 42.563 32.812 41 26.562 41 21.875 41 13.023 44.385 0 51.156c-4.167 2.604-8.594 4.948-13.28 7.032-4.69 2.083-9.116 3.124-13.283 3.124-6.25 0-10.937-1.302-14.062-3.906C-46.875 52.198-50 43.344-50 30.844z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 147.656\n    },\n    origin: {\n      x: 50,\n      y: 75.406\n    },\n    align: \"left\"\n  },\n  OriscusLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M 19.055,78.887 C 20.242,78.487 21.532,77.890 22.925,77.097 24.318,76.304 26.700882,74.417 30.074,71.438 33.447,68.458 36.524,64.985 39.303,61.019 42.083,57.052 44.563,51.396 46.743,44.05 48.923,36.704 50.013,28.671 50.013,19.950525 L 50.013,-34.226 C 50.013,-54.464 42.074,-64.584 26.195,-64.584 20.248,-64.584 11.519,-61.410 0.007,-55.064 -11.506,-48.717 -20.235,-45.544 -26.182,-45.544 -34.515,-45.544 -40.568,-48.520 -44.340791,-54.473 -48.114,-60.426 -50.000,-67.369 -50.000,-75.303 L -50.000,30.07 C -50.000,49.909 -42.060754,59.829 -26.182,59.829 -21.023,59.829 -12.39,56.455 -0.284,49.709 11.822,42.963 20.648,39.59 26.195,39.59 29.369,40.777 30.362,44.25 29.17479,50.009 27.988,55.768 26.001,62.020829 23.216,68.767 z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 147.656\n    },\n    origin: {\n      x: 50,\n      y: 75.406\n    },\n    align: \"left\"\n  },\n  PodatusLower: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-4.688-30.28c22.396 0 34.636-.262 36.72-.782 5.728-1.563 8.593-5.21 8.593-10.938H50v97.656c0 2.604-1.302 4.167-3.906 4.688-5.21.52-21.355.78-48.438.78-23.958 0-38.54-.26-43.75-.78-2.604 0-3.906-1.302-3.906-3.906v-82.032c0-3.646 1.302-5.468 3.906-5.468h2.344c2.604.52 15.625.78 39.063.78z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 103.124\n    },\n    origin: {\n      x: 50,\n      y: 42\n    },\n    align: \"left\"\n  },\n  PodatusUpper: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-46.094-63.78c13.542 0 24.61 2.473 33.203 7.42C-4.298-51.41 0-43.99 0-34.093V62h-9.375c0-10.938-2.604-19.14-7.812-24.61-5.21-5.468-14.844-8.203-28.907-8.202-18.23 0-33.333 4.166-45.312 12.5v-75.782c0-19.79 15.104-29.687 45.312-29.687z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 91.406,\n      height: 125.781\n    },\n    origin: {\n      x: 91.406,\n      y: 63.781\n    },\n    align: \"right\"\n  },\n  Porrectus1: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M233.594 162.875c-58.855 0-107.032-6.25-144.53-18.75C34.895 125.895-11.46 99.855-50 66V-52.75C-21.354-24.625 26.302 6.885 92.97 41.78 123.697 57.928 163.54 66 212.5 66c21.354 0 34.635-9.896 39.844-29.688V151.94c0 7.29-6.25 10.937-18.75 10.937z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 302.344,\n      height: 215.627\n    },\n    origin: {\n      x: 50,\n      y: 52.75\n    },\n    align: \"left\"\n  },\n  Porrectus2: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M309.375 259.375c-50.52 0-110.938-22.396-181.25-67.188C48.437 141.667-10.938 94.272-50 50V-68.75C0-3.125 60.417 52.083 131.25 96.875c58.333 36.98 110.677 58.854 157.03 65.625h7.033c16.145 0 26.822-9.896 32.03-29.688v114.844c0 7.812-5.99 11.72-17.968 11.72z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 377.343,\n      height: 328.126\n    },\n    origin: {\n      x: 50,\n      y: 68.75\n    },\n    align: \"left\"\n  },\n  Porrectus3: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M309.375 355.78c-48.96-16.666-109.115-55.468-180.47-116.405C79.428 198.23 19.793 134.687-50 48.75V-70C20 40 94.104 103.79 135.25 148.063 190 200 230 230 288.28 258.906c4.168 2.083 8.334 3.125 12.5 3.125 12.5 0 21.355-10.937 26.564-32.81v114.06c0 9.376-3.386 14.063-10.156 14.064-2.084 0-4.688-.522-7.813-1.563z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 377.344,\n      height: 427.345\n    },\n    origin: {\n      x: 50,\n      y: 70\n    },\n    align: \"left\"\n  },\n  Porrectus4: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M350 453.438c-52.754-22.397-120-77.345-201.74-164.844C90.87 227.656 24.784 147.708-50 48.75V-70C-8.84-1.25 58.406 86.51 151.74 193.28c60.868 69.793 119.13 124.22 174.782 163.282 5.797 3.646 11.014 5.47 15.652 5.47 12.173 0 21.45-11.72 27.826-35.157V441.72c0 9.373-3.19 14.06-9.565 14.06-2.9 0-6.377-.78-10.435-2.342z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 420,\n      height: 525.78\n    },\n    origin: {\n      x: 50,\n      y: 70\n    },\n    align: \"left\"\n  },\n  PunctumCavum: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\n      },\n      {\n        type: \"negative\",\n        data:\n          \"M.08-42.56c9.585.206 20.126.53 27.954 6.822 4.96 3.9 4.71 10.792 4.574 16.482v51.278C22.09 27.066 7.283 26.072.168 26.01c-7.72.23-21.895.935-32.616 4.674.04-19.197-.083-38.395.064-57.59.567-7.5 7.834-12.33 14.62-13.774 5.818-1.498 11.857-1.86 17.844-1.88z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 123.438\n    },\n    origin: {\n      x: 50,\n      y: 60.906\n    },\n    align: \"left\"\n  },\n  PunctumQuadratum: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 123.438\n    },\n    origin: {\n      x: 50,\n      y: 60.906\n    },\n    align: \"left\"\n  },\n  PunctumQuadratumLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M0-36.5436c19.999799999999997 0 30 5.781 30 17.3436v56.717999999999996C23.437199999999997 30.956999999999997 13.4376 27.6756 0 27.6756s-23.4378 3.2819999999999996-30 9.843599999999999V-19.2c0-11.562 10.000200000000001-17.3436 30-17.3436z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 123.438\n    },\n    origin: {\n      x: 50,\n      y: 60.906\n    },\n    align: \"left\"\n  },\n  PunctumQuadratumAscLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 152.344\n    },\n    origin: {\n      x: 50,\n      y: 88.344\n    },\n    align: \"left\"\n  },\n  PunctumQuadratumDesLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 151.562\n    },\n    origin: {\n      x: 50,\n      y: 75.562\n    },\n    align: \"left\"\n  },\n  PunctumInclinatum: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M0-75.78L50 0 0 75-50 0 0-75.78z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 150.78\n    },\n    origin: {\n      x: 50,\n      y: 75.78\n    },\n    align: \"left\"\n  },\n  PunctumInclinatumLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M 0,-53.164 35,-0.117 0,52.383 -35,-0.117 0,-53.164 z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 105.546\n    },\n    origin: {\n      x: 50,\n      y: 53.164\n    },\n    align: \"left\"\n  },\n  Quilisma: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-50 34.938V-51c5.73 20.833 13.02 31.25 21.875 31.25 7.813 0 12.5-15.625 14.063-46.875 3.645 12.5 6.9 21.224 9.765 26.172s6.9 7.422 12.11 7.422c5.208 0 9.374-14.324 12.5-42.97 5.73 22.917 10.677 34.375 14.843 34.375 5.73 0 10.677-15.885 14.844-47.656v100c0 17.707-3.125 26.56-9.375 26.56-4.688 0-9.115-5.988-13.28-17.968-2.085 21.875-8.074 32.813-17.97 32.813-7.813 0-16.146-7.292-25-21.875-4.688 20.312-10.677 30.47-17.97 30.47-5.207 0-9.244-2.605-12.108-7.814C-48.568 47.698-50 41.708-50 34.938z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 150\n    },\n    origin: {\n      x: 50,\n      y: 89.282\n    },\n    align: \"left\"\n  },\n  TerminatingAscLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-9.375 40.22c0-11.98-4.948-17.97-14.844-17.97-10.936 0-19.53 3.646-25.78 10.938v-53.126c0-6.77 2.604-12.76 7.813-17.968 5.208-5.21 10.677-8.594 16.406-10.157 2.603-.52 5.207-.78 7.81-.78 3.647 0 7.032.78 10.157 2.343C-2.603-43.896 0-39.73 0-34V73.03h-9.375V40.22z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 49.999,\n      height: 121.873\n    },\n    origin: {\n      x: 49.999,\n      y: 48.843\n    },\n    align: \"right\"\n  },\n  TerminatingDesLiquescent: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M-9.375-48.156V-80.97H0V26.845c0 5.73-2.604 9.896-7.813 12.5-3.125 1.562-6.51 2.343-10.156 2.343-2.603 0-5.207-.26-7.81-.78-5.73-1.563-11.2-4.95-16.407-10.157C-47.398 25.542-50 19.292-50 12v-52.344c6.25 7.292 14.844 10.938 25.78 10.938 9.897 0 14.845-6.25 14.845-18.75z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 50,\n      height: 122.658\n    },\n    origin: {\n      x: 50,\n      y: 80.97\n    },\n    align: \"right\"\n  },\n  VerticalEpisemaAbove: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M-8-4c2 3 6 4 8 4s6-1 8-4v-52c-2-3-6-4-8-4s-6 1-8 4z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 16,\n      height: 60\n    },\n    origin: {\n      x: 8,\n      y: 60\n    },\n    align: \"left\"\n  },\n  VerticalEpisemaBelow: {\n    paths: [\n      {\n        type: \"positive\",\n        data: \"M-8 56c2 3 6 4 8 4s6-1 8-4v-52c-2-3-6-4-8-4s-6 1-8 4z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 16,\n      height: 60\n    },\n    origin: {\n      x: 8,\n      y: 0\n    },\n    align: \"left\"\n  },\n  VirgaLong: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M50-38v285.156c0 6.77-2.344 10.937-7.03 12.5-1.564 0-2.605-.78-3.126-2.344-.52-1.562-.782-10.156-.782-25.78V54.186C29.168 45.334 16.146 40.907 0 40.907c-22.917 0-39.583 5.208-50 15.624V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 326.562\n    },\n    origin: {\n      x: 50,\n      y: 66.906\n    },\n    align: \"left\"\n  },\n  VirgaShort: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M50-38v211.72c0 7.29-2.344 11.457-7.03 12.5-1.564 0-2.606-.783-3.126-2.345-.52-1.563-.782-10.156-.782-25.78V54.187C29.167 45.332 16.146 40.906 0 40.906c-22.917 0-39.583 5.21-50 15.625V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 253.126\n    },\n    origin: {\n      x: 50,\n      y: 66.906\n    },\n    align: \"left\"\n  },\n  Virgula: {\n    paths: [\n      {\n        type: \"positive\",\n        data:\n          \"M8.178-55.66c0-22.137 12.092-33.2 36.287-33.2 11.835 0 23.53 5.66 35.108 16.98C91.15-60.547 96.94-41.766 96.94-15.534c0 53.515-31.646 87.487-94.937 101.895-2.048-2.06-3.077-5.146-3.077-9.273 0-1.03.247-1.8.76-2.316 42.71-19.027 64.075-41.678 64.075-67.92 0-11.322-2.325-20.326-6.945-27.016-4.62-6.69-9.52-11.052-14.676-13.11-5.147-2.048-11.836-3.85-20.07-5.403C12.81-39.707 8.18-45.37 8.18-55.66z\"\n      }\n    ],\n    bounds: {\n      x: 0,\n      y: 0,\n      width: 98.014,\n      height: 175.221\n    },\n    origin: {\n      x: 1.074,\n      y: 88.86\n    },\n    align: \"left\"\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Glyphs.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport {\n  Units,\n  Pitch,\n  Point,\n  Rect,\n  Margins,\n  Size,\n  Step,\n  getCssForProperties\n} from \"./Exsurge.Core.js\";\nimport { Glyphs } from \"./Exsurge.Glyphs.js\";\nimport { language } from \"./Exsurge.Text.js\";\n\nfunction getFontFilenameForProperties(properties = {}, url = \"{}\") {\n  var italic = properties[\"font-style\"] === \"italic\" ? \"Italic\" : \"\",\n    bold = properties[\"font-weight\"] === \"bold\" ? \"Bold\" : \"\";\n  return url.replace(\n    \"{}\",\n    `${italic || bold ? `${bold}${italic}` : `Regular`}`\n  );\n}\n\n// load in the web font for special chant characters here:\n// var __exsurgeCharactersFont = require(\"url?limit=30000!../assets/fonts/ExsurgeChar.otf\")\n\nconst canAccessDOM = typeof document !== \"undefined\";\n\nconst __getNeumeFromSvgElem = (score, elem) => {\n  let note =\n    score.notes[\n      elem.parentElement\n        .querySelector(\"[element-index]\")\n        .getAttribute(\"element-index\")\n    ];\n  return note.neume || note;\n};\n\n// for positioning markings on notes\nexport var MarkingPositionHint = {\n  Default: 0,\n  Above: 1,\n  Below: 2\n};\n\n/**\n * List of types of text and their defaults relative to lyrics\n * @type Array\n */\nexport const TextTypes = {\n  supertitle: {\n    display: \"Supertitle\",\n    defaultSize: (size) => (size * 7) / 6, // 14pt\n    containedInScore: (score) => score.titles.hasSupertitle(),\n    getFromScore: (score) => score.titles.supertitle\n  },\n  title: {\n    display: \"Title\",\n    defaultSize: (size) => (size * 3) / 2, // 18pt\n    containedInScore: (score) => score.titles.hasTitle(),\n    getFromScore: (score) => score.titles.title\n  },\n  subtitle: {\n    display: \"Subtitle\",\n    defaultSize: (size) => size, // 12pt\n    containedInScore: (score) => score.titles.hasSubtitle(),\n    getFromScore: (score) => score.titles.subtitle\n  },\n  leftRight: {\n    display: \"Left / Right Text\",\n    cssClass: \"textLeftRight\",\n    defaultSize: (size) => size * 0.9,\n    containedInScore: (score) =>\n      score.titles.hasTextLeft() || score.titles.hasTextRight(),\n    getFromScore: (score, elem) => score.titles[elem.extraClass],\n    getFromSvgElem: (score, elem) =>\n      score.titles[\n        elem.classList.contains(\"textRight\") ? \"textRight\" : \"textLeft\"\n      ]\n  },\n  annotation: {\n    display: \"Annotation\",\n    defaultSize: (size) => (size * 2) / 3,\n    containedInScore: (score) =>\n      !!score.annotation &&\n      (!score.mergeAnnotationWithTextLeft || score.dropCap),\n    getFromScore: (score, { elementIndex = 0 }) =>\n      score.annotation &&\n      (score.annotation.annotations\n        ? score.annotation.annotations[elementIndex]\n        : score.annotation)\n  },\n  dropCap: {\n    display: \"Drop Cap\",\n    defaultSize: (size) => size * 4,\n    containedInScore: (score) => !!score.dropCap,\n    getFromScore: (score) => score.dropCap\n  },\n  al: {\n    display: \"Above Staff\",\n    cssClass: \"aboveLinesText\",\n    defaultSize: (size) => size,\n    containedInScore: (score) => score.hasAboveLinesText,\n    getFromScore: (score, elem) =>\n      score.notations[elem.notation.notationIndex].alText[elem.alIndex],\n    getFromSvgElem: (score, elem) =>\n      __getNeumeFromSvgElem(score, elem).alText[\n        elem.getAttribute(\"al-index\") || 0\n      ]\n  },\n  choralSign: {\n    display: \"Choral Sign\",\n    size: (ctxt) => ctxt.staffInterval * 1.5,\n    containedInScore: (score) => false,\n    getFromScore: (score, elem) =>\n      score.notes[elem.note.elementIndex].choralSign\n  },\n  lyric: {\n    display: \"Lyric\",\n    defaultSize: (size) => size * 0.9,\n    containedInScore: (score) => score.hasLyrics,\n    getFromScore: (score, elem) =>\n      score.notations[elem.notation.notationIndex].lyrics[elem.lyricIndex],\n    getFromSvgElem: (score, elem) =>\n      __getNeumeFromSvgElem(score, elem).lyrics[\n        elem.getAttribute(\"lyric-index\") || 0\n      ]\n  },\n  translation: {\n    display: \"Translation\",\n    defaultSize: (size) => size * 0.75,\n    containedInScore: (score) => score.hasTranslations,\n    getFromScore: (score, elem) =>\n      score.notations[elem.notation.notationIndex].translationText[\n        elem.translationIndex\n      ],\n    getFromSvgElem: (score, elem) =>\n      __getNeumeFromSvgElem(score, elem).translationText[\n        elem.getAttribute(\"translation-index\") || 0\n      ]\n  }\n};\nexport const TextTypesByClass = {};\nObject.entries(TextTypes).forEach(([key, entry]) => {\n  let cssClass = (entry.cssClass = entry.cssClass || key);\n  entry.key = key;\n  TextTypesByClass[cssClass] = entry;\n});\n\nexport const DefaultTrailingSpace = (ctxt) =>\n  ctxt.intraNeumeSpacing * ctxt.interSyllabicMultiplier;\nDefaultTrailingSpace.isDefault = true;\n\nexport let GlyphCode = {\n  None: \"None\",\n\n  AcuteAccent: \"AcuteAccent\",\n  GraveAccent: \"GraveAccent\",\n  Circle: \"Circle\",\n  Semicircle: \"Semicircle\",\n  ReversedSemicircle: \"ReversedSemicircle\",\n  Stropha: \"Stropha\",\n  StrophaLiquescent: \"StrophaLiquescent\",\n\n  BeginningAscLiquescent: \"BeginningAscLiquescent\",\n  BeginningDesLiquescent: \"BeginningDesLiquescent\",\n\n  CustosDescLong: \"CustosDescLong\",\n  CustosDescShort: \"CustosDescShort\",\n  CustosLong: \"CustosLong\",\n  CustosShort: \"CustosShort\",\n\n  // clefs and other markings\n  DoClef: \"DoClef\",\n  FaClef: \"FaClef\",\n  Flat: \"Flat\",\n  Mora: \"Mora\",\n  Natural: \"Natural\",\n  OriscusAsc: \"OriscusAsc\",\n  OriscusDes: \"OriscusDes\",\n  OriscusLiquescent: \"OriscusLiquescent\",\n\n  PodatusLower: \"PodatusLower\",\n  PodatusUpper: \"PodatusUpper\",\n\n  Porrectus1: \"Porrectus1\", // 1 staff line difference,\n  Porrectus2: \"Porrectus2\", // 2 lines difference, etc...\n  Porrectus3: \"Porrectus3\",\n  Porrectus4: \"Porrectus4\",\n\n  PunctumCavum: \"PunctumCavum\",\n  PunctumQuadratum: \"PunctumQuadratum\",\n  PunctumQuadratumLiquescent: \"PunctumQuadratumLiquescent\",\n  PunctumQuadratumAscLiquescent: \"PunctumQuadratumAscLiquescent\",\n  PunctumQuadratumDesLiquescent: \"PunctumQuadratumDesLiquescent\",\n  PunctumInclinatum: \"PunctumInclinatum\",\n  PunctumInclinatumLiquescent: \"PunctumInclinatumLiquescent\",\n  Quilisma: \"Quilisma\",\n\n  Sharp: \"Sharp\",\n  TerminatingAscLiquescent: \"TerminatingAscLiquescent\",\n  TerminatingDesLiquescent: \"TerminatingDesLiquescent\",\n  VerticalEpisemaAbove: \"VerticalEpisemaAbove\",\n  VerticalEpisemaBelow: \"VerticalEpisemaBelow\",\n  VirgaLong: \"VirgaLong\",\n  VirgaShort: \"VirgaShort\",\n  Virgula: \"Virgula\",\n\n  UpperBrace: \"UpperBrace\"\n}; // GlyphCode\n\nexport var QuickSvg = {\n  // namespaces\n  ns: \"http://www.w3.org/2000/svg\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\",\n  xlink: \"http://www.w3.org/1999/xlink\",\n\n  hasDOMAccess: function () {\n    return canAccessDOM;\n  },\n\n  // create the root level svg object\n  svg: function (width, height) {\n    var node = document.createElementNS(this.ns, \"svg\");\n\n    node.setAttribute(\"xmlns\", this.ns);\n    node.setAttribute(\"version\", \"1.1\");\n    node.setAttributeNS(this.xmlns, \"xmlns:xlink\", this.xlink);\n\n    node.setAttribute(\"width\", width);\n    node.setAttribute(\"height\", height);\n\n    // create the defs element\n    var defs = document.createElementNS(this.ns, \"defs\");\n    node.appendChild(defs);\n\n    node.defs = defs;\n\n    node.clearNotations = function () {\n      // clear out all children except defs\n      node.removeChild(defs);\n\n      while (node.hasChildNodes()) node.removeChild(node.lastChild);\n\n      node.appendChild(defs);\n    };\n\n    return node;\n  },\n\n  rect: function (width, height) {\n    var node = document.createElementNS(this.ns, \"rect\");\n\n    node.setAttribute(\"width\", width);\n    node.setAttribute(\"height\", height);\n\n    return node;\n  },\n\n  line: function (x1, y1, x2, y2) {\n    var node = document.createElementNS(this.ns, \"line\");\n\n    node.setAttribute(\"x1\", x1);\n    node.setAttribute(\"y1\", y1);\n    node.setAttribute(\"x2\", x2);\n    node.setAttribute(\"y2\", y2);\n\n    return node;\n  },\n\n  g: function () {\n    var node = document.createElementNS(this.ns, \"g\");\n\n    return node;\n  },\n\n  text: function () {\n    var node = document.createElementNS(this.ns, \"text\");\n\n    return node;\n  },\n\n  tspan: function (str) {\n    var node = document.createElementNS(this.ns, \"tspan\");\n    node.textContent = str;\n\n    return node;\n  },\n\n  // nodeRef should be the id of the object in defs (without the #)\n  use: function (nodeRef) {\n    var node = document.createElementNS(this.ns, \"use\");\n    node.setAttributeNS(this.xlink, \"xlink:href\", \"#\" + nodeRef);\n\n    return node;\n  },\n\n  svgFragmentForGlyph: function (glyph) {\n    var svgSrc = \"\";\n    for (var i = 0; i < glyph.paths.length; ++i) {\n      var path = glyph.paths[i];\n      svgSrc += QuickSvg.createFragment(path.data ? \"path\" : \"g\", {\n        d: path.data || undefined,\n        fill: path.type === \"negative\" ? \"#fff\" : undefined\n      });\n    }\n    return svgSrc;\n  },\n\n  nodesForGlyph: function (glyph, functionName = \"createNode\") {\n    var nodes = [];\n    for (var i = 0; i < glyph.paths.length; ++i) {\n      var path = glyph.paths[i];\n      let props = {};\n      if (path.data) props.d = path.data;\n      if (path.type === \"negative\") props.fill = \"#fff\";\n      nodes.push(QuickSvg[functionName](path.data ? \"path\" : \"g\", props));\n    }\n    return nodes;\n  },\n\n  createNode: function (name, attributes, children) {\n    var node = document.createElementNS(this.ns, name);\n    if (attributes && attributes.source) {\n      node.source = attributes.source;\n      delete attributes.source;\n    }\n    for (var attr in attributes) {\n      if (\n        attributes.hasOwnProperty(attr) &&\n        typeof attributes[attr] !== \"undefined\"\n      ) {\n        var val = attributes[attr];\n        var match = attr.match(/^([^:]+):([^:]+)$/);\n        if (match) {\n          node.setAttributeNS(this[match[1]], match[2], val);\n        } else {\n          node.setAttribute(attr, val);\n        }\n      }\n    }\n    if (children) {\n      if (typeof children === \"string\") {\n        node.textContent = children;\n      } else if (children.constructor === [].constructor) {\n        for (var i = 0; i < children.length; ++i) {\n          node.appendChild(children[i]);\n        }\n      } else {\n        node.appendChild(children);\n      }\n    }\n    return node;\n  },\n\n  createSvgTree(name, props, ...children) {\n    if (\"class\" in props) {\n      props.className = props.class;\n      delete props.class;\n    }\n    if (children.length === 1 && children[0] instanceof Array) {\n      children = children[0];\n    }\n    const convertKeysToCamelCase = (obj) => {\n      for (let key of Object.keys(obj)) {\n        if (/[-:][a-z]/.test(key)) {\n          if (/^\\w+-index$/.test(key)) continue;\n          let camelCase = key.replace(/[-:]([a-z])/g, (whole, letter) =>\n            letter.toUpperCase()\n          );\n          obj[camelCase] = obj[key];\n          delete obj[key];\n        }\n      }\n    };\n    convertKeysToCamelCase(props);\n    if (props.style) convertKeysToCamelCase(props.style);\n    let source = props.source;\n    if (source && source.sourceGabc) {\n      props[\"source-gabc\"] = source.sourceGabc;\n    }\n    return { name, props, children };\n  },\n\n  createFragment: function (name, attributes, child) {\n    if (child === undefined || child === null) child = \"\";\n\n    var fragment = \"<\" + name + \" \";\n\n    for (var attr in attributes) {\n      if (\n        attributes.hasOwnProperty(attr) &&\n        typeof attributes[attr] !== \"undefined\"\n      )\n        fragment += attr + '=\"' + attributes[attr] + '\" ';\n    }\n\n    fragment += \">\" + child + \"</\" + name + \">\";\n\n    return fragment;\n  },\n\n  parseFragment: function (fragment) {\n    // create temporary holder\n    var well = document.createElement(\"svg\");\n\n    // act as a setter if svg is given\n    if (fragment) {\n      var container = this.g();\n\n      // dump raw svg\n      // do this to allow the browser to automatically create svg nodes?\n      well.innerHTML =\n        \"<svg>\" +\n        fragment\n          .replace(/\\n/, \"\")\n          .replace(/<(\\w+)([^<]+?)\\/>/g, \"<$1$2></$1>\") +\n        \"</svg>\";\n\n      // transplant nodes\n      for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\n        container.appendChild(well.firstChild.firstChild);\n\n      return container;\n    }\n  },\n\n  translate: function (node, x, y) {\n    node.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n    return node;\n  },\n\n  scale: function (node, sx, sy) {\n    node.setAttribute(\"transform\", \"scale(\" + sx + \",\" + sy + \")\");\n    return node;\n  }\n};\n\nexport var TextMeasuringStrategy = {\n  // shapes\n  Svg: 0,\n  Canvas: 1,\n  OpenTypeJS: 2\n};\n\nconst specialCharMap = {\n  \"℣\": 'v',\n  \"℟\": 'r'\n};\n\n/*\n * ChantContext\n */\nexport class ChantContext {\n  constructor(\n    textMeasuringStrategy = QuickSvg.hasDOMAccess()\n      ? TextMeasuringStrategy.Canvas\n      : TextMeasuringStrategy.OpenTypeJS\n  ) {\n    this.textMeasuringStrategy = textMeasuringStrategy;\n    this.defs = {};\n    this.makeDefs = [];\n    if (QuickSvg.hasDOMAccess()) {\n      this.defsNode = QuickSvg.createNode(\"defs\");\n    }\n\n    // font styles\n    this.textStyles = {};\n    this.textColor = \"#000\";\n    this.setFont(\"'Palatino Linotype', 'Book Antiqua', Palatino, serif\", 16);\n\n    this.rubricColor = \"#d00\";\n    this.specialCharProperties = {\n      \"font-family\": \"'Exsurge Characters'\",\n      fill: this.rubricColor\n    };\n    this.textBeforeSpecialChar = \"\";\n    this.textAfterSpecialChar = \".\";\n    this.specialCharText = (char) => specialCharMap[char] || char;\n\n    this.fontStyleDictionary = {\n      b: { \"font-weight\": \"bold\" },\n      i: { \"font-style\": \"italic\" },\n      u: { \"text-decoration\": \"underline\" },\n      ul: { \"text-decoration\": \"underline\" },\n      c: { fill: this.rubricColor },\n      sc: {\n        \"font-variant\": \"small-caps\",\n        \"font-variant-caps\": \"small-caps\",\n        \"font-feature-settings\": \"'smcp'\",\n        \"-webkit-font-feature-settings\": \"'smcp'\"\n      }\n    };\n\n    this.markupSymbolDictionary = {\n      \"*\": \"b\",\n      \"_\": \"i\",\n      \"^\": \"c\",\n      \"%\": \"sc\"\n    };\n\n    this.textStyles.al.prefix = \"<i>\";\n\n    this.textStyles.translation.prefix = \"<i>\";\n\n    this.textStyles.dropCap.padding = 1; // minimum padding on either side of drop cap in staffIntervals\n\n    this.textStyles.annotation.padding = 1; // minimum padding on either side of annotation in staffIntervals\n\n    this.minLedgerSeparation = 2; // multiple of staffInterval\n    this.minSpaceAboveStaff = 2; // multiple of staffInterval\n    this.minSpaceBelowStaff = 1; // multiple of staffInterval\n    this.spaceBetweenSystems = 1.5; // multiple of staffInterval\n\n    // everything depends on the scale of the punctum\n    this.glyphPunctumWidth = Glyphs.PunctumQuadratum.bounds.width;\n    this.glyphPunctumHeight = Glyphs.PunctumQuadratum.bounds.height;\n\n    // max space to add between notations when justifying, in multiples of this.staffInterval\n    this.maxExtraSpaceInStaffIntervals = 0.5;\n\n    // for keeping track of the clef\n    this.activeClef = null;\n\n    this.neumeLineColor = \"#000\";\n    this.staffLineColor = \"#000\";\n    this.dividerLineColor = \"#000\";\n\n    this.defaultLanguage = language.latin;\n\n    // calculate the pixel ratio for drawing to a canvas\n    this.pixelRatio = window.devicePixelRatio || 1.0;\n\n    //this.canvasCtxt.scale(this.pixelRatio, this.pixelRatio);\n\n    if (textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n      this.svgTextMeasurer = QuickSvg.svg(0, 0);\n      this.svgTextMeasurer.setAttribute(\"id\", \"TextMeasurer\");\n      this.svgTextMeasurer.setAttribute(\"style\", \"position:absolute\");\n      document.body.insertBefore(\n        this.svgTextMeasurer,\n        document.body.firstChild\n      );\n    } else if (textMeasuringStrategy === TextMeasuringStrategy.Canvas) {\n      this.makeCanvasIfNeeded();\n    }\n\n    // for connecting neume syllables...\n    this.syllableConnector = \"-\";\n\n    // set whether to scale the def tags (scaleDefs = true) or the use tags.\n    this.scaleDefs = true;\n\n    // fixme: for now, we just set these using the glyph scales as noted above, presuming a\n    // staff line size of 0.5 in. Really what we should do is scale the punctum size based\n    // on the text metrics, right? 1 punctum ~ x height size?\n    this.setGlyphScaling(1.0 / 16.0);\n\n    // minimum space between puncta of different syllables, in multiples of this.intraNeumeSpacing\n    this.interSyllabicMultiplier = 2.5;\n\n    // space between an accidental and the following note, in multiples of this.intraNeumeSpacing\n    this.accidentalSpaceMultiplier = 2;\n\n    // space added between puncta of different words, in multiples of this.intraNeumeSpacing\n    this.interVerbalMultiplier = 1;\n\n    this.drawGuides = false;\n    this.drawDebuggingBounds = true;\n\n    // we keep track of where we are in processing notations, so that\n    // we can maintain the context for notations to know about.\n    //\n    // these are only gauranteed to be valid during the performLayout phase!\n    this.activeNotations = null;\n    this.currNotationIndex = -1;\n\n    // chant notation elements are normally separated by a minimum fixed amount of space\n    // on the staff line. It can happen, however, that two text elements are almost close\n    // enough to merge, only to be separated much more by the required hyphen (or other\n    // connecting string).\n    //\n    // This tolerance value allows a little bit of flexibility to merge two close lyrical\n    // elements, thus bringing the chant notation elements a bit closer than otherwise\n    // would be normally allowed.\n    //\n    // condensing tolerance is a percentage value (0.0-1.0, inclusive) that indicates\n    // how much the default spacing can shrink. E.g., a value of 0.20 allows the layout\n    // engine to separate two glyphs by only 80% of the normal inter-neume spacing value.\n    this.condensingTolerance = 0.3;\n\n    // if auto color is true, then exsurge tries to automatically colorize\n    // some elements of the chant (directives become rubric color, etc.)\n    this.autoColor = true;\n\n    this.useExtraTextOnly = true;\n\n    this.insertFontsInDoc();\n  }\n\n  getFontForProperties(properties = {}, fontFamily) {\n    let key = getFontFilenameForProperties(properties),\n      keyWithFontFamily = getFontFilenameForProperties(properties, fontFamily);\n    return (\n      this.fontDictionary &&\n      (this.fontDictionary[keyWithFontFamily] ||\n        this.fontDictionary[fontFamily] ||\n        this.fontDictionary.Regular)\n    );\n  }\n\n  setFont(font, size = 16, baseStyle = {}, opentypeFontDictionary) {\n    for (let [key, textType] of Object.entries(TextTypes)) {\n      let textStyle = (this.textStyles[key] = this.textStyles[key] || {});\n      textStyle.size = textType.defaultSize\n        ? textType.defaultSize(size, this)\n        : textType.size(this);\n      textStyle.font = font;\n      textStyle.color = this.textColor || \"#000\";\n    }\n\n    this.baseTextStyle = baseStyle;\n\n    if (opentypeFontDictionary) {\n      this.textMeasuringStrategy = TextMeasuringStrategy.OpenTypeJS;\n      this.fontDictionary = opentypeFontDictionary;\n    }\n  }\n\n  setRubricColor(color) {\n    this.rubricColor = color;\n    this.specialCharProperties.fill = color;\n    this.fontStyleDictionary.c.fill = color;\n  }\n\n  setScaleDefs(scaleDefs) {\n    scaleDefs = !!scaleDefs;\n    if (this.scaleDefs !== scaleDefs) {\n      this.scaleDefs = scaleDefs;\n      this.setGlyphScaling(this.glyphScaling);\n    }\n  }\n\n  createStyleCss() {\n    var style = \"\";\n    for (let [key, textType] of Object.entries(TextTypes)) {\n      var cssClass = textType.cssClass,\n        { color, font, size } = this.textStyles[key];\n      style += `svg.Exsurge .${cssClass}{fill:${color};font-family:${font};font-size:${size}px;font-kerning:normal}`;\n    }\n    return style;\n  }\n\n  createStyleNode() {\n    var node = QuickSvg.createNode(\"style\", {});\n    node.textContent = this.createStyleCss(this);\n    return node;\n  }\n\n  createStyleTree() {\n    return { name: \"style\", props: {}, children: [this.createStyleCss(this)] };\n  }\n\n  createStyle() {\n    return \"<style>\" + this.createStyleCss(this) + \"</style>\";\n  }\n\n  updateHyphenWidth() {\n    // measure the size of a hyphen for the lyrics\n    var hyphen = new Lyric(\n      this,\n      this.syllableConnector,\n      LyricType.SingleSyllable\n    );\n    var multiplier =\n      this.minLyricWordSpacing /\n        (this.hyphenWidth || this.minLyricWordSpacing) || 1;\n    this.hyphenWidth = hyphen.bounds.width;\n\n    this.minLyricWordSpacing = multiplier * this.hyphenWidth;\n  }\n\n  setStaffHeight(staffHeight) {\n    this.setGlyphScaling(staffHeight / 600);\n  }\n\n  setGlyphScaling(glyphScaling) {\n    this.glyphScaling = glyphScaling;\n\n    this.staffInterval = this.glyphPunctumWidth * this.glyphScaling;\n\n    // setup the line weights for the various elements.\n    this.staffLineWeight = Math.ceil((5 * this.staffInterval) / 8) / 5;\n    this.neumeLineWeight = this.staffLineWeight; // the weight of connecting lines in the glyphs.\n    this.dividerLineWeight = this.neumeLineWeight; // of quarter bar, half bar, etc.\n    this.episemaLineWeight = this.neumeLineWeight * 1.25; // of horizontal episemata\n\n    this.intraNeumeSpacing = this.staffInterval / 2.0;\n\n    while (this.defsNode && this.defsNode.firstChild)\n      this.defsNode.removeChild(this.defsNode.firstChild);\n    for (var i = 0; i < this.makeDefs.length; ++i) {\n      this.makeDefs[i]();\n    }\n\n    this.updateHyphenWidth();\n  }\n\n  calculateHeightFromStaffPosition(staffPosition) {\n    return -staffPosition * this.staffInterval;\n  }\n\n  insertFontsInDoc() {\n    if (!canAccessDOM) return;\n\n    var styleElement = document.getElementById(\"exsurge-fonts\");\n\n    if (styleElement === null) {\n      // create it since it doesn't exist yet.\n      styleElement = document.createElement(\"style\");\n      styleElement.id = \"exsurge-fonts\";\n\n      // styleElement.appendChild(document.createTextNode(\"@font-face{font-family: 'Exsurge Characters';font-weight: normal;font-style: normal;src: url(\" + __exsurgeCharactersFont + \") format('opentype');}\"));\n\n      document.head.appendChild(styleElement);\n    }\n  }\n\n  // returns the next neume starting at this.currNotationIndex, or null\n  // if there isn't a neume after this one...\n  findNextNeume() {\n    if (typeof this.currNotationIndex === \"undefined\")\n      throw \"findNextNeume() called without a valid currNotationIndex set\";\n\n    for (var i = this.currNotationIndex + 1; i < this.notations.length; i++) {\n      var notation = this.notations[i];\n\n      if (notation.isNeume && !notation.hasNoWidth) return notation;\n    }\n\n    return null;\n  }\n\n  makeCanvasIfNeeded() {\n    if (!this.canvas) {\n      this.canvas = document.createElement(\"canvas\");\n      this.canvasCtxt = this.canvas.getContext(\"2d\");\n    }\n  }\n\n  setCanvasSize(width, height, scale = 1) {\n    this.makeCanvasIfNeeded();\n\n    this.canvas.style.width = width * scale + \"px\";\n    this.canvas.style.height = height * scale + \"px\";\n    scale *= this.pixelRatio;\n    this.canvas.width = width * scale;\n    this.canvas.height = height * scale;\n\n    this.canvasCtxt.setTransform(scale, 0, 0, scale, 0, 0);\n  }\n}\n\n/*\n * ChantLayoutElement\n */\nexport class ChantLayoutElement {\n  constructor() {\n    this.bounds = new Rect();\n    this.origin = new Point(0, 0);\n\n    this.selected = false;\n    this.highlighted = false;\n  }\n\n  // draws the element on an html5 canvas\n  draw(ctxt) {\n    throw \"ChantLayout Elements must implement draw(ctxt)\";\n  }\n\n  // returns svg element\n  createSvgNode(ctxt) {\n    throw \"ChantLayout Elements must implement createSvgNode(ctxt)\";\n  }\n\n  // returns svg code for the element, used for printing support\n  createSvgFragment(ctxt) {\n    throw \"ChantLayout Elements must implement createSvgFragment(ctxt)\";\n  }\n}\n\nexport class DividerLineVisualizer extends ChantLayoutElement {\n  constructor(ctxt, staffPosition0, staffPosition1, divider) {\n    super();\n\n    this.divider = divider;\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition0);\n    var y1 = ctxt.calculateHeightFromStaffPosition(staffPosition1);\n\n    if (y0 > y1) {\n      var temp = y0;\n      y0 = y1;\n      y1 = temp;\n    }\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.dividerLineWeight;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = this.bounds.width / 2;\n    this.origin.y = y0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.dividerLineColor;\n\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.dividerLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    let props = {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: ctxt.dividerLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.dividerLineColor,\n      class: \"dividerLine\"\n    };\n    if (this.divider) {\n      if (this.divider.selected) props.class += \" selected\";\n      props[\"source-index\"] = this.divider.sourceIndex;\n      props[\"element-index\"] = this.divider.elementIndex;\n      props.source = this.divider;\n    }\n    return props;\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\nexport class NeumeLineVisualizer extends ChantLayoutElement {\n  constructor(ctxt, note0, note1, hanging) {\n    super();\n\n    var staffPosition0 = note0.staffPosition;\n    var staffPosition1 = note1.staffPosition;\n\n    // note0 should be the upper one for our calculations here\n    if (staffPosition0 < staffPosition1) {\n      var temp = staffPosition0;\n      staffPosition0 = staffPosition1;\n      staffPosition1 = temp;\n    }\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition0);\n    var y1 = 0;\n\n    if (hanging) {\n      // if the difference between the notes is only one, and the upper\n      // note is on a line, and the lower note is within the four staff lines,\n      // then our hanging line goes past the lower note by a whole\n      // staff interval\n      if (\n        staffPosition0 - staffPosition1 === 1 &&\n        Math.abs(staffPosition0) % 2 === 1 &&\n        staffPosition1 > -3\n      )\n        staffPosition1--;\n\n      y1 += (ctxt.glyphPunctumHeight * ctxt.glyphScaling) / 2.2;\n    }\n\n    y1 += ctxt.calculateHeightFromStaffPosition(staffPosition1);\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.neumeLineWeight;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.neumeLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    return {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: ctxt.neumeLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"neumeLine\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\nexport class VirgaLineVisualizer extends ChantLayoutElement {\n  constructor(ctxt, note) {\n    super();\n\n    var staffPosition = note.staffPosition;\n\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition);\n    var y1;\n\n    if (Math.abs(staffPosition % 2) === 0) y1 = y0 + ctxt.staffInterval * 1.8;\n    else y1 = y0 + ctxt.staffInterval * 2.7;\n\n    this.bounds.x = 0;\n    this.bounds.y = y0;\n    this.bounds.width = ctxt.neumeLineWeight;\n    this.bounds.height = y1 - y0;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      ctxt.neumeLineWeight,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    return {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: ctxt.neumeLineWeight,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"neumeLine\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\nexport class GlyphVisualizer extends ChantLayoutElement {\n  constructor(ctxt, glyphCode) {\n    super();\n\n    this.glyph = null;\n\n    this.setGlyph(ctxt, glyphCode);\n  }\n\n  setGlyph(ctxt, glyphCode) {\n    if (this.glyphCode !== glyphCode) {\n      if (\n        typeof glyphCode === \"undefined\" ||\n        glyphCode === null ||\n        glyphCode === \"\"\n      )\n        this.glyphCode = GlyphCode.None;\n      else this.glyphCode = glyphCode;\n\n      this.glyph = Glyphs[this.glyphCode];\n\n      // if this glyph hasn't been used yet, then load it up in the defs section for sharing\n      if (!ctxt.defs.hasOwnProperty(this.glyphCode)) {\n        var getDefProps = () => {\n          var options = {\n            id: this.glyphCode,\n            class: \"glyph\"\n          };\n          if (ctxt.scaleDefs === true) {\n            options.transform = \"scale(\" + ctxt.glyphScaling + \")\";\n          }\n          return options;\n        };\n        var makeDef = () => {\n          let options = getDefProps();\n          // create the ref\n          ctxt.defs[this.glyphCode] = QuickSvg.createFragment(\n            \"g\",\n            options,\n            QuickSvg.svgFragmentForGlyph(this.glyph)\n          );\n\n          if (ctxt.defsNode)\n            ctxt.defsNode.appendChild(\n              QuickSvg.createNode(\n                \"g\",\n                options,\n                QuickSvg.nodesForGlyph(this.glyph)\n              )\n            );\n        };\n        makeDef.makeSvgTree = () => {\n          return QuickSvg.createSvgTree(\n            \"g\",\n            getDefProps(),\n            ...QuickSvg.nodesForGlyph(this.glyph, \"createSvgTree\")\n          );\n        };\n        makeDef();\n        ctxt.makeDefs.push(makeDef);\n      }\n\n      this.align = this.glyph.align;\n    }\n\n    this.origin.x = this.glyph.origin.x * ctxt.glyphScaling;\n    this.origin.y = this.glyph.origin.y * ctxt.glyphScaling;\n\n    this.bounds.x = 0;\n    this.bounds.y = -this.origin.y;\n    this.bounds.width = this.glyph.bounds.width * ctxt.glyphScaling;\n    this.bounds.height = this.glyph.bounds.height * ctxt.glyphScaling;\n  }\n\n  setStaffPosition(ctxt, staffPosition) {\n    this.bounds.y =\n      ctxt.calculateHeightFromStaffPosition(staffPosition) - this.origin.y;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    var x = this.bounds.x + this.origin.x;\n    var y = this.bounds.y + this.origin.y;\n    canvasCtxt.translate(x, y);\n    canvasCtxt.scale(ctxt.glyphScaling, ctxt.glyphScaling);\n\n    for (var i = 0; i < this.glyph.paths.length; i++) {\n      var path = this.glyph.paths[i];\n      canvasCtxt.fillStyle =\n        path.type === \"negative\" ? \"#fff\" : ctxt.neumeLineColor;\n      canvasCtxt.fill(new Path2D(path.data));\n    }\n\n    canvasCtxt.scale(1.0 / ctxt.glyphScaling, 1.0 / ctxt.glyphScaling);\n    canvasCtxt.translate(-x, -y);\n  }\n\n  getSvgAttributes(ctxt, source) {\n    let className = \"\";\n    if (/^Porrectus\\d$/.test(this.glyphCode)) {\n      let notes = source.neume.notes,\n        noteIndex = notes.indexOf(source),\n        nextNote = notes[noteIndex + 1];\n      className = source.selected\n        ? nextNote.selected\n          ? \"selected\"\n          : \"selectedA\"\n        : nextNote.selected\n        ? \"selectedB\"\n        : \"\";\n    } else {\n      let isSelected =\n        source && (source.selected || (source.model && source.model.selected));\n      className = isSelected ? \"selected\" : \"\";\n    }\n    var result = {\n      \"xlink:href\": \"#\" + this.glyphCode,\n      class: className\n    };\n    if (source) {\n      result[\"source-index\"] = source.sourceIndex;\n      result[\"element-index\"] = source.elementIndex;\n    }\n    if (ctxt.scaleDefs === true) {\n      result.x = this.bounds.x + this.origin.x;\n      result.y = this.bounds.y + this.origin.y;\n    } else {\n      result.x = (this.bounds.x + this.origin.x) / ctxt.glyphScaling;\n      result.y = (this.bounds.y + this.origin.y) / ctxt.glyphScaling;\n      result.transform = \"scale(\" + ctxt.glyphScaling + \")\";\n    }\n    return result;\n  }\n\n  createSvgNode(ctxt, source) {\n    var attributes = this.getSvgAttributes(ctxt, source);\n    attributes.source = source;\n    return QuickSvg.createNode(\"use\", attributes);\n  }\n  createSvgTree(ctxt, source) {\n    var attributes = this.getSvgAttributes(ctxt, source);\n    if (source) attributes.source = source;\n    return QuickSvg.createSvgTree(\"use\", attributes);\n  }\n\n  createSvgFragment(ctxt, source) {\n    return QuickSvg.createFragment(\"use\", this.getSvgAttributes(ctxt, source));\n  }\n}\n\nexport class RoundBraceVisualizer extends ChantLayoutElement {\n  constructor(ctxt, x1, x2, y, isAbove) {\n    super();\n\n    if (x1 > x2) {\n      // swap the xs\n      var temp = x1;\n      x1 = x2;\n      x2 = temp;\n    }\n\n    this.isAbove = isAbove;\n    this.braceHeight = (3 * ctxt.staffInterval) / 2;\n\n    this.bounds = new Rect(\n      x1,\n      isAbove ? y - this.braceHeight : y,\n      x2 - x1,\n      this.braceHeight\n    );\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  getSvgPathProps(ctxt) {\n    return {\n      d: this.generatePathString(),\n      stroke: ctxt.neumeLineColor,\n      \"stroke-width\": ctxt.staffLineWeight + \"px\",\n      fill: \"none\",\n      class: \"brace\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    var node = QuickSvg.createNode(\"path\", this.getSvgPathProps(ctxt));\n    if (this.accent) {\n      return QuickSvg.createNode(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        [node, this.accent.createSvgNode(ctxt)]\n      );\n    } else return node;\n  }\n  createSvgTree(ctxt) {\n    var node = QuickSvg.createSvgTree(\"path\", this.getSvgPathProps(ctxt));\n    if (this.accent) {\n      return QuickSvg.createSvgTree(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        node,\n        this.accent.createSvgTree(ctxt)\n      );\n    } else return node;\n  }\n\n  createSvgFragment(ctxt) {\n    var fragment = QuickSvg.createFragment(\"path\", this.getSvgPathProps(ctxt));\n\n    if (this.accent) {\n      fragment += this.accent.createSvgFragment(ctxt);\n\n      return QuickSvg.createFragment(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        fragment\n      );\n    } else return fragment;\n  }\n\n  // returns svg path d string\n  generatePathString() {\n    var x1 = this.bounds.x;\n    var x2 = this.bounds.right();\n    var width = this.bounds.width;\n    var y, dx, dy;\n\n    dx = width / 6;\n    dy = this.bounds.height;\n    if (this.isAbove) {\n      y = this.bounds.bottom();\n      dy = -dy;\n    } else {\n      y = this.bounds.y;\n    }\n\n    //Calculate Control Points of path,\n    var cx1 = x1 + dx;\n    var cy = y + dy;\n    var cx2 = x2 - dx;\n\n    // two decimal points should be enough, but if we need more precision, we can\n    // up it here.\n    var dp = 2;\n    return (\n      \"M \" +\n      x1.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp) +\n      \" C \" +\n      cx1.toFixed(dp) +\n      \" \" +\n      cy.toFixed(dp) +\n      \" \" +\n      cx2.toFixed(dp) +\n      \" \" +\n      cy.toFixed(dp) +\n      \" \" +\n      x2.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp)\n    );\n  }\n}\n\nexport class CurlyBraceVisualizer extends ChantLayoutElement {\n  constructor(ctxt, x1, x2, y, isAbove = true, addAcuteAccent = false) {\n    super();\n\n    if (x1 > x2) {\n      // swap the xs\n      var temp = x1;\n      x1 = x2;\n      x2 = temp;\n    }\n\n    this.isAbove = isAbove;\n    this.braceHeight = ctxt.staffInterval / 2;\n\n    // y is the actual vertical start of the brace (left hand side)\n    // thus for a brace over notes, bounds.y is the bottom of brace,\n    // but for a brace under the notes, y is simply the y passed in.\n    if (isAbove) y -= this.braceHeight;\n\n    var bounds = new Rect(x1, y, x2 - x1, this.braceHeight);\n\n    if (addAcuteAccent && isAbove) {\n      this.accent = new GlyphVisualizer(ctxt, GlyphCode.AcuteAccent);\n      this.accent.bounds.x += bounds.x + (x2 - x1) / 2;\n      this.accent.bounds.y += bounds.y - ctxt.staffInterval / 4;\n\n      bounds.union(this.accent.bounds);\n    }\n\n    this.bounds = bounds;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  getSvgPathProps(ctxt) {\n    return {\n      d: this.generatePathString(),\n      stroke: ctxt.neumeLineColor,\n      \"stroke-width\": ctxt.staffLineWeight + \"px\",\n      fill: \"none\",\n      class: \"brace\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    var node = QuickSvg.createNode(\"path\", this.getSvgPathProps(ctxt));\n\n    if (this.accent) {\n      return QuickSvg.createNode(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        [node, this.accent.createSvgNode(ctxt)]\n      );\n    } else return node;\n  }\n  createSvgTree(ctxt) {\n    var node = QuickSvg.createSvgTree(\"path\", this.getSvgPathProps(ctxt));\n    if (this.accent) {\n      return QuickSvg.createSvgTree(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        node,\n        this.accent.createSvgTree(ctxt)\n      );\n    } else return node;\n  }\n\n  createSvgFragment(ctxt) {\n    var fragment = QuickSvg.createFragment(\"path\", this.getSvgPathProps(ctxt));\n\n    if (this.accent) {\n      fragment += this.accent.createSvgFragment(ctxt);\n\n      return QuickSvg.createFragment(\n        \"g\",\n        {\n          class: \"accentedBrace\"\n        },\n        fragment\n      );\n    } else return fragment;\n  }\n\n  // code below inspired by: https://gist.github.com/alexhornbake\n  // optimized for braces that are only drawn horizontally.\n  // returns svg path d string\n  generatePathString() {\n    var q = 0.6; // .5 is normal, higher q = more expressive bracket\n\n    var x1 = this.bounds.x;\n    var x2 = this.bounds.right();\n    var width = this.bounds.width;\n    var y, h;\n\n    if (this.isAbove) {\n      y = this.bounds.bottom();\n      h = -this.braceHeight;\n    } else {\n      y = this.bounds.y;\n      h = this.braceHeight;\n    }\n\n    // calculate Control Points of path\n    var qy1 = y + q * h;\n    var qx2 = x1 + 0.25 * width;\n    var qy2 = y + (1 - q) * h;\n    var tx1 = x1 + 0.5 * width;\n    var ty1 = y + h;\n    var qy3 = y + q * h;\n    var qx4 = x1 + 0.75 * width;\n    var qy4 = y + (1 - q) * h;\n\n    // two decimal points should be enough, but if we need more precision, we can\n    // up it here.\n    var dp = 2;\n    return (\n      \"M \" +\n      x1.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp) +\n      \" Q \" +\n      x1.toFixed(dp) +\n      \" \" +\n      qy1.toFixed(dp) +\n      \" \" +\n      qx2.toFixed(dp) +\n      \" \" +\n      qy2.toFixed(dp) +\n      \" T \" +\n      tx1.toFixed(dp) +\n      \" \" +\n      ty1.toFixed(dp) +\n      \" M \" +\n      x2.toFixed(dp) +\n      \" \" +\n      y.toFixed(dp) +\n      \" Q \" +\n      x2.toFixed(dp) +\n      \" \" +\n      qy3.toFixed(dp) +\n      \" \" +\n      qx4.toFixed(dp) +\n      \" \" +\n      qy4.toFixed(dp) +\n      \" T \" +\n      tx1.toFixed(dp) +\n      \" \" +\n      ty1.toFixed(dp)\n    );\n  }\n}\n\nexport class TextSpan {\n  constructor(text, properties, activeTags, index = 0) {\n    if (typeof properties === \"undefined\" || properties === null)\n      properties = {};\n\n    this.text = text;\n    this.properties = properties;\n    this.activeTags = activeTags || [];\n    this.index = index;\n  }\n\n  clone() {\n    return new TextSpan(\n      this.text,\n      this.properties,\n      this.activeTags,\n      this.index\n    );\n  }\n}\n\nfunction MarkupStackFrame(tagName, startIndex, properties = {}) {\n  this.tagName = tagName;\n  this.startIndex = startIndex;\n  this.properties = properties;\n}\n\nMarkupStackFrame.createStackFrame = function (ctxt, tagName, startIndex) {\n  return new MarkupStackFrame(\n    tagName,\n    startIndex,\n    ctxt.fontStyleDictionary[tagName]\n  );\n};\n\n// for escaping html strings before they go into the svgs\n// adapted from http://stackoverflow.com/a/12034334/5720160\nvar __subsForTspans = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\"\n};\n\nexport class TextElement extends ChantLayoutElement {\n  constructor(\n    ctxt,\n    text,\n    fontFamily,\n    fontSize,\n    textAnchor,\n    sourceIndex,\n    sourceGabc\n  ) {\n    super();\n\n    // set these to some sane values for now...\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n    this.bounds.width = 0;\n    this.bounds.height = 0;\n    this.origin.x = 0;\n    this.origin.y = 0;\n\n    this.fontFamily = fontFamily;\n    this.fontSize = fontSize;\n    this.textAnchor = textAnchor;\n    this.sourceIndex = sourceIndex;\n    this.sourceGabc = sourceGabc;\n    this.dominantBaseline = \"baseline\"; // default placement\n\n    this.generateSpansFromText(ctxt, text);\n\n    this.recalculateMetrics(ctxt);\n  }\n\n  getFromScore(score) {\n    return this.textType.getFromScore(score, this);\n  }\n\n  generateSpansFromText(ctxt, text) {\n    text = text.replace(/\\s+/g, \" \");\n    this.text = \"\";\n    this.spans = [];\n\n    // save ourselves a lot of grief for a very common text:\n    if (text === \"*\" || text === \"†\") {\n      this.spans.push(new TextSpan(text));\n      return;\n    }\n\n    var markupStack = [];\n    var spanStartIndex = 0;\n    var newLineInNextSpan = 0;\n\n    var filterFrames = (frame, symbol) => frame.Symbol === symbol;\n\n    var closeSpan = (spanText, index, extraProperties) => {\n      if (spanText === \"\" && !this.dropCap) return;\n\n      this.text += spanText;\n\n      var properties = {};\n      for (var i = 0; i < markupStack.length; i++)\n        Object.assign(properties, markupStack[i].properties);\n\n      if (extraProperties) Object.assign(properties, extraProperties);\n      if (newLineInNextSpan) {\n        properties.newLine = newLineInNextSpan;\n        newLineInNextSpan = 0;\n      }\n\n      this.spans.push(\n        new TextSpan(\n          spanText,\n          properties,\n          markupStack.map((frame) => frame.tagName),\n          index\n        )\n      );\n    };\n\n    var markupRegex = /(<br\\/?>)|<sp>([arv])\\/<\\/sp>|([arv])\\/\\.|([℣℟])\\.?|(?:([*_^%])|<(\\/)?([bciu]|ul|sc)>)(?=(?:(.+?)(?:\\4|<\\/\\6>))?)/gi;\n\n    var match = null;\n    var openedAsterisk = false;\n    var closeCurrentSpan = () =>\n      closeSpan(text.substring(spanStartIndex, match.index), spanStartIndex);\n    while ((match = markupRegex.exec(text))) {\n      var [\n        ,\n        newLine,\n        specialChar,\n        specialChar2,\n        specialChar3,\n        markupSymbol,\n        closingTag,\n        tagName,\n        enclosedText\n      ] = match;\n      specialChar = specialChar || specialChar2 || specialChar3;\n      // non-matching symbols first\n      if (newLine) {\n        // close the current span, if any:\n        if (match.index > spanStartIndex) {\n          closeCurrentSpan();\n        }\n        // add the newline span:\n        newLineInNextSpan++;\n      } else if (specialChar) {\n        closeCurrentSpan();\n        closeSpan(\n          ctxt.textBeforeSpecialChar +\n            ctxt.specialCharText(specialChar) +\n            ctxt.textAfterSpecialChar,\n          match.index,\n          ctxt.specialCharProperties\n        );\n      } else {\n        // otherwise we're dealing with matching markup delimeters\n        if (markupSymbol === \"*\") {\n          // we are only strict with the asterisk, because there are cases when it needs to be displayed rather than count as a markup symbol\n          if (enclosedText && /[^\\s*]/.test(enclosedText)) {\n            openedAsterisk = true;\n          } else if (openedAsterisk) {\n            openedAsterisk = false;\n          } else {\n            // actually use the asterisk, since it doesn't have a matching closing asterisk\n            continue;\n          }\n        }\n        if (markupSymbol) {\n          tagName = ctxt.markupSymbolDictionary[markupSymbol];\n          if (\n            markupStack.length > 0 &&\n            markupStack[markupStack.length - 1].tagName === tagName\n          ) {\n            closingTag = true;\n          }\n        }\n        if (\n          markupStack.length > 0 &&\n          markupStack[markupStack.length - 1].tagName === tagName\n        ) {\n          if (closingTag) {\n            // group close\n            closeCurrentSpan();\n            markupStack.pop();\n          }\n        } else if (markupStack.filter(filterFrames).length > 0) {\n          // trying to open a recursive group (or forgot to close a previous group)\n          // in either case, we just unwind to the previous stack frame\n          spanStartIndex = markupStack[markupStack.length - 1].startIndex;\n          markupStack.pop();\n          continue;\n        } else {\n          closeCurrentSpan();\n          if (closingTag) {\n            // out of order group close:\n            let index = markupStack.findIndex(\n              (frame) => frame.tagName === tagName\n            );\n            if (index >= 0) {\n              markupStack.splice(index, 1);\n            }\n          } else {\n            // group open\n            markupStack.push(\n              MarkupStackFrame.createStackFrame(ctxt, tagName, match.index)\n            );\n          }\n        }\n      }\n\n      // advance the start index past the current markup\n      spanStartIndex = match.index + match[0].length;\n    }\n\n    // if we finished matches, and there is still some text left,\n    // or if we haven't generated any spans yet, create one final run\n    if (spanStartIndex < text.length || this.spans.length === 0)\n      closeSpan(text.slice(spanStartIndex), spanStartIndex);\n  }\n\n  getCanvasFontForProperties(ctxt, properties = {}) {\n    var font = \"\";\n    if (properties[\"font-style\"] === \"italic\") font += \"italic \";\n    if (properties[\"font-variant\"] === \"small-caps\") font += \"small-caps \";\n    if (properties[\"font-weight\"] === \"bold\") font += \"bold \";\n    let fontSize = parseFloat(properties[\"font-size\"]) || this.fontSize(ctxt);\n    if (/%$/.test(properties[\"font-size\"])) {\n      fontSize *= this.fontSize(ctxt) / 100;\n    }\n    font += `${fontSize * (this.resize || 1)}px `;\n    font += properties[\"font-family\"] || this.fontFamily(ctxt);\n    return font;\n  }\n\n  measureSubstringBBox(ctxt, length) {\n    return this.measureSubstring(ctxt, length, true);\n  }\n\n  // if length is undefined and this.rightAligned === true, then offsets will be marked for each newLine span\n  measureSubstring(ctxt, length, returnBBox = false) {\n    if (length === 0) return 0;\n    if (!length) length = Infinity;\n    if (length < 0) {\n      var lines = -length;\n      length = Infinity;\n    }\n    var canvasCtxt = ctxt.canvasCtxt;\n    var width = 0;\n    var widths = [];\n    var newLineSpans = [this.spans[0]];\n    var subStringLength = 0;\n    var numLines = 1;\n    var fontSize = this.fontSize(ctxt) * (this.resize || 1);\n    var bbox = new Rect(0, 0, 0, 0);\n    for (var i = 0; i < this.spans.length; i++) {\n      var span = this.spans[i],\n        myText = span.text.slice(0, length - subStringLength);\n      if (span.properties.newLine) {\n        numLines += parseInt(span.properties.newLine) || 1;\n        if (!lines && this.rightAligned === true && length === Infinity) {\n          newLineSpans[newLineSpans.length - 1].properties.xOffset =\n            this.firstLineMaxWidth - width;\n          newLineSpans.push(span);\n        } else if (--lines === 0) break;\n        widths.push(width);\n        width = 0;\n      }\n      if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Canvas) {\n        canvasCtxt.font = this.getCanvasFontForProperties(\n          ctxt,\n          span.properties\n        );\n        let metrics = canvasCtxt.measureText(\n          myText,\n          width,\n          fontSize * (numLines - 1)\n        );\n        if (\"actualBoundingBoxAscent\" in metrics) {\n          let left = metrics.actualBoundingBoxLeft;\n          bbox.union(\n            new Rect(\n              width - left,\n              fontSize * (numLines - 1) - metrics.actualBoundingBoxAscent,\n              metrics.width + left,\n              metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent\n            )\n          );\n          if (this instanceof DropCap) {\n            width += Math.max(0, left);\n          }\n        } else {\n          bbox.union(\n            new Rect(width, fontSize * (numLines - 2), metrics.width, fontSize)\n          );\n        }\n        width += metrics.width;\n      } else if (\n        ctxt.textMeasuringStrategy === TextMeasuringStrategy.OpenTypeJS &&\n        ctxt.fontDictionary\n      ) {\n        // get the bounding box for the substring, placing it at x = width, y = fontSize * (numLines - 1)\n        let font = ctxt.getFontForProperties(\n          span.properties,\n          span.properties[\"font-family\"] || this.fontFamily(ctxt)\n        );\n        let options = { features: { liga: true } };\n        if (span.properties[\"font-variant\"] === \"small-caps\") {\n          options.features.smcp = true;\n        }\n        let spanFontSize = parseFloat(span.properties[\"font-size\"]) || fontSize;\n        if (/%$/.test(span.properties[\"font-size\"])) {\n          spanFontSize *= fontSize / 100;\n        }\n        let subBbox = font\n          .getPath(\n            myText,\n            width,\n            fontSize * (numLines - 1),\n            spanFontSize,\n            options\n          )\n          .getBoundingBox();\n        let subWidth = font.getAdvanceWidth(myText, spanFontSize, options);\n\n        bbox.union(\n          new Rect(\n            width + subBbox.x1,\n            subBbox.y1,\n            subWidth - subBbox.x1,\n            subBbox.y2 - subBbox.y1\n          )\n        );\n        width += subWidth;\n        if (this instanceof DropCap) {\n          width -= subBbox.x1;\n        }\n      }\n      subStringLength += myText.length;\n      if (subStringLength === length) break;\n    }\n    if (\n      !lines &&\n      width &&\n      newLineSpans.length &&\n      this.rightAligned === true &&\n      length === Infinity\n    ) {\n      newLineSpans[newLineSpans.length - 1].properties.xOffset =\n        this.firstLineMaxWidth - width;\n    }\n    width = Math.max(width, ...widths);\n    if (returnBBox === true) {\n      let height = bbox.height;\n      let y = bbox.y,\n        x = bbox.x;\n      return { width, height, x, y };\n    } else {\n      return width;\n    }\n  }\n\n  recalculateMetrics(ctxt, resetNewLines = true) {\n    if (resetNewLines) {\n      delete this.maxWidth;\n      delete this.firstLineMaxWidth;\n      delete this.rightAligned;\n      delete this.resize;\n      delete this.numLines;\n      // replace newlines with spaces\n      this.spans.forEach((span) => {\n        delete span.properties.xOffset;\n        if (span.properties.newLine === true) {\n          delete span.properties.newLine;\n          span.text = \" \" + span.text;\n        }\n      });\n    }\n\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n\n    this.origin.x = 0;\n\n    if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n      while (ctxt.svgTextMeasurer.firstChild)\n        ctxt.svgTextMeasurer.removeChild(ctxt.svgTextMeasurer.firstChild);\n      ctxt.svgTextMeasurer.appendChild(this.createSvgNode(ctxt));\n      ctxt.svgTextMeasurer.appendChild(ctxt.createStyleNode());\n\n      var bbox = ctxt.svgTextMeasurer.firstChild.getBBox();\n      this.bounds.width = bbox.width;\n      this.bounds.height = bbox.height;\n      this.origin.y = -bbox.y; // offset to baseline from top\n      this.origin.x = -bbox.x;\n    } else {\n      let bbox = this.measureSubstringBBox(ctxt);\n      this.bounds.width = bbox.width;\n      this.bounds.height = bbox.height;\n      this.origin.y = -bbox.y;\n      this.origin.x = -bbox.x;\n    }\n    this.numLines = this.spans.reduce(\n      (result, span) =>\n        result +\n        (span.properties.newLine ? parseInt(span.properties.newLine) || 1 : 0),\n      1\n    );\n  }\n\n  setMaxWidth(ctxt, maxWidth, firstLineMaxWidth = maxWidth) {\n    if (this.spans.filter((s) => s.properties.newLine === true).length) {\n      // first get rid of any new lines set from a previous maxWidth\n      this.recalculateMetrics(ctxt);\n    }\n    if (this.bounds.width > maxWidth) {\n      this.maxWidth = maxWidth;\n      var percentage = maxWidth / this.bounds.width;\n      if (this instanceof Lyric && percentage >= 0.85) {\n        this.resize = percentage;\n      } else {\n        if (firstLineMaxWidth < 0) firstLineMaxWidth = maxWidth;\n        this.firstLineMaxWidth = firstLineMaxWidth;\n        var lastWidth = 0,\n          lastMatch = null,\n          regex = /\\s+|$/g,\n          max = firstLineMaxWidth,\n          match;\n        while (\n          (match = regex.exec(this.text)) &&\n          (!lastMatch || match.index > lastMatch.index)\n        ) {\n          var width = this.measureSubstring(ctxt, match.index);\n          if (width > max && lastMatch) {\n            var spanIndex = 0,\n              length = 0;\n            while (length < lastMatch.index && spanIndex < this.spans.length) {\n              let span = this.spans[spanIndex++];\n              length += span.text.length + (span.properties.newLine ? 1 : 0);\n            }\n            if (length > lastMatch.index) {\n              let span = this.spans[--spanIndex];\n              length -= span.text.length;\n            }\n            var splitSpan = this.spans[spanIndex],\n              textLeft = splitSpan.text.slice(0, lastMatch.index - length),\n              textRight = splitSpan.text.slice(\n                lastMatch.index + lastMatch[0].length - length\n              ),\n              newSpans = [];\n            this.rightAligned =\n              max === firstLineMaxWidth && firstLineMaxWidth !== maxWidth;\n            if (textLeft)\n              newSpans.push(\n                new TextSpan(\n                  textLeft,\n                  splitSpan.properties,\n                  splitSpan.activeTags\n                )\n              );\n            if (textRight) {\n              newSpans.push(\n                new TextSpan(\n                  textRight,\n                  Object.assign({}, splitSpan.properties, { newLine: true }),\n                  splitSpan.activeTags\n                )\n              );\n            } else if (this.spans[spanIndex + 1]) {\n              this.spans[spanIndex + 1].properties.newLine = true;\n            }\n            this.spans.splice(spanIndex, 1, ...newSpans);\n            this.needsLayout = true;\n            max = maxWidth;\n            if (\n              match.index === this.text.length ||\n              this.measureSubstring(ctxt) <= maxWidth\n            )\n              break;\n            width = 0;\n            match = lastMatch = null;\n          }\n          lastWidth = width;\n          lastMatch = match;\n        }\n      }\n      this.recalculateMetrics(ctxt, false);\n    }\n  }\n\n  getCssClasses() {\n    return (this.textType && this.textType.cssClass) || \"\";\n  }\n\n  getExtraStyleProperties(ctxt) {\n    return ctxt.baseTextStyle || {};\n  }\n\n  static escapeForTspan(string) {\n    return String(string).replace(/[&<>]/g, function (s) {\n      return __subsForTspans[s];\n    });\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    if (this.textAnchor === \"middle\") canvasCtxt.textAlign = \"center\";\n    else canvasCtxt.textAlign = \"start\";\n\n    var translateWidth = 0,\n      translateHeight = 0;\n    for (var i = 0; i < this.spans.length; i++) {\n      var span = this.spans[i];\n      var xOffset = span.properties.xOffset || 0;\n      if (span.properties.newLine) {\n        count = parseInt(span.properties.newLine) || 1;\n        canvasCtxt.translate(\n          translateWidth + xOffset,\n          this.fontSize(ctxt) * count\n        );\n        translateWidth = -xOffset;\n        translateHeight -= this.fontSize(ctxt);\n      } else if (xOffset) {\n        canvasCtxt.translate(translateWidth + xOffset, 0);\n        translateWidth = -xOffset;\n      }\n      var properties = Object.assign(\n        {},\n        this.getExtraStyleProperties(ctxt),\n        span.properties\n      );\n      canvasCtxt.font = this.getCanvasFontForProperties(ctxt, properties);\n      canvasCtxt.fillStyle = properties.fill || \"#000\";\n      canvasCtxt.fillText(\n        span.text,\n        this.bounds.x,\n        this.bounds.y,\n        span.properties.textLength || undefined\n      );\n      var metrics = canvasCtxt.measureText(\n        span.text,\n        this.bounds.x,\n        this.bounds.y\n      );\n      translateWidth -= metrics.width;\n      canvasCtxt.translate(metrics.width, 0);\n    }\n    canvasCtxt.translate(translateWidth, translateHeight);\n  }\n\n  getSvgProps() {\n    return {\n      \"source-index\": this.sourceIndex,\n      x: this.bounds.x,\n      y: this.bounds.y,\n      class: this.getCssClasses().trim(),\n      \"text-anchor\": this.textAnchor\n      //'dominant-baseline': this.dominantBaseline, // hanging baseline doesn't work in Safari\n    };\n  }\n\n  getSpanOptions(span, ctxt, useStyleObject = false) {\n    var options = {\n      \"source-index\": span.index,\n      style: useStyleObject\n        ? Object.assign({}, span.properties)\n        : getCssForProperties(span.properties)\n    };\n\n    if (span.properties.newLine) {\n      var xOffset = span.properties.xOffset || 0;\n      options.dy = 1.1 * (parseInt(span.properties.newLine) || 1) + \"em\";\n      options.x = this.bounds.x + xOffset;\n    } else if (span.properties.xOffset) {\n      options.x = this.bounds.x + span.properties.xOffset;\n    }\n    if (span.properties.textLength) {\n      options.textLength = span.properties.textLength;\n      options.lengthAdjust = \"spacingAndGlyphs\";\n      options.y = this.bounds.y;\n    }\n    if (this.resize) {\n      options[\"font-size\"] =\n        span.properties[\"font-size\"] || this.fontSize(ctxt) * this.resize;\n    }\n    // if (ctxt.setFontFamilyAttributes) {\n    //   options[\"font-family\"] =\n    //     span.properties[\"font-family\"] ||\n    //     getFontFilenameForProperties(span.properties, this.fontFamily(ctxt));\n    //   let properties = Object.assign({}, span.properties);\n    //   delete properties[\"font-weight\"];\n    //   delete properties[\"font-style\"];\n    //   options[\"style\"] = getCssForProperties(properties);\n    // } else {\n    //   options[\"style\"] = getCssForProperties(span.properties);\n    // }\n\n    return options;\n  }\n\n  createSvgNode(ctxt) {\n    var spans = [];\n\n    for (var i = 0; i < this.spans.length; i++) {\n      let span = this.spans[i];\n      let options = this.getSpanOptions(span, ctxt);\n\n      spans.push(QuickSvg.createNode(\"tspan\", options, span.text));\n    }\n\n    let options = this.getSvgProps();\n    options.style = getCssForProperties(this.getExtraStyleProperties(ctxt));\n    options.source = this;\n\n    return (this.svgNode = QuickSvg.createNode(\"text\", options, spans));\n  }\n  createSvgTree(ctxt) {\n    var spans = [];\n\n    for (var i = 0; i < this.spans.length; i++) {\n      let span = this.spans[i];\n      let options = this.getSpanOptions(span, ctxt, true);\n\n      spans.push(QuickSvg.createSvgTree(\"tspan\", options, span.text));\n    }\n\n    let options = this.getSvgProps();\n    options.style = this.getExtraStyleProperties(ctxt);\n    options.source = this;\n\n    return QuickSvg.createSvgTree(\"text\", options, ...spans);\n  }\n\n  createSvgFragment(ctxt) {\n    var spans = \"\";\n\n    for (var i = 0; i < this.spans.length; i++) {\n      let span = this.spans[i];\n      let options = this.getSpanOptions(span, ctxt);\n\n      spans += QuickSvg.createFragment(\n        \"tspan\",\n        options,\n        TextElement.escapeForTspan(span.text)\n      );\n    }\n\n    let options = this.getSvgProps();\n    options.style = getCssForProperties(this.getExtraStyleProperties(ctxt));\n    if (ctxt.setFontFamilyAttributes) {\n      options[\"font-size\"] = this.fontSize(ctxt);\n    }\n\n    return QuickSvg.createFragment(\"text\", options, spans);\n  }\n}\n\nexport var LyricType = {\n  SingleSyllable: 0,\n  BeginningSyllable: 1,\n  MiddleSyllable: 2,\n  EndingSyllable: 3,\n\n  Directive: 4 // for asterisks, \"ij.\" elements, or other performance notes.\n};\n\nexport var LyricArray = {\n  getLeft: function (lyricArray) {\n    if (lyricArray.length === 0) return NaN;\n\n    var x = Number.MAX_VALUE;\n    for (var i = 0; i < lyricArray.length; i++) {\n      if (lyricArray[i])\n        x = Math.min(\n          x,\n          lyricArray[i].notation.bounds.x + lyricArray[i].bounds.x\n        );\n    }\n\n    return x;\n  },\n\n  getRight: function (lyricArray, presumeConnectorNeeded) {\n    if (lyricArray.length === 0) return NaN;\n\n    var x = Number.MIN_VALUE;\n    for (var i = 0; i < lyricArray.length; i++) {\n      let l = lyricArray[i];\n      if (l)\n        x = Math.max(\n          x,\n          l.notation.bounds.x +\n            l.bounds.x +\n            l.bounds.width +\n            (presumeConnectorNeeded && l.allowsConnector() && !l.needsConnector\n              ? l.getConnectorWidth()\n              : 0)\n        );\n    }\n\n    return x;\n  },\n\n  hasOnlyOneLyric: function (lyricArray) {\n    return lyricArray.filter((l) => l.originalText).length === 1;\n  },\n\n  indexOfLyric: function (lyricArray) {\n    return lyricArray.indexOf(lyricArray.filter((l) => l.originalText)[0]);\n  },\n\n  mergeIn: function (lyricArray, newLyrics) {\n    for (var i = 0; i < newLyrics.length; ++i) {\n      if (newLyrics[i].originalText || !lyricArray[i])\n        lyricArray[i] = newLyrics[i];\n    }\n  },\n\n  mergeInArray: function (lyricArray, notations) {\n    for (var i = 0; i < notations.length; ++i) {\n      this.mergeIn(lyricArray, notations[i].lyrics);\n    }\n  },\n\n  setNotation: function (lyricArray, notation) {\n    notation.lyrics = lyricArray;\n    for (var i = 0; i < lyricArray.length; ++i) {\n      lyricArray[i].notation = notation;\n    }\n  }\n};\n\nexport class Lyric extends TextElement {\n  constructor(ctxt, text, lyricType, notation, notations, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.lyric.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.lyric.font,\n      (ctxt) => ctxt.textStyles.lyric.size,\n      \"start\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.lyric;\n\n    // save the original text in case we need to later use the lyric\n    // in a dropcap...\n    this.originalText = text;\n\n    this.notation = notation;\n    this.notations = notations;\n\n    if (\n      typeof lyricType === \"undefined\" ||\n      lyricType === null ||\n      lyricType === \"\"\n    )\n      this.lyricType = LyricType.SingleSyllable;\n    else this.lyricType = lyricType;\n\n    // Lyrics keep track of how to center them on notation elements.\n    // centerTextIndex is the index in this.text where the centering starts,\n    // centerLength is how many characters comprise the center point.\n    // performLayout will do the processing\n    this.centerStartIndex = -1;\n    this.centerLength = text.length;\n\n    this.needsConnector = false;\n\n    // Lyrics can have their own language defined, which affects the alignment\n    // of the text with the notation element\n    this.language = null;\n\n    if (this.allowsConnector)\n      this.connectorSpan = new TextSpan(ctxt.syllableConnector);\n  }\n\n  allowsConnector() {\n    return (\n      this.lyricType === LyricType.BeginningSyllable ||\n      this.lyricType === LyricType.MiddleSyllable\n    );\n  }\n\n  setForceConnector(force) {\n    this.forceConnector = force && this.allowsConnector();\n  }\n\n  setNeedsConnector(needs, width) {\n    if (needs === true || this.forceConnector) {\n      this.needsConnector = true;\n      if (typeof width !== \"undefined\") {\n        this.setConnectorWidth(width);\n      } else {\n        this.bounds.width =\n          this.widthWithoutConnector + this.getConnectorWidth();\n      }\n\n      if (\n        this.spans.length > 0 &&\n        this.spans[this.spans.length - 1] !== this.connectorSpan\n      )\n        this.spans.push(this.connectorSpan);\n    } else {\n      this.connectorWidth = 0;\n      this.needsConnector = false;\n      this.bounds.width = this.widthWithoutConnector;\n\n      var span = this.spans.pop();\n      if (span && span !== this.connectorSpan) this.spans.push(span);\n    }\n  }\n\n  setConnectorWidth(width) {\n    this.connectorWidth = width;\n    this.connectorSpan.properties = Object.assign(\n      {},\n      this.connectorSpan.properties,\n      { textLength: width }\n    );\n    if (this.needsConnector)\n      this.bounds.width = this.widthWithoutConnector + this.getConnectorWidth();\n  }\n\n  getConnectorWidth() {\n    return this.connectorWidth || this.defaultConnectorWidth;\n  }\n\n  getLeft() {\n    return this.notation.bounds.x + this.bounds.x;\n  }\n\n  getRight() {\n    return this.notation.bounds.x + this.bounds.x + this.bounds.width;\n  }\n\n  recalculateMetrics(ctxt, resetNewLines = true) {\n    this.setNeedsConnector();\n\n    super.recalculateMetrics(ctxt, resetNewLines);\n\n    this.widthWithoutConnector = this.bounds.width;\n\n    this.connectorWidth = 0;\n    this.defaultConnectorWidth = ctxt.hyphenWidth;\n\n    var activeLanguage = this.language || ctxt.defaultLanguage;\n\n    // calculate the point where the text lines up to the staff notation\n    // and offset the rect that much. By default we just center the text,\n    // but the logic below allows for smarter lyric alignment based\n    // on manual override or language control.\n    var offset = this.widthWithoutConnector / 2,\n      x1,\n      x2,\n      vowelSegmentWidth = this.widthWithoutConnector;\n\n    // some simple checks for sanity, and disable manual centering if the numbers are bad\n    if (\n      this.centerStartIndex >= 0 &&\n      (this.centerStartIndex >= this.text.length ||\n        this.centerLength < 0 ||\n        this.centerStartIndex + this.centerLength > this.text.length)\n    )\n      this.centerStartIndex = -1;\n\n    if (this.text.length === 0) {\n      // if we have no text to work with, then there's nothing to do!\n      // Unless it's a drop cap, in which case we center the connector:\n      if (this.dropCap && this.originalText) {\n        offset = ctxt.hyphenWidth / 2;\n        vowelSegmentWidth = ctxt.hyphenWidth;\n      }\n    } else if (this.centerStartIndex >= 0) {\n      // if we have manually overriden the centering logic for this lyric,\n      // then always use that.\n      if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n        // svgTextMeasurer still has the current lyric in it...\n        x1 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n          0,\n          this.centerStartIndex\n        );\n        x2 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n          0,\n          this.centerStartIndex + this.centerLength\n        );\n      } else {\n        x1 = this.measureSubstring(ctxt, this.centerStartIndex);\n        x2 = this.measureSubstring(\n          ctxt,\n          this.centerStartIndex + this.centerLength\n        );\n      }\n      offset = (x1 + x2) / 2;\n      vowelSegmentWidth = x2 - x1;\n    } else {\n      // if it's a directive with no manual centering override, then\n      // just center the text.\n      if (this.lyricType !== LyricType.Directive) {\n        // only consider text content after the last space (if any)\n        var startIndex = this.text.lastIndexOf(\" \") + 1;\n\n        // unless there are no text characters following the space:\n        if (\n          startIndex > 0 &&\n          !this.text\n            .slice(startIndex)\n            .match(/[a-záéíóúýäëïöüÿàèìòùỳāēīōūȳăĕĭŏŭ]/i)\n        ) {\n          startIndex = 0;\n        }\n\n        // Non-directive elements are lined up to the chant notation based on vowel segments,\n        var result = activeLanguage.findVowelSegment(this.text, startIndex);\n\n        if (result.found !== true) {\n          var match = this.text.slice(startIndex).match(/[a-z]+/i);\n          if (match) {\n            result.startIndex = startIndex + match.index;\n            result.length = match[0].length;\n          } else {\n            result.startIndex = startIndex;\n            result.length = this.text.length - startIndex;\n          }\n        }\n        if (ctxt.textMeasuringStrategy === TextMeasuringStrategy.Svg) {\n          // svgTextMeasurer still has the current lyric in it...\n          x1 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n            0,\n            result.startIndex\n          );\n          x2 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(\n            0,\n            result.startIndex + result.length\n          );\n        } else {\n          x1 = this.measureSubstring(ctxt, result.startIndex);\n          x2 = this.measureSubstring(ctxt, result.startIndex + result.length);\n        }\n        offset = (x1 + x2) / 2;\n        vowelSegmentWidth = x2 - x1;\n      }\n    }\n\n    this.vowelSegmentWidth = vowelSegmentWidth;\n\n    this.bounds.x = -offset;\n    this.bounds.y = 0;\n\n    this.origin.x = offset;\n  }\n\n  generateDropCap(ctxt) {\n    if (this.dropCap) return this.dropCap;\n    let dropCapSpan = this.spans[0].clone();\n    dropCapSpan.text = dropCapSpan.text.slice(0, 1).toUpperCase();\n    let dropCapLowerCase = dropCapSpan.text.toLowerCase();\n    // disallow any characters that do not change from .toUpperCase():\n    if (dropCapSpan.text === dropCapLowerCase) return null;\n\n    if (dropCapSpan.activeTags.indexOf(\"sc\") >= 0)\n      dropCapSpan.text = dropCapLowerCase;\n\n    var dropCap = (this.dropCap = new DropCap(ctxt, \"\", this.sourceIndex));\n    dropCap.spans = [dropCapSpan];\n    let dropCapSourceGabcLength = this.sourceGabc.match(\n      /^(?:<\\/?[^>]>)*.?(?:<\\/[^>]>)*/\n    )[0].length;\n    dropCap.sourceGabc = this.sourceGabc.slice(0, dropCapSourceGabcLength);\n    this.sourceIndex += dropCap.sourceGabc.length;\n    this.sourceGabc = this.sourceGabc.slice(dropCapSourceGabcLength);\n\n    this.spans[0].text = this.spans[0].text.slice(1);\n    this.text = this.text.slice(1);\n    this.centerStartIndex--; // lost a letter, so adjust centering accordingly\n\n    return dropCap;\n  }\n\n  getCssClasses() {\n    var classes = this.lyricType === LyricType.Directive ? \"directive \" : \"\";\n\n    return classes + super.getCssClasses();\n  }\n\n  getExtraStyleProperties(ctxt) {\n    var props = super.getExtraStyleProperties(ctxt);\n\n    if (this.lyricType === LyricType.Directive && ctxt.autoColor === true)\n      props = Object.assign({}, props, { fill: ctxt.rubricColor });\n\n    return props;\n  }\n}\n\nexport class ChoralSign extends TextElement {\n  constructor(ctxt, text, note, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.choralSign.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.choralSign.font,\n      TextTypes.choralSign.size,\n      \"start\",\n      sourceIndex,\n      text\n    );\n    this.positionHint = MarkingPositionHint.Default;\n    this.note = note;\n    this.textType = TextTypes.choralSign;\n  }\n\n  recalculateMetrics(ctxt) {\n    super.recalculateMetrics(ctxt);\n  }\n\n  performLayout(ctxt) {\n    this.recalculateMetrics(ctxt);\n    this.bounds.x =\n      this.note.bounds.x +\n      Math.max(0, (ctxt.staffInterval - this.bounds.width) / 2); // center on the note itself\n\n    let offset, staffPosition;\n    if (this.positionHint === MarkingPositionHint.Below) {\n      offset = -1;\n      staffPosition = this.note.staffPosition + 2 * offset;\n      staffPosition += staffPosition % 2 === 0 ? 0.3 : 1;\n    } else {\n      offset = 1;\n      staffPosition = this.note.staffPosition + 2 * offset;\n      staffPosition += staffPosition % 2 === 0 ? 0.3 : -0.4;\n    }\n    // if (staffPosition % 2 === 0) staffPosition += offset;\n    this.bounds.y =\n      ctxt.calculateHeightFromStaffPosition(staffPosition) + this.origin.y;\n  }\n}\n\nexport class AboveLinesText extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text, notation, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.al.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.al.font,\n      (ctxt) => ctxt.textStyles.al.size,\n      \"start\",\n      sourceIndex,\n      text\n    );\n    this.notation = notation;\n    this.textType = TextTypes.al;\n\n    this.padding = ctxt.staffInterval / 2;\n  }\n}\n\nexport class TranslationText extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text, notation, sourceIndex) {\n    var gabcSource = text;\n    var anchor = \"start\";\n    if (text === \"/\") {\n      text = \"\";\n      anchor = \"end\";\n    } else {\n      text = (ctxt.textStyles.translation.prefix || \"\") + text;\n    }\n    super(\n      ctxt,\n      text,\n      (ctxt) => ctxt.textStyles.translation.font,\n      (ctxt) => ctxt.textStyles.translation.size,\n      anchor,\n      sourceIndex,\n      gabcSource\n    );\n    this.notation = notation;\n    this.textType = TextTypes.translation;\n\n    this.padding = ctxt.staffInterval / 2;\n  }\n}\n\nexport class DropCap extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.dropCap.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.dropCap.font,\n      (ctxt) => ctxt.textStyles.dropCap.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.dropCap;\n\n    this.padding = ctxt.staffInterval * ctxt.textStyles.dropCap.padding;\n  }\n}\n\nexport class TitleTextElement extends TextElement {\n  constructor(\n    ctxt,\n    text,\n    fontFamily,\n    fontSize,\n    textAnchor,\n    sourceIndex,\n    sourceGabc\n  ) {\n    super(\n      ctxt,\n      text,\n      fontFamily,\n      fontSize,\n      textAnchor,\n      sourceIndex,\n      sourceGabc\n    );\n  }\n}\n\nexport class Supertitle extends TitleTextElement {\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.supertitle.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.supertitle.font,\n      (ctxt) => ctxt.textStyles.supertitle.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.supertitle;\n\n    this.padding = (ctxt) => ctxt.textStyles.supertitle.size / 3;\n  }\n}\n\nexport class Title extends TitleTextElement {\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.title.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.title.font,\n      (ctxt) => ctxt.textStyles.title.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.title;\n\n    this.padding = (ctxt) => ctxt.textStyles.title.size / 3;\n  }\n}\n\nexport class Subtitle extends TitleTextElement {\n  constructor(ctxt, text, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.subtitle.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.subtitle.font,\n      (ctxt) => ctxt.textStyles.subtitle.size,\n      \"middle\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.subtitle;\n\n    this.padding = (ctxt) => ctxt.textStyles.subtitle.size / 3;\n  }\n}\n\nexport class TextLeftRight extends TitleTextElement {\n  constructor(ctxt, text, type, sourceIndex) {\n    super(\n      ctxt,\n      (ctxt.textStyles.leftRight.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.leftRight.font,\n      (ctxt) => ctxt.textStyles.leftRight.size,\n      type === \"textLeft\" ? \"start\" : \"end\",\n      sourceIndex,\n      text\n    );\n    this.textType = TextTypes.leftRight;\n    this.extraClass = type === \"textLeft\" ? \"textLeft\" : \"textRight\";\n    this.headerKey = type === \"textLeft\" ? \"text-left\" : \"text-right\";\n    this.padding = (ctxt) => ctxt.textStyles.leftRight.size / 5;\n  }\n\n  getCssClasses() {\n    return this.extraClass + \" \" + super.getCssClasses();\n  }\n}\n\nexport class Annotation extends TextElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, text) {\n    super(\n      ctxt,\n      (ctxt.textStyles.annotation.prefix || \"\") + text,\n      (ctxt) => ctxt.textStyles.annotation.font,\n      (ctxt) => ctxt.textStyles.annotation.size,\n      \"middle\"\n    );\n    this.textType = TextTypes.annotation;\n    this.padding = ctxt.staffInterval * ctxt.textStyles.annotation.padding;\n    this.dominantBaseline = \"hanging\"; // so that annotations can be aligned at the top.\n  }\n}\n\nexport class Annotations extends ChantLayoutElement {\n  /**\n   * @param {String} text\n   */\n  constructor(ctxt, ...texts) {\n    super();\n\n    this.annotations = texts.map(function (text) {\n      return new Annotation(ctxt, text);\n    });\n    this.padding = Math.max.apply(\n      null,\n      this.annotations.map(function (annotation) {\n        return annotation.padding;\n      })\n    );\n  }\n\n  updateBounds(multiplier) {\n    if (!multiplier) multiplier = 1;\n    for (var i = 0; i < this.annotations.length; ++i) {\n      var annotation = this.annotations[i];\n      annotation.bounds.x += this.bounds.x * multiplier;\n      annotation.bounds.y += this.bounds.y * multiplier;\n    }\n  }\n\n  recalculateMetrics(ctxt) {\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n\n    this.bounds.width = 0;\n    this.bounds.height = 0;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n\n    for (var i = 0; i < this.annotations.length; ++i) {\n      var annotation = this.annotations[i];\n      annotation.recalculateMetrics(ctxt);\n      this.bounds.width = Math.max(this.bounds.width, annotation.bounds.width);\n      annotation.bounds.y += this.bounds.height;\n      this.bounds.height += annotation.bounds.height;\n      this.origin.y = this.origin.y || annotation.origin.y;\n    }\n  }\n\n  draw(ctxt) {\n    this.updateBounds();\n    this.annotations.forEach(function (annotation) {\n      annotation.draw(ctxt);\n    });\n    this.updateBounds(-1);\n  }\n\n  createSvgNode(ctxt) {\n    this.updateBounds();\n    var result = this.annotations.map(function (annotation) {\n      return annotation.createSvgNode(ctxt);\n    });\n    this.updateBounds(-1);\n    return result;\n  }\n  createSvgTree(ctxt) {\n    this.updateBounds();\n    var result = this.annotations.map(function (annotation) {\n      return annotation.createSvgTree(ctxt);\n    });\n    this.updateBounds(-1);\n    return { children: result };\n  }\n\n  createSvgFragment(ctxt) {\n    this.updateBounds();\n    var result = this.annotations\n      .map(function (annotation) {\n        return annotation.createSvgFragment(ctxt);\n      })\n      .join(\"\");\n    this.updateBounds(-1);\n    return result;\n  }\n}\n\nexport class ChantNotationElement extends ChantLayoutElement {\n  constructor() {\n    super();\n\n    //double\n    this.leadingSpace = 0.0;\n    this.trailingSpace = DefaultTrailingSpace;\n    this.keepWithNext = false;\n    this.needsLayout = true;\n\n    this.lyrics = [];\n\n    this.score = null; // the ChantScore\n    this.line = null; // the ChantLine\n\n    this.visualizers = [];\n  }\n\n  hasLyrics() {\n    return this.lyrics.length !== 0;\n  }\n\n  getAllLyricsLeft() {\n    if (this.lyrics.length === 0) return this.bounds.right();\n\n    var x = Number.MAX_VALUE;\n    for (var i = 0; i < this.lyrics.length; i++) {\n      if (this.lyrics[i]) x = Math.min(x, this.lyrics[i].bounds.x);\n    }\n\n    return this.bounds.x + x;\n  }\n\n  getAllLyricsRight() {\n    if (this.lyrics.length === 0) return this.bounds.x;\n\n    var x = Number.MIN_VALUE;\n    for (var i = 0; i < this.lyrics.length; i++) {\n      if (this.lyrics[i])\n        x = Math.max(x, this.lyrics[i].bounds.x + this.lyrics[i].bounds.width);\n    }\n\n    return this.bounds.x + x;\n  }\n\n  // used by subclasses while building up the chant notations.\n  addVisualizer(chantLayoutElement) {\n    if (!chantLayoutElement.ignoreBounds) {\n      if (this.bounds.isEmpty())\n        this.bounds = chantLayoutElement.bounds.clone();\n      else this.bounds.union(chantLayoutElement.bounds);\n    }\n\n    this.visualizers.push(chantLayoutElement);\n  }\n\n  // same as addVisualizer, except the element is unshifted to the front\n  // of the visualizer array rather than the end. This way, some\n  // visualizers can be placed behind the others...ledger lines for example.\n  prependVisualizer(chantLayoutElement) {\n    if (this.bounds.isEmpty()) this.bounds = chantLayoutElement.bounds.clone();\n    else this.bounds.union(chantLayoutElement.bounds);\n\n    this.visualizers.unshift(chantLayoutElement);\n  }\n\n  // chant notation elements are given an opportunity to perform their layout via this function.\n  // subclasses should call this function first in overrides of this function.\n  // on completion, exsurge presumes that the bounds, the origin, and the fragment objects are\n  // all valid and prepared for higher level layout.\n  performLayout(ctxt) {\n    if (typeof this.trailingSpace === \"function\")\n      this.calculatedTrailingSpace = this.trailingSpace(ctxt);\n    else this.calculatedTrailingSpace = this.trailingSpace;\n\n    // reset the bounds and the staff notations before doing a layout\n    this.visualizers = [];\n    this.bounds = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this.lyrics.length; i++)\n      this.lyrics[i].recalculateMetrics(ctxt);\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++)\n        this.alText[i].recalculateMetrics(ctxt);\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        this.translationText[i].recalculateMetrics(ctxt);\n  }\n\n  // some subclasses have internal dependencies on other notations (for example,\n  // a custos can depend on a later neume which it uses to set its height).\n  // subclasses can override this function so that when the notations are\n  // altered, the subclass can correctly invalidate (and later restore) its own\n  // depedencies\n  resetDependencies() {}\n\n  // a helper function for subclasses to call after they are done performing layout...\n  finishLayout(ctxt) {\n    this.bounds.x = 0;\n\n    let language =\n      (this.lyrics[0] && this.lyrics[0].language) || ctxt.defaultLanguage;\n    // center the neume itself over the syllable, or just the first punctum\n    // if the neume is wider than the syllable + the width of a punctum, we always revert to centering just over the punctum\n    let calculateLyricX = language.centerNeume\n      ? (lyric) =>\n          (lyric.bounds.x =\n            this.bounds.width + ctxt.staffInterval < lyric.vowelSegmentWidth\n              ? this.bounds.width / 2 - lyric.origin.x\n              : this.origin.x - lyric.origin.x)\n      : (lyric) => (lyric.bounds.x = this.origin.x - lyric.origin.x);\n    this.lyrics.forEach(calculateLyricX);\n\n    this.needsLayout = false;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n    canvasCtxt.translate(this.bounds.x, 0);\n\n    for (var i = 0; i < this.visualizers.length; i++)\n      this.visualizers[i].draw(ctxt);\n\n    for (i = 0; i < this.lyrics.length; i++) this.lyrics[i].draw(ctxt);\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        this.translationText[i].draw(ctxt);\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++) this.alText[i].draw(ctxt);\n\n    canvasCtxt.translate(-this.bounds.x, 0);\n  }\n\n  getInnerSvgNodes(ctxt, functionName = \"createSvgNode\") {\n    var inner = [];\n\n    for (i = 0; i < this.lyrics.length; i++)\n      inner.push(this.lyrics[i][functionName](ctxt));\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        inner.push(this.translationText[i][functionName](ctxt));\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++)\n        inner.push(this.alText[i][functionName](ctxt));\n\n    if (this.visualizers.length) {\n      let visualizers = [];\n      for (var i = 0; i < this.visualizers.length; i++)\n        visualizers.push(this.visualizers[i][functionName](ctxt, this));\n\n      if (functionName === \"createSvgTree\") {\n        inner.push(\n          QuickSvg.createSvgTree(\"g\", { class: \"Notations\" }, ...visualizers)\n        );\n      } else {\n        inner.push(\n          QuickSvg.createNode(\"g\", { class: \"Notations\" }, visualizers)\n        );\n      }\n    }\n    return inner;\n  }\n\n  getSvgProps() {\n    return {\n      // this.constructor.name will not be the same after being mangled by UglifyJS\n      class: \"ChantNotationElement \" + this.constructor.name,\n      transform: \"translate(\" + this.bounds.x + \",\" + 0 + \")\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    var inner = this.getInnerSvgNodes(ctxt, \"createSvgNode\");\n    var svgProps = this.getSvgProps();\n    svgProps.source = this;\n    return QuickSvg.createNode(\"g\", svgProps, inner);\n  }\n  createSvgTree(ctxt) {\n    var inner = this.getInnerSvgNodes(ctxt, \"createSvgTree\");\n    var svgProps = this.getSvgProps();\n    svgProps.source = this;\n    return QuickSvg.createSvgTree(\"g\", svgProps, ...inner);\n  }\n\n  createSvgFragment(ctxt) {\n    var inner = \"\";\n\n    for (i = 0; i < this.lyrics.length; i++)\n      inner += this.lyrics[i].createSvgFragment(ctxt);\n\n    if (this.translationText)\n      for (i = 0; i < this.translationText.length; i++)\n        inner += this.translationText[i].createSvgFragment(ctxt);\n\n    if (this.alText)\n      for (i = 0; i < this.alText.length; i++)\n        inner += this.alText[i].createSvgFragment(ctxt);\n\n    for (var i = 0; i < this.visualizers.length; i++)\n      inner += this.visualizers[i].createSvgFragment(ctxt, this);\n\n    return QuickSvg.createFragment(\"g\", this.getSvgProps(), inner);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Drawing.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport * as Exsurge from \"./Exsurge.Core.js\";\nimport { Step, Pitch, Rect, Point, Margins } from \"./Exsurge.Core.js\";\nimport {\n  QuickSvg,\n  ChantLayoutElement,\n  ChantNotationElement,\n  GlyphCode,\n  GlyphVisualizer,\n  Lyric,\n  Annotation,\n  DropCap,\n  TextLeftRight,\n  TextSpan\n} from \"./Exsurge.Drawing.js\";\nimport { ChantLine } from \"./Exsurge.Chant.ChantLine.js\";\nimport { AccidentalType, InsertionCursor } from \"./Exsurge.Chant.Signs.js\";\nimport { Gabc } from \"./Exsurge.Gabc.js\";\nimport { Titles } from \"./Exsurge.Titles.js\";\n\nexport var LiquescentType = {\n  None: 0,\n\n  // flags that can be combined, though of course it\n  // it doesn't make sense to combine some!\n  Large: 1 << 0,\n  Small: 1 << 1,\n  Ascending: 1 << 2,\n  Descending: 1 << 3,\n  InitioDebilis: 1 << 4,\n\n  // handy liquescent types\n  LargeAscending: (1 << 0) | (1 << 2),\n  LargeDescending: (1 << 0) | (1 << 3),\n  SmallAscending: (1 << 1) | (1 << 2),\n  SmallDescending: (1 << 1) | (1 << 3)\n};\n\nexport var NoteShape = {\n  // shapes\n  Default: 0,\n  Virga: 1,\n  Inclinatum: 2,\n  Quilisma: 3,\n  Stropha: 4,\n  Oriscus: 5\n};\n\nexport var NoteShapeModifiers = {\n  // flags which modify the shape\n  // not all of them apply to every shape of course\n  None: 0,\n  Ascending: 1 << 0,\n  Descending: 1 << 1,\n  Cavum: 1 << 2,\n  Stemmed: 1 << 3\n};\n\n/**\n * @class\n */\nexport class Note extends ChantLayoutElement {\n  /**\n   * @para {Pitch} pitch\n   */\n  constructor(pitch) {\n    super();\n\n    if (typeof pitch !== \"undefined\") this.pitch = pitch;\n    else this.pitch = null;\n\n    this.glyphVisualizer = null;\n\n    // The staffPosition on a note is an integer that indicates the vertical position on the staff.\n    // 0 is the center space on the staff (equivalent to gabc 'g'). Positive numbers go up\n    // the staff, and negative numbers go down, i.e., 1 is gabc 'h', 2 is gabc 'i', -1 is gabc 'f', etc.\n    this.staffPosition = 0;\n    this.liquescent = LiquescentType.None;\n    this.shape = NoteShape.Default;\n    this.shapeModifiers = NoteShapeModifiers.None;\n\n    // notes keep track of the neume they belong to in order to facilitate layout\n    // this.neume gets set when a note is added to a neume via Neume.addNote()\n    this.neume = null;\n\n    // various markings that can exist on a note, organized by type\n    // for faster access and simpler code logic\n    this.episemata = [];\n    this.morae = []; // silly to have an array of these, but gabc allows multiple morae per note!\n\n    // these are set on the note when they are needed, otherwise, they're undefined\n    // this.ictus\n    // this.accuteAccent\n    // this.braceStart\n    // this.braceEnd\n  }\n\n  setGlyph(ctxt, glyphCode) {\n    if (this.glyphVisualizer) this.glyphVisualizer.setGlyph(ctxt, glyphCode);\n    else this.glyphVisualizer = new GlyphVisualizer(ctxt, glyphCode);\n\n    this.glyphVisualizer.setStaffPosition(ctxt, this.staffPosition);\n\n    // assign glyphvisualizer metrics to this note\n    this.bounds.x = this.glyphVisualizer.bounds.x;\n    this.bounds.y = this.glyphVisualizer.bounds.y;\n    this.bounds.width = this.glyphVisualizer.bounds.width;\n    this.bounds.height = this.glyphVisualizer.bounds.height;\n\n    this.origin.x = this.glyphVisualizer.origin.x;\n    this.origin.y = this.glyphVisualizer.origin.y;\n  }\n\n  // a utility function for modifiers\n  shapeModifierMatches(shapeModifier) {\n    if (shapeModifier === NoteShapeModifiers.None)\n      return this.shapeModifier === NoteShapeModifiers.None;\n    else return this.shapeModifier & (shapeModifier !== 0);\n  }\n\n  draw(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n\n    this.glyphVisualizer.draw(ctxt);\n  }\n\n  createSvgNode(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n    this.svgNode = this.glyphVisualizer.createSvgNode(ctxt, this);\n    return this.svgNode;\n  }\n  createSvgTree(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n    return this.glyphVisualizer.createSvgTree(ctxt, this);\n  }\n\n  createSvgFragment(ctxt) {\n    this.glyphVisualizer.bounds.x = this.bounds.x;\n    this.glyphVisualizer.bounds.y = this.bounds.y;\n    return this.glyphVisualizer.createSvgFragment(ctxt, this);\n  }\n}\n\nexport class Clef extends ChantNotationElement {\n  constructor(staffPosition, octave, defaultAccidental = null) {\n    super();\n\n    this.isClef = true;\n    this.staffPosition = staffPosition;\n    this.octave = octave;\n    this.defaultAccidental = defaultAccidental;\n    this.activeAccidental = defaultAccidental;\n    this.keepWithNext = true;\n  }\n\n  resetAccidentals() {\n    this.activeAccidental = this.defaultAccidental;\n  }\n\n  pitchToStaffPosition(pitch) {}\n\n  performLayout(ctxt) {\n    ctxt.activeClef = this;\n\n    if (this.defaultAccidental) this.defaultAccidental.performLayout(ctxt);\n\n    super.performLayout(ctxt);\n  }\n\n  finishLayout(ctxt) {\n    // if we have a default accidental, then add a glyph for it now\n    if (this.defaultAccidental) {\n      var accidentalGlyph = this.defaultAccidental.createGlyphVisualizer(ctxt);\n      accidentalGlyph.bounds.x +=\n        this.visualizers[0].bounds.right() + ctxt.intraNeumeSpacing;\n      this.addVisualizer(accidentalGlyph);\n    }\n\n    super.finishLayout(ctxt);\n  }\n\n  static default() {\n    return __defaultDoClef;\n  }\n\n  clone() {\n    if (this.model) return this.model.clone();\n    let clone = new this.constructor(\n      this.staffPosition,\n      this.octave,\n      this.defaultAccidental\n    );\n    clone.sourceGabc = this.sourceGabc;\n    clone.sourceIndex = this.sourceIndex;\n    clone.elementIndex = this.elementIndex;\n    clone.model = this;\n    return clone;\n  }\n}\n\nexport class DoClef extends Clef {\n  constructor(staffPosition, octave, defaultAccidental = null) {\n    super(staffPosition, octave, defaultAccidental);\n\n    this.leadingSpace = 0.0;\n  }\n\n  pitchToStaffPosition(pitch) {\n    return (\n      (pitch.octave - this.octave) * 7 +\n      this.staffPosition +\n      Pitch.stepToStaffOffset(pitch.step) -\n      Pitch.stepToStaffOffset(Step.Do)\n    );\n  }\n\n  staffPositionToPitch(staffPosition) {\n    var offset = staffPosition - this.staffPosition;\n    var octaveOffset = Math.floor(offset / 7);\n\n    var step = Pitch.staffOffsetToStep(offset);\n\n    if (\n      this.activeAccidental &&\n      this.activeAccidental.staffPosition === staffPosition\n    )\n      step += this.activeAccidental.accidentalType;\n\n    return new Pitch(step, this.octave + octaveOffset);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.DoClef);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n    this.addVisualizer(glyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\nvar __defaultDoClef = new DoClef(3, 2);\n\nexport class FaClef extends Clef {\n  constructor(staffPosition, octave, defaultAccidental = null) {\n    super(staffPosition, octave, defaultAccidental);\n\n    this.octave = octave;\n\n    this.leadingSpace = 0;\n  }\n\n  pitchToStaffPosition(pitch) {\n    return (\n      (pitch.octave - this.octave) * 7 +\n      this.staffPosition +\n      Pitch.stepToStaffOffset(pitch.step) -\n      Pitch.stepToStaffOffset(Step.Fa)\n    );\n  }\n\n  staffPositionToPitch(staffPosition) {\n    var offset = staffPosition - this.staffPosition + 3; // + 3 because it's a fa clef (3 == offset from Do)\n    var octaveOffset = Math.floor(offset / 7);\n\n    var step = Pitch.staffOffsetToStep(offset);\n\n    if (\n      this.activeAccidental &&\n      this.activeAccidental.staffPosition === staffPosition\n    )\n      step += this.activeAccidental.accidentalType;\n\n    return new Pitch(step, this.octave + octaveOffset);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.FaClef);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n    this.addVisualizer(glyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * TextOnly\n */\nexport class TextOnly extends ChantNotationElement {\n  constructor(sourceIndex, sourceLength) {\n    super();\n    this.sourceIndex = sourceIndex;\n    this.sourceLength = sourceLength;\n    this.sourceGabc = \"\";\n    this.trailingSpace = 0;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    // add an empty glyph as a placeholder\n    this.addVisualizer(new GlyphVisualizer(ctxt, GlyphCode.None));\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n\n    this.finishLayout(ctxt);\n  }\n}\n\nexport class ChantLineBreak extends ChantNotationElement {\n  constructor(justify) {\n    super();\n    this.calculatedTrailingSpace = this.trailingSpace = 0;\n    this.justify = justify;\n  }\n\n  performLayout(ctxt) {\n    // reset the bounds before doing a layout\n    this.bounds = new Rect(0, 0, 0, 0);\n  }\n\n  clone() {\n    var lb = new ChantLineBreak();\n    lb.justify = this.justify;\n\n    return lb;\n  }\n}\n\n// a chant mapping is a lightweight format independent way of\n// tracking how a chant language (e.g., gabc) has been\n// mapped to exsurge notations.\nexport class ChantMapping {\n  // source can be any object type. in the case of gabc, source is a text\n  // string that maps to a gabc word (e.g.: \"no(g)bis(fg)\").\n  // notations is an array of ChantNotationElements\n  constructor(source, notations, sourceIndex) {\n    this.source = source;\n    this.notations = notations;\n    this.sourceIndex = sourceIndex;\n  }\n}\n\nconst __connectorSpan = new TextSpan(\" • \"),\n  __mergeAnnotationWithTextLeft = (...annotationSpans) =>\n    annotationSpans.reduce((result, spans) => {\n      if (result && result.length) {\n        if (spans && spans.length) return result.concat(__connectorSpan, spans);\n        else return result;\n      } else if (spans && spans.length) {\n        return spans;\n      }\n      return [];\n    });\n\n/*\n * Score, document\n */\nexport class ChantScore {\n  // mappings is an array of ChantMappings.\n  constructor(ctxt, mappings = [], useDropCap) {\n    this.mappings = mappings;\n\n    this.lines = [];\n    this.notes = [];\n    if (ctxt) this.titles = new Titles(ctxt, this);\n\n    this.startingClef = null;\n\n    this.useDropCap = useDropCap;\n    this.dropCap = null;\n\n    this.annotation = null;\n\n    this.compiled = false;\n\n    this.autoColoring = true;\n    this.needsLayout = true;\n\n    // valid after chant lines are created...\n    this.bounds = new Rect();\n\n    this.mergeAnnotationWithTextLeft = __mergeAnnotationWithTextLeft;\n\n    if (ctxt) this.updateNotations(ctxt);\n  }\n\n  /**\n   * Make a copy of the score, only including the specified lines\n   * @param  {number} startLine starting index\n   * @param  {number} endLine   ending index\n   * @return {ChantScore}           the partial score\n   */\n  copyLines(startLine, endLine) {\n    let result = new ChantScore();\n    result.lines = this.lines.slice(startLine, endLine);\n    result.bounds = this.bounds.clone();\n    let lastLine = result.lines.slice(-1)[0];\n    result.bounds.height = lastLine.bounds.bottom() - lastLine.origin.y;\n    if (startLine === 0) {\n      result.titles = this.titles;\n      result.dropCap = this.dropCap;\n      result.annotation = this.annotation;\n    }\n    return result;\n  }\n\n  updateSelection(selection) {\n    this.selection = selection;\n    const elementSelection = (selection && selection.element) || {\n      indices: []\n    };\n    const selectedIndices = elementSelection.indices;\n    let insertion = elementSelection.insertion;\n    if (\n      !insertion &&\n      selectedIndices.length === 1 &&\n      this.notes[selectedIndices[0]] instanceof TextOnly\n    ) {\n      // if there is only one selection, and its a text only, it should display as an insertion cursor:\n      insertion = { afterElementIndex: selectedIndices[0] };\n    }\n    // update the selected elements so that they can be given a .selected class when rendered\n    for (let i = 0; i < this.notes.length; ++i) {\n      let element = this.notes[i];\n      element.selected = selectedIndices.includes(i);\n    }\n    (\n      this.startingClef.model || this.startingClef\n    ).selected = selectedIndices.includes(-1);\n    for (let i = 0; i < this.lines.length; ++i) {\n      this.lines[i].insertionCursor = null;\n    }\n    // update the insertion cursor, so it can be drawn on the correct system\n    this.insertionElement = null;\n    let insertionLine = null;\n    if (insertion) {\n      if (typeof insertion.chantLine === \"number\") {\n        insertionLine = this.lines[insertion.chantLine];\n        this.insertionElement = insertionLine.startingClef;\n        insertionLine.insertionCursor = new InsertionCursor();\n      } else if (typeof insertion.afterElementIndex === \"number\") {\n        this.insertionElement = this.notes[insertion.afterElementIndex];\n        if (!this.insertionElement) {\n          insertionLine = this.lines[0];\n          this.insertionElement = insertionLine.startingClef;\n        } else if (this.insertionElement.neume) {\n          this.insertionElement = this.insertionElement.neume;\n        }\n        if (!insertionLine) {\n          insertionLine = this.insertionElement.line || this.lines[this.lines.length - 1];\n        }\n        insertionLine.insertionCursor = new InsertionCursor();\n      }\n    }\n  }\n\n  updateNotations(ctxt) {\n    var i, j, mapping, notation;\n\n    // flatten all mappings into one array for N(0) access to notations\n    this.notations = [];\n    this.notes = [];\n    this.hasLyrics = false;\n    this.hasAboveLinesText = false;\n    this.hasTranslations = false;\n    const elementSelection = (this.selection && this.selection.element) || {\n      indices: []\n    };\n    const selectedIndices = elementSelection.indices;\n\n    // find the starting clef...\n    // start with a default clef in case the notations don't provide one.\n    this.startingClef = null;\n\n    for (i = 0; i < this.mappings.length; i++) {\n      mapping = this.mappings[i];\n      for (j = 0; j < mapping.notations.length; j++) {\n        notation = mapping.notations[j];\n        notation.score = this;\n        notation.mapping = mapping;\n\n        if (!this.startingClef) {\n          if (notation.isNeume) {\n            this.startingClef = Clef.default();\n          } else if (notation.isClef) {\n            this.startingClef = notation;\n            continue;\n          }\n        }\n\n        notation.notationIndex = this.notations.push(notation) - 1;\n        if (!this.hasLyrics && notation.hasLyrics()) this.hasLyrics = true;\n        if (!this.hasAboveLinesText && notation.alText)\n          this.hasAboveLinesText = true;\n        if (!this.hasTranslations && notation.translationText)\n          this.hasTranslations = true;\n\n        // Update this.notes and find element indices:\n        let elements = notation.notes || [notation];\n        for (let element of elements) {\n          let elementIndex = (element.elementIndex =\n            this.notes.push(element) - 1);\n          element.selected = selectedIndices.includes(elementIndex);\n        }\n      }\n    }\n\n    // if we've reached this far and we *still* don't have a clef, then there aren't even\n    // any neumes in the score. still, set the default clef just for good measure\n    if (!this.startingClef) this.startingClef = Clef.default();\n    this.startingClef.elementIndex = -1;\n\n    // update drop cap\n    if (this.useDropCap) this.recreateDropCap(ctxt);\n    else this.dropCap = null;\n\n    this.needsLayout = true;\n  }\n\n  recreateDropCap(ctxt) {\n    this.dropCap = null;\n\n    // find the first notation with lyrics to use\n    for (var i = 0; i < this.notations.length; i++) {\n      if (\n        this.notations[i].hasLyrics() &&\n        this.notations[i].lyrics[0] !== null &&\n        this.notations[i].lyrics[0].spans &&\n        this.notations[i].lyrics[0].spans.length\n      ) {\n        let notation = this.notations[i],\n          lyrics = notation.lyrics[0];\n        if (this.useDropCap) {\n          this.dropCap = lyrics.generateDropCap(ctxt);\n        } else {\n          lyrics.dropCap = null;\n          lyrics.generateSpansFromText(ctxt, lyrics.originalText);\n        }\n        notation.needsLayout = true;\n        return;\n      }\n    }\n  }\n\n  /**\n   * Shared layout initialization method for performLayout() and performLayoutAsync()\n   * @param  {ChantContext} ctxt\n   */\n  initializeLayout(ctxt) {\n    // setup the context\n    ctxt.activeClef = this.startingClef;\n    ctxt.notations = this.notations;\n    ctxt.currNotationIndex = 0;\n\n    if (this.dropCap) this.dropCap.recalculateMetrics(ctxt);\n\n    if (this.annotation) this.annotation.recalculateMetrics(ctxt);\n  }\n\n  // this is the the synchronous version of performLayout that\n  // process everything without yielding to any other workers/threads.\n  // good for server side processing or very small chant pieces.\n  performLayout(ctxt, force) {\n    if (!force && this.needsLayout === false) return; // nothing to do here!\n\n    ctxt.updateHyphenWidth();\n\n    this.initializeLayout(ctxt);\n\n    for (let i = 0; i < this.notations.length; i++) {\n      let notation = this.notations[i];\n      if (force || notation.needsLayout) {\n        ctxt.currNotationIndex = i;\n        notation.performLayout(ctxt);\n      }\n    }\n\n    this.needsLayout = false;\n  }\n\n  // for web applications, probably performLayoutAsync would be more\n  // apppropriate that the above performLayout, since it will process\n  // the notations without locking up the UI thread.\n  performLayoutAsync(ctxt, finishedCallback) {\n    if (this.needsLayout === false) {\n      if (finishedCallback) setTimeout(() => finishedCallback(), 0);\n\n      return; // nothing to do here!\n    }\n\n    if (ctxt.onFontLoaded) {\n      ctxt.onFontLoaded.push(() =>\n        this.performLayoutAsync(ctxt, finishedCallback)\n      );\n      return;\n    }\n\n    // check for sane value of hyphen width:\n    ctxt.updateHyphenWidth();\n    if (\n      !ctxt.hyphenWidth ||\n      ctxt.hyphenWidth / ctxt.textStyles.lyric.size > 0.6\n    ) {\n      setTimeout(() => {\n        this.performLayoutAsync(ctxt, finishedCallback);\n      }, 100);\n      return;\n    }\n\n    this.initializeLayout(ctxt);\n\n    setTimeout(() => this.layoutElementsAsync(ctxt, 0, finishedCallback), 0);\n  }\n\n  layoutElementsAsync(ctxt, index, finishedCallback) {\n    if (index >= this.notations.length) {\n      this.needsLayout = false;\n\n      if (finishedCallback) setTimeout(() => finishedCallback(), 0);\n\n      return;\n    }\n\n    if (index === 0) ctxt.activeClef = this.startingClef;\n\n    var timeout = new Date().getTime() + 50; // process for fifty milliseconds\n    do {\n      var notation = this.notations[index];\n      if (notation.needsLayout) {\n        ctxt.currNotationIndex = index;\n        notation.performLayout(ctxt);\n      }\n\n      index++;\n    } while (index < this.notations.length && new Date().getTime() < timeout);\n\n    // schedule the next block of processing\n    setTimeout(\n      () => this.layoutElementsAsync(ctxt, index, finishedCallback),\n      0\n    );\n  }\n\n  layoutChantLines(ctxt, width, finishedCallback) {\n    this.lines = [];\n\n    if (this.mergeAnnotationWithTextLeft && this.annotation && !this.dropCap) {\n      let annotation = this.annotation,\n        annotationSpans = annotation.annotations\n          ? annotation.annotations.map((annotation) => annotation.spans)\n          : [annotation.spans];\n      this.overrideTextLeft = new TextLeftRight(ctxt, \"\", \"textLeft\");\n      this.overrideTextLeft.spans = this.mergeAnnotationWithTextLeft(\n        ...annotationSpans,\n        this.titles.textLeft && this.titles.textLeft.spans\n      );\n    } else {\n      this.overrideTextLeft = null;\n    }\n\n    var y = width > 0 ? this.titles.layoutTitles(ctxt, width) : 0;\n    var currIndex = 0;\n\n    ctxt.activeClef = this.startingClef;\n\n    var spaceBetweenSystems = ctxt.staffInterval * ctxt.spaceBetweenSystems;\n\n    do {\n      var line = new ChantLine(this);\n\n      line.buildFromChantNotationIndex(ctxt, currIndex, width);\n      currIndex = line.notationsStartIndex + line.numNotationsOnLine;\n      line.performLayout(ctxt);\n      line.elementIndex = this.lines.length;\n      this.lines.push(line);\n\n      line.bounds.y = -line.bounds.y + y;\n      y += line.bounds.height + spaceBetweenSystems;\n    } while (currIndex < this.notations.length);\n\n    var lastLine = this.lines[this.lines.length - 1];\n\n    this.bounds.x = 0;\n    this.bounds.y = 0;\n    this.bounds.width = lastLine.bounds.width;\n    this.bounds.height = y - spaceBetweenSystems;\n\n    this.pages = [this];\n\n    if (this.selection) {\n      this.updateSelection(this.selection);\n    }\n\n    if (finishedCallback) finishedCallback(this);\n  }\n\n  paginate(height) {\n    if (!height) return;\n    this.pages = [];\n    let pageHeightOffset = 0,\n      startLineIndex = 0;\n    for (let i = 1; i < this.lines.length; ++i) {\n      let line = this.lines[i];\n      let pageHeight = line.bounds.bottom() - pageHeightOffset - line.origin.y;\n\n      if (pageHeight > height) {\n        // this line will be the first on the new page\n        this.pages.push(this.copyLines(startLineIndex, i));\n        startLineIndex = i;\n        pageHeightOffset = line.bounds.y - line.origin.y;\n        line.bounds.y = line.origin.y;\n      } else {\n        // not a new page yet...update the bounds:\n        line.bounds.y -= pageHeightOffset;\n      }\n    }\n    this.pages.push(this.copyLines(startLineIndex, this.lines.length));\n  }\n\n  draw(ctxt, scale = 1) {\n    ctxt.setCanvasSize(this.bounds.width, this.bounds.height, scale);\n\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.clearRect(0, 0, ctxt.canvas.width, ctxt.canvas.height);\n\n    canvasCtxt.translate(this.bounds.x, this.bounds.y);\n\n    if (this.titles) this.titles.draw(ctxt);\n\n    for (var i = 0; i < this.lines.length; i++) this.lines[i].draw(ctxt);\n\n    canvasCtxt.translate(-this.bounds.x, -this.bounds.y);\n  }\n\n  getSvgProps(ctxt, zoom) {\n    let width =\n        typeof zoom === \"number\"\n          ? zoom * this.bounds.width\n          : zoom\n          ? undefined\n          : this.bounds.width,\n      height = zoom ? undefined : this.bounds.height;\n\n    return {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      version: \"1.1\",\n      class: \"Exsurge ChantScore\" + (ctxt.editable ? \" EditableChantScore\" : \"\"),\n      width,\n      height,\n      viewBox: [0, 0, this.bounds.width, this.bounds.height].join(\" \")\n    };\n  }\n\n  createSvgNode(ctxt) {\n    // create defs section\n    var node = [ctxt.defsNode.cloneNode(true)];\n    node[0].appendChild(ctxt.createStyleNode());\n\n    if (this.titles) node.push(this.titles.createSvgNode(ctxt));\n\n    for (var i = 0; i < this.lines.length; i++)\n      node.push(this.lines[i].createSvgNode(ctxt));\n\n    node = QuickSvg.createNode(\"g\", {}, node);\n\n    node = QuickSvg.createNode(\"svg\", this.getSvgProps(ctxt), node);\n\n    node.source = this;\n    this.svg = node;\n\n    return node;\n  }\n\n  createSvgTree(ctxt, zoom) {\n    // create defs section\n    var node = [\n      QuickSvg.createSvgTree(\n        \"defs\",\n        {},\n        ...ctxt.makeDefs.map((makeDef) => makeDef.makeSvgTree()),\n        ctxt.createStyleTree()\n      )\n    ];\n\n    if (this.titles) node.push(this.titles.createSvgTree(ctxt));\n\n    for (var i = 0; i < this.lines.length; i++)\n      node.push(this.lines[i].createSvgTree(ctxt));\n\n    node = QuickSvg.createSvgTree(\"g\", {}, ...node);\n    let svgProps = this.getSvgProps(ctxt, zoom);\n    svgProps.source = this;\n    node = QuickSvg.createSvgTree(\"svg\", svgProps, node);\n\n    return node;\n  }\n\n  createSvg(ctxt) {\n    var fragment = \"\";\n\n    // create defs section\n    for (var def in ctxt.defs)\n      if (ctxt.defs.hasOwnProperty(def)) fragment += ctxt.defs[def];\n    fragment += ctxt.createStyle();\n\n    fragment = QuickSvg.createFragment(\"defs\", {}, fragment);\n\n    if (this.titles) fragment += this.titles.createSvgFragment(ctxt);\n\n    for (var i = 0; i < this.lines.length; i++)\n      fragment += this.lines[i].createSvgFragment(ctxt);\n\n    fragment = QuickSvg.createFragment(\"g\", {}, fragment);\n\n    fragment = QuickSvg.createFragment(\"svg\", this.getSvgProps(ctxt), fragment);\n\n    return fragment;\n  }\n\n  createSvgNodeForEachLine(ctxt) {\n    var node = [];\n\n    var top = 0;\n    for (var i = 0; i < this.lines.length; i++) {\n      var lineFragment = [\n        ctxt.defsNode.cloneNode(true),\n        this.lines[i].createSvgNode(ctxt, top)\n      ];\n      lineFragment[0].appendChild(ctxt.createStyleNode());\n      var height = this.lines[i].bounds.height + ctxt.staffInterval * 1.5;\n      lineFragment = QuickSvg.createNode(\"g\", {}, lineFragment);\n      lineFragment = QuickSvg.createNode(\n        \"svg\",\n        {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          version: \"1.1\",\n          class: \"Exsurge ChantScore\",\n          width: this.bounds.width,\n          height: height,\n          viewBox: [0, 0, this.bounds.width, height].join(\" \")\n        },\n        lineFragment\n      );\n      node.push(lineFragment);\n      top += height;\n    }\n    return node;\n  }\n\n  createSvgForEachLine(ctxt) {\n    var fragment = \"\",\n      fragmentDefs = \"\";\n\n    // create defs section\n    for (var def in ctxt.defs)\n      if (ctxt.defs.hasOwnProperty(def)) fragmentDefs += ctxt.defs[def];\n    fragmentDefs += ctxt.createStyle();\n\n    fragmentDefs = QuickSvg.createFragment(\"defs\", {}, fragmentDefs);\n    var top = 0;\n    for (var i = 0; i < this.lines.length; i++) {\n      var lineFragment =\n        fragmentDefs + this.lines[i].createSvgFragment(ctxt, top);\n      var height = this.lines[i].bounds.height + ctxt.staffInterval * 1.5;\n      lineFragment = QuickSvg.createFragment(\"g\", {}, lineFragment);\n      lineFragment = QuickSvg.createFragment(\n        \"svg\",\n        {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          version: \"1.1\",\n          \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n          class: \"Exsurge ChantScore\",\n          width: this.bounds.width,\n          height: height\n        },\n        lineFragment\n      );\n      fragment += lineFragment;\n      top += height;\n    }\n    return fragment;\n  }\n\n  unserializeFromJson(data, ctxt) {\n    this.autoColoring = data[\"auto-coloring\"];\n\n    if (data.annotation !== null && data.annotation !== \"\") {\n      // create the annotation\n      this.annotation = new Annotation(ctxt, data.annotation);\n    } else this.annotation = null;\n\n    var createDropCap = data[\"drop-cap\"] === \"auto\" ? true : false;\n\n    Gabc.parseChantNotations(data.notations, this, createDropCap);\n  }\n\n  serializeToJson() {\n    var data = {};\n\n    data[\"type\"] = \"score\";\n    data[\"auto-coloring\"] = true;\n\n    if (this.annotation !== null)\n      data.annotation = this.annotation.unsanitizedText;\n    else data.annotation = \"\";\n\n    return data;\n  }\n}\n\nexport class ChantDocument {\n  constructor() {\n    var defaults = {\n      layout: {\n        units: \"mm\",\n        \"default-font\": {\n          \"font-family\": \"Crimson\",\n          \"font-size\": 14\n        },\n        page: {\n          width: 8.5,\n          height: 11,\n          \"margin-left\": 0,\n          \"margin-top\": 0,\n          \"margin-right\": 0,\n          \"margin-bottom\": 0\n        }\n      },\n      scores: []\n    };\n\n    // default layout\n    this.copyLayout(this, defaults);\n\n    this.scores = defaults.scores;\n  }\n\n  copyLayout(to, from) {\n    to.layout = {\n      units: from.layout.units,\n      \"default-font\": {\n        \"font-family\": from.layout[\"default-font\"][\"font-family\"],\n        \"font-size\": from.layout[\"default-font\"][\"font-size\"]\n      },\n      page: {\n        width: from.layout.page.width,\n        height: from.layout.page.height,\n        \"margin-left\": from.layout.page[\"margin-left\"],\n        \"margin-top\": from.layout.page[\"margin-top\"],\n        \"margin-right\": from.layout.page[\"margin-right\"],\n        \"margin-bottom\": from.layout.page[\"margin-bottom\"]\n      }\n    };\n  }\n\n  unserializeFromJson(data) {\n    this.copyLayout(this, data);\n\n    this.scores = [];\n\n    // read in the scores\n    for (var i = 0; i < data.scores.length; i++) {\n      var score = new ChantScore();\n\n      score.unserializeFromJson(data.scores[i]);\n      this.scores.push(score);\n    }\n  }\n\n  serializeToJson() {\n    var data = {};\n\n    this.copyLayout(data, this);\n\n    data.scores = [];\n\n    // save scores...\n    for (var i = 0; i < this.scores.length; i++)\n      data.scores.push(this.scores[i].serializeToJson());\n\n    return data;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport * as Exsurge from \"./Exsurge.Core.js\";\nimport { Step, Pitch, Rect, Point, Margins } from \"./Exsurge.Core.js\";\nimport * as Neumes from \"./Exsurge.Chant.Neumes.js\";\nimport {\n  QuickSvg,\n  ChantLayoutElement,\n  GlyphCode,\n  GlyphVisualizer,\n  RoundBraceVisualizer,\n  CurlyBraceVisualizer,\n  MarkingPositionHint,\n  Lyric,\n  LyricArray,\n  LyricType,\n  DropCap\n} from \"./Exsurge.Drawing.js\";\nimport { ChantLineBreak, TextOnly, NoteShape } from \"./Exsurge.Chant.js\";\nimport { Glyphs } from \"./Exsurge.Glyphs.js\";\nimport {\n  Custos,\n  DoubleBar,\n  FullBar,\n  InsertionCursor\n} from \"./Exsurge.Chant.Signs.js\";\nimport {\n  HorizontalEpisemaAlignment,\n  HorizontalEpisema,\n  BraceShape,\n  BracePoint,\n  BraceAttachment\n} from \"./Exsurge.Chant.Markings.js\";\n\n// a chant line represents one staff line on the page. ChantLines are created by the score\n// and laid out by the page\nexport class ChantLine extends ChantLayoutElement {\n  constructor(score) {\n    super();\n\n    this.score = score;\n\n    this.notationsStartIndex = 0;\n    this.numNotationsOnLine = 0;\n    this.notationBounds = null; // Rect\n\n    this.staffLeft = 0;\n    this.staffRight = 0;\n\n    this.startingClef = null; // necessary for the layout process\n    this.custos = null;\n\n    this.justify = true;\n\n    // these are markings that exist at the chant line level rather than at the neume level.\n    this.ledgerLines = [];\n    this.braces = [];\n\n    this.nextLine = null;\n    this.previousLine = null; // for layout assistance\n\n    this.lyricLineHeight = 0; // height of each text line\n    this.lyricLineBaseline = 0; // offsets from the top of the text line to the baseline\n    this.numLyricLines = 0; // maximum count of lyrics on the same syllable\n\n    // fixme: make these configurable values from the score\n    this.spaceAfterNotations = 0; // the space between the notation bounds and the first text track\n    this.spaceBetweenTextTracks = 0; // spacing between each text track\n\n    this.lastLyrics = [];\n  }\n\n  performLayout(ctxt) {\n    // start off with a rectangle that holds at least the four staff lines\n    this.notationBounds = new Rect(\n      this.staffLeft,\n      -(ctxt.staffLineWeight / 2 + 3 + ctxt.minSpaceAboveStaff) *\n        ctxt.staffInterval,\n      this.staffRight - this.staffLeft,\n      (ctxt.staffLineWeight + 6 + ctxt.minSpaceAboveStaff) * ctxt.staffInterval\n    );\n\n    // run through all the elements of the line and calculate the bounds of the notations,\n    // as well as the bounds of each text track we will use\n    var i;\n    var notations = this.score.notations;\n    var lastNeumeIndex =\n      this.extraTextOnlyIndex === null\n        ? this.notationsStartIndex + this.numNotationsOnLine\n        : this.extraTextOnlyIndex;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n    var notation = null;\n\n    this.notationBounds.union(this.startingClef.bounds);\n\n    // reset the lyric line offsets before we [re]calculate them now\n    this.lyricLineHeight = ctxt.textStyles.lyric.size * 1.1;\n    this.lyricLineBaseline = 0;\n    this.numLyricLines = 0;\n\n    this.altLineHeight = 0;\n    this.altLineBaseline = 0;\n    this.numAltLines = 0;\n\n    this.translationLineHeight = ctxt.textStyles.translation.size * 1.1;\n    this.translationLineBaseline = 0;\n    this.numTranslationLines = 0;\n\n    for (i = this.notationsStartIndex; i < lastNeumeIndex; i++) {\n      notation = notations[i];\n\n      this.notationBounds.union(notation.bounds);\n\n      // keep track of lyric line offsets\n      if (notation.lyrics.length && notation.lyrics[0].text) {\n        // if (notation.lyrics[0].bounds.height > this.lyricLineHeight)\n        //   this.lyricLineHeight = notation.lyrics[0].bounds.height;\n        if (notation.lyrics[0].origin.y > this.lyricLineBaseline)\n          this.lyricLineBaseline = notation.lyrics[0].origin.y;\n        if (notation.lyrics.length > this.numLyricLines)\n          this.numLyricLines = notation.lyrics.length;\n      }\n\n      if (notation.alText && this.numAltLines < notation.alText.length) {\n        if (notation.alText[0].bounds.height > this.altLineHeight)\n          this.altLineHeight = notation.alText[0].bounds.height;\n        if (notation.alText[0].origin.y > this.altLineBaseline)\n          this.altLineBaseline = notation.alText[0].origin.y;\n        if (notation.alText.length > this.numAltLines)\n          this.numAltLines = notation.alText.length;\n      }\n\n      if (\n        notation.translationText &&\n        notation.translationText[0] &&\n        notation.translationText[0].text\n      ) {\n        // if (\n        //   notation.translationText[0].bounds.height > this.translationLineHeight\n        // )\n        //   this.translationLineHeight =\n        //     notation.translationText[0].bounds.height;\n        if (notation.translationText[0].origin.y > this.translationLineBaseline)\n          this.translationLineBaseline = notation.translationText[0].origin.y;\n        if (notation.translationText.length > this.numTranslationLines)\n          this.numTranslationLines = notation.translationText.length;\n      }\n    }\n\n    if (this.custos) this.notationBounds.union(this.custos.bounds);\n\n    // add any braces to the notationBounds as well\n    for (i = 0; i < this.braces.length; i++)\n      this.notationBounds.union(this.braces[i].bounds);\n\n    // finalize the lyrics placement\n    var notationBoundsOffset =\n      this.notationBounds.bottom() +\n      ctxt.minSpaceBelowStaff * ctxt.staffInterval;\n    this.lyricLineBaseline += notationBoundsOffset;\n    this.translationLineBaseline += notationBoundsOffset;\n    this.altLineBaseline +=\n      this.notationBounds.y - this.altLineHeight - ctxt.staffInterval * 0.5;\n\n    for (i = this.notationsStartIndex; i < lastNeumeIndex; i++) {\n      notation = notations[i];\n      var offset = 0;\n      for (var j = 0; j < notation.lyrics.length; j++) {\n        notation.lyrics[j].bounds.y = offset + this.lyricLineBaseline;\n        offset += this.lyricLineHeight;\n      }\n\n      if (notation.translationText) {\n        for (j = 0; j < notation.translationText.length; j++) {\n          notation.translationText[j].bounds.y =\n            offset + this.translationLineBaseline;\n          offset += this.translationLineHeight;\n        }\n      }\n\n      if (notation.alText) {\n        offset = 0;\n        for (j = 0; j < notation.alText.length; j++) {\n          notation.alText[j].bounds.y = offset + this.altLineBaseline;\n          offset -= ctxt.textStyles.al.size * 1.1;\n        }\n      }\n    }\n\n    this.extraTextOnlyHeight = 0;\n    // handle placement of extra TextOnly elements:\n    if (ctxt.useExtraTextOnly) {\n      var extraTextOnlyLyricIndex = this.extraTextOnlyLyricIndex;\n      if (this.extraTextOnlyIndex === null) {\n        // even if extraTextOnlyIndex is null, there might be extra lines on the last lyric if it is TextOnly:\n        let lastNotation = notations[lastNeumeIndex - 1] || {};\n        if (lastNotation.constructor === ChantLineBreak)\n          lastNotation = notations[lastNeumeIndex - 2];\n        if (\n          lastNotation.constructor === TextOnly &&\n          lastNotation.lyrics.length === 1 &&\n          lastNotation.lyrics[0].bounds.height > this.lyricLineHeight\n        ) {\n          this.extraTextOnlyHeight = this.lyricLineHeight;\n        }\n      } else {\n        let lastLyrics = null;\n        let xOffset = 0;\n        offset = (this.numLyricLines - 1) * this.lyricLineHeight;\n        offset += this.numTranslationLines * this.translationLineHeight;\n        let extraLines = 0;\n        for (i = this.extraTextOnlyIndex; i < lastIndex; i++) {\n          notation = notations[i];\n          if (!notation.lyrics[extraTextOnlyLyricIndex]) continue;\n          lastLyrics = notation.lyrics[extraTextOnlyLyricIndex];\n          if (lastLyrics.lineWidth) {\n            xOffset = this.staffRight - lastLyrics.lineWidth;\n            offset += this.lyricLineHeight;\n            extraLines++;\n          }\n          extraLines += lastLyrics.numLines - 1;\n          lastLyrics.bounds.y = offset + this.lyricLineBaseline;\n          notation.bounds.x += xOffset;\n        }\n        this.extraTextOnlyHeight = this.lyricLineHeight * extraLines;\n      }\n    }\n\n    if (this.startingClef.hasLyrics()) {\n      offset = 0;\n      for (j = 0; j < this.startingClef.lyrics.length; j++) {\n        this.startingClef.lyrics[j].bounds.y = offset + this.lyricLineBaseline;\n        offset += this.lyricLineHeight;\n      }\n    }\n\n    // dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.annotation !== null) {\n        // annotations use dominant-baseline to align text to the top\n        this.score.annotation.bounds.x = this.staffLeft / 2;\n        this.score.annotation.bounds.y = -ctxt.staffInterval * 3;\n        if (this.score.dropCap !== null) {\n          var lowestPossibleAnnotationY =\n            this.lyricLineBaseline -\n            this.score.annotation.bounds.height -\n            ctxt.staffInterval * ctxt.textStyles.annotation.padding -\n            this.score.dropCap.origin.y;\n          // if the annotation would overlap with the drop cap, move the annotation higher.\n          // otherwise, center the annotation in the vertical space between the top of the drop cap and the top of the staff.\n          if (lowestPossibleAnnotationY < this.score.annotation.bounds.y) {\n            this.score.annotation.bounds.y = lowestPossibleAnnotationY;\n          } else {\n            this.score.annotation.bounds.y =\n              (this.score.annotation.bounds.y + lowestPossibleAnnotationY) / 2;\n          }\n          if (this.score.annotation.bounds.y < this.notationBounds.y) {\n            this.notationBounds.y = this.score.annotation.bounds.y;\n            this.notationBounds.height +=\n              this.notationBounds.y - this.score.annotation.bounds.y;\n          }\n        }\n        this.score.annotation.bounds.y += this.score.annotation.origin.y;\n      }\n\n      if (this.score.dropCap !== null) {\n        // drop caps and annotations are drawn from their center, so aligning them\n        // horizontally is as easy as this.staffLeft / 2\n        this.score.dropCap.bounds.x = this.staffLeft / 2;\n        this.score.dropCap.bounds.y =\n          this.lyricLineBaseline - this.score.dropCap.origin.y;\n        this.notationBounds.union(this.score.dropCap.bounds);\n        this.score.dropCap.bounds.y = this.lyricLineBaseline;\n      }\n    }\n\n    if (this.numLyricLines > 0) {\n      // add up the lyric line heights to get the total height of the chant line\n      var lyricAndTextRect = new Rect(\n        0,\n        notationBoundsOffset,\n        0,\n        this.lyricLineHeight * this.numLyricLines +\n          this.extraTextOnlyHeight +\n          this.translationLineHeight * this.numTranslationLines\n      );\n      this.notationBounds.union(lyricAndTextRect);\n    }\n    if (this.numAltLines > 0) {\n      var altLineTextRect = new Rect(\n        0,\n        this.notationBounds.y -\n          this.altLineHeight -\n          0.5 * ctxt.staffInterval -\n          ctxt.textStyles.al.size * 1.1 * (this.numAltLines - 1),\n        0,\n        ctxt.textStyles.al.size * 1.1 * this.numAltLines\n      );\n      this.notationBounds.union(altLineTextRect);\n    }\n    // Ensure that there is at least minSpaceBelowStaff below the lowest staff line:\n    this.notationBounds.union(\n      new Rect(\n        0,\n        0,\n        0,\n        (3 + ctxt.staffLineWeight / 2 + ctxt.minSpaceBelowStaff) *\n          ctxt.staffInterval\n      )\n    );\n    var totalHeight = this.notationBounds.height;\n\n    this.bounds.x = 0;\n    this.bounds.y = this.notationBounds.y;\n    this.bounds.width = this.notationBounds.right();\n    this.bounds.height = totalHeight;\n\n    // the origin of the chant line's coordinate space is at the center line of the left extremity of the staff\n    this.origin = new Point(this.staffLeft, -this.notationBounds.y);\n  }\n\n  // TODO: remove if not necsessary\n  layoutInsertionCursor(ctxt) {\n    if (this.insertionCursor) {\n      // we have either a Notation to draw the cursor after, or the ChantLine itself when the cursor is the first thing on the line\n      this.insertionCursor.performLayout(ctxt);\n      this.insertionCursor.bounds.x =\n        this.score.insertionElement.bounds.right() +\n        ((this.score.insertionElement.trailingSpace &&\n          this.score.insertionElement.calculatedTrailingSpace) ||\n          0) /\n          2 -\n        this.insertionCursor.origin.x;\n    }\n    return this.insertionCursor;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.translate(this.bounds.x, this.bounds.y);\n\n    // draw the staff lines\n    var i,\n      x1 = this.staffLeft,\n      x2 = this.staffRight,\n      y;\n    canvasCtxt.lineWidth = ctxt.staffLineWeight;\n    canvasCtxt.strokeStyle = ctxt.staffLineColor;\n\n    for (i = -3; i <= 3; i += 2) {\n      y = ctxt.staffInterval * i;\n\n      canvasCtxt.beginPath();\n      canvasCtxt.moveTo(x1, y);\n      canvasCtxt.lineTo(x2, y);\n      canvasCtxt.stroke();\n    }\n\n    if (this.layoutInsertionCursor(ctxt)) {\n      this.insertionCursor.draw(ctxt);\n    }\n\n    // draw the ledger lines\n    for (i = 0; i < this.ledgerLines.length; i++) {\n      var ledgerLine = this.ledgerLines[i];\n      y = ctxt.calculateHeightFromStaffPosition(ledgerLine.staffPosition);\n\n      canvasCtxt.beginPath();\n      canvasCtxt.moveTo(ledgerLine.x1, y);\n      canvasCtxt.lineTo(ledgerLine.x2, y);\n      canvasCtxt.stroke();\n    }\n\n    // fixme: draw the braces\n\n    // draw the dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.dropCap !== null) this.score.dropCap.draw(ctxt);\n\n      if (\n        this.score.annotation !== null &&\n        (!this.score.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        // only draw it if there is a dropCap or there is no mergeAnnotationWithTextLeft\n        this.score.annotation.draw(ctxt);\n    }\n\n    // draw the notations\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    for (i = this.notationsStartIndex; i < lastIndex; i++)\n      notations[i].draw(ctxt);\n\n    this.startingClef.draw(ctxt);\n\n    if (this.custos) this.custos.draw(ctxt);\n\n    canvasCtxt.translate(-this.bounds.x, -this.bounds.y);\n  }\n\n  getInnerNodes(\n    ctxt,\n    top = 0,\n    functionNames = { quickSvg: \"createNode\", elements: \"createSvgNode\" }\n  ) {\n    var inner = [];\n\n    // add the chant lines\n    var i,\n      x1 = this.staffLeft,\n      x2 = this.staffRight;\n\n    if (ctxt.editable) {\n      inner.push(\n        QuickSvg[functionNames.quickSvg](\"rect\", {\n          key: \"insertion\",\n          x: x1,\n          y: ctxt.staffInterval * -3,\n          width: x2 - x1,\n          height: ctxt.staffInterval * 6,\n          fill: \"none\"\n        })\n      );\n    }\n\n    // create the staff lines\n    for (i = -3; i <= 3; i += 2) {\n      inner.push(\n        QuickSvg[functionNames.quickSvg](\"line\", {\n          key: i,\n          x1: x1,\n          y1: ctxt.staffInterval * i,\n          x2: x2,\n          y2: ctxt.staffInterval * i,\n          stroke: ctxt.staffLineColor,\n          \"stroke-width\": ctxt.staffLineWeight,\n          class: \"staffLine\"\n        })\n      );\n    }\n\n    inner = [\n      QuickSvg[functionNames.quickSvg](\"g\", { class: \"staffLines\" }, inner)\n    ];\n\n    if (this.layoutInsertionCursor(ctxt)) {\n      inner.push(this.insertionCursor[functionNames.elements](ctxt));\n    }\n\n    // create the ledger lines\n    for (i = 0; i < this.ledgerLines.length; i++) {\n      var ledgerLine = this.ledgerLines[i];\n      var y = ctxt.calculateHeightFromStaffPosition(ledgerLine.staffPosition);\n\n      inner.push(\n        QuickSvg[functionNames.quickSvg](\"line\", {\n          x1: ledgerLine.x1,\n          y1: y,\n          x2: ledgerLine.x2,\n          y2: y,\n          stroke: ctxt.staffLineColor,\n          \"stroke-width\": ctxt.staffLineWeight,\n          class: \"ledgerLine\"\n        })\n      );\n    }\n\n    // add any braces\n    for (i = 0; i < this.braces.length; i++)\n      inner.push(this.braces[i][functionNames.elements](ctxt));\n\n    // dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.dropCap !== null)\n        inner.push(this.score.dropCap[functionNames.elements](ctxt));\n\n      if (\n        this.score.annotation !== null &&\n        (!this.score.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        // only draw it if there is a dropCap or there is no mergeAnnotationWithTextLeft\n        inner = inner.concat(\n          this.score.annotation[functionNames.elements](ctxt)\n        );\n    }\n\n    inner.push(this.startingClef[functionNames.elements](ctxt));\n\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // add all of the notations\n    for (i = this.notationsStartIndex; i < lastIndex; i++)\n      inner.push(notations[i][functionNames.elements](ctxt));\n\n    if (this.custos) inner.push(this.custos[functionNames.elements](ctxt));\n    return inner;\n  }\n\n  createSvgNode(ctxt, top = 0) {\n    let inner = this.getInnerNodes(ctxt, top, {\n      quickSvg: \"createNode\",\n      elements: \"createSvgNode\"\n    });\n\n    return QuickSvg.createNode(\n      \"g\",\n      {\n        class: \"chantLine\",\n        transform:\n          \"translate(\" + this.bounds.x + \",\" + (this.bounds.y - top) + \")\",\n        \"element-index\": this.elementIndex,\n        source: this\n      },\n      inner\n    );\n  }\n\n  createSvgTree(ctxt, top = 0) {\n    let inner = this.getInnerNodes(ctxt, top, {\n      quickSvg: \"createSvgTree\",\n      elements: \"createSvgTree\"\n    });\n\n    return QuickSvg.createSvgTree(\n      \"g\",\n      {\n        class: \"chantLine\",\n        transform:\n          \"translate(\" + this.bounds.x + \",\" + (this.bounds.y - top) + \")\",\n        \"element-index\": this.elementIndex\n      },\n      ...inner\n    );\n  }\n\n  createSvgFragment(ctxt, top = 0) {\n    var inner = \"\";\n\n    // add the chant lines\n    var i,\n      x1 = this.staffLeft,\n      x2 = this.staffRight;\n\n    // create the staff lines\n    for (i = -3; i <= 3; i += 2) {\n      inner += QuickSvg.createFragment(\"line\", {\n        x1: x1,\n        y1: ctxt.staffInterval * i,\n        x2: x2,\n        y2: ctxt.staffInterval * i,\n        stroke: ctxt.staffLineColor,\n        \"stroke-width\": ctxt.staffLineWeight,\n        class: \"staffLine\"\n      });\n    }\n\n    inner = QuickSvg.createFragment(\"g\", { class: \"staffLines\" }, inner);\n\n    if (this.layoutInsertionCursor(ctxt)) {\n      inner += this.insertionCursor.createSvgFragment(ctxt);\n    }\n\n    // create the ledger lines\n    for (i = 0; i < this.ledgerLines.length; i++) {\n      var ledgerLine = this.ledgerLines[i];\n      var y = ctxt.calculateHeightFromStaffPosition(ledgerLine.staffPosition);\n\n      inner += QuickSvg.createFragment(\"line\", {\n        x1: ledgerLine.x1,\n        y1: y,\n        x2: ledgerLine.x2,\n        y2: y,\n        stroke: ctxt.staffLineColor,\n        \"stroke-width\": ctxt.staffLineWeight,\n        class: \"ledgerLine\"\n      });\n    }\n\n    // add any braces\n    for (i = 0; i < this.braces.length; i++)\n      inner += this.braces[i].createSvgFragment(ctxt);\n\n    // dropCap and the annotations\n    if (this.notationsStartIndex === 0) {\n      if (this.score.dropCap !== null)\n        inner += this.score.dropCap.createSvgFragment(ctxt);\n\n      if (\n        this.score.annotation !== null &&\n        (!this.score.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        // only draw it if there is a dropCap or there is no mergeAnnotationWithTextLeft\n        inner += this.score.annotation.createSvgFragment(ctxt);\n    }\n\n    inner += this.startingClef.createSvgFragment(ctxt);\n\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // add all of the notations\n    for (i = this.notationsStartIndex; i < lastIndex; i++)\n      inner += notations[i].createSvgFragment(ctxt);\n\n    if (this.custos) inner += this.custos.createSvgFragment(ctxt);\n\n    return QuickSvg.createFragment(\n      \"g\",\n      {\n        class: \"chantLine\",\n        transform:\n          \"translate(\" + this.bounds.x + \",\" + (this.bounds.y - top) + \")\",\n        \"element-index\": this.elementIndex\n      },\n      inner\n    );\n  }\n\n  // code below based on code by: https://gist.github.com/alexhornbake\n  //\n  // optimized for braces that are only drawn horizontally.\n  // returns svg path string ready to insert into svg doc\n  generateCurlyBraceDrawable(ctxt, x1, x2, y, isAbove) {\n    var h;\n\n    if (isAbove) h = -ctxt.staffInterval / 2;\n    else h = ctxt.staffInterval / 2;\n\n    // and q factor, .5 is normal, higher q = more expressive bracket\n    var q = 0.6;\n\n    var len = x2 - x1;\n\n    //Calculate Control Points of path,\n    var qx1 = x1;\n    var qy1 = y + q * h;\n    var qx2 = x1 + 0.25 * len;\n    var qy2 = y + (1 - q) * h;\n    var tx1 = x1 + 0.5 * len;\n    var ty1 = y + h;\n    var qx3 = x2;\n    var qy3 = y + q * h;\n    var qx4 = x1 + 0.75 * len;\n    var qy4 = y + (1 - q) * h;\n    var d =\n      \"M \" +\n      x1 +\n      \" \" +\n      y +\n      \" Q \" +\n      qx1 +\n      \" \" +\n      qy1 +\n      \" \" +\n      qx2 +\n      \" \" +\n      qy2 +\n      \" T \" +\n      tx1 +\n      \" \" +\n      ty1 +\n      \" M \" +\n      x2 +\n      \" \" +\n      y +\n      \" Q \" +\n      qx3 +\n      \" \" +\n      qy3 +\n      \" \" +\n      qx4 +\n      \" \" +\n      qy4 +\n      \" T \" +\n      tx1 +\n      \" \" +\n      ty1;\n\n    return QuickSvg.createFragment(\"path\", {\n      d: d,\n      stroke: ctxt.neumeLineColor,\n      \"stroke-width\": ctxt.neumeLineWeight + \"px\",\n      fill: \"none\"\n    });\n  }\n\n  buildFromChantNotationIndex(ctxt, newElementStart, width) {\n    // todo: reset / clear the children we have in case they have data\n    var notations = this.score.notations,\n      beginningLyrics = null,\n      prev = null,\n      prevNeume = null,\n      prevLyrics = [];\n    var condensableSpaces = [];\n    this.notationsStartIndex = newElementStart;\n    this.numNotationsOnLine = 0;\n\n    this.staffLeft = 0;\n    this.paddingLeft = 0;\n\n    this.extraTextOnlyIndex = null;\n    this.extraTextOnlyLyricIndex = 0;\n\n    if (width > 0) this.staffRight = width;\n    else this.staffRight = Infinity; // no limit to staff size\n\n    // If this is the first chant line, then we have to make room for a\n    // drop cap and/or annotation, if present\n    if (this.notationsStartIndex === 0) {\n      var padding = 0;\n\n      if (this.score.dropCap !== null)\n        padding =\n          this.score.dropCap.bounds.width + this.score.dropCap.padding * 2;\n\n      if (\n        this.score.annotation !== null &&\n        (!this.score.mergeAnnotationWithTextLeft || this.score.dropCap)\n      )\n        padding = Math.max(\n          padding,\n          this.score.annotation.bounds.width + this.score.annotation.padding * 2\n        );\n\n      this.staffLeft += padding;\n      if (this.score.dropCap !== null)\n        this.paddingLeft = (padding - this.score.dropCap.bounds.width) / 2;\n    } else {\n      prev = notations[newElementStart - 1];\n      if (\n        prev.constructor === DoubleBar &&\n        prev.hasLyrics() &&\n        (prev.lyrics.length > 1 || !prev.lyrics[0].text.match(/^(i\\.?)+j\\.?/))\n      ) {\n        beginningLyrics = prev.lyrics.map(function(lyric) {\n          var newLyric = new Lyric(\n            ctxt,\n            lyric.originalText,\n            lyric.lyricType,\n            lyric.notation,\n            lyric.notations,\n            lyric.sourceIndex\n          );\n          newLyric.elidesToNext = lyric.elidesToNext;\n          // Hide the original lyric by setting its bounds.y to an extremely high number.\n          // If the chant is re-laid out, this value will be recalculated so that it won't stay hidden.\n          lyric.bounds.y = Number.MAX_SAFE_INTEGER;\n          return newLyric;\n        });\n        var minX = beginningLyrics\n          .map(function(l) {\n            return l.bounds.x;\n          })\n          .reduce(function(a, b) {\n            return a < b ? a : b;\n          });\n        beginningLyrics.forEach(function(l) {\n          l.bounds.x -= minX;\n        });\n      }\n    }\n\n    // set up the clef...\n    // if the first notation on the line is a starting clef, then we treat it a little differently...\n    // the clef becomes this line's starting clef and we skip over the clef in the notations array\n    if (notations.length && notations[newElementStart].isClef) {\n      ctxt.activeClef = notations[newElementStart];\n      newElementStart++;\n      this.notationsStartIndex++;\n    }\n\n    // make a copy for this line to use at the beginning\n    this.startingClef = ctxt.activeClef.clone();\n    this.startingClef.performLayout(ctxt);\n    this.startingClef.bounds.x = this.staffLeft;\n\n    var curr = this.startingClef;\n\n    if (beginningLyrics) {\n      LyricArray.setNotation(beginningLyrics, curr);\n    }\n\n    // estimate how much space we have available to us\n    var rightNotationBoundary =\n      this.staffRight - Glyphs.CustosLong.bounds.width * ctxt.glyphScaling; // possible custos on the line\n    var lastTranslationTextWithEndNeume = null;\n\n    // iterate through the notations, fittng what we can on this line\n    var i,\n      j,\n      lastNotationIndex = notations.length - 1;\n\n    if (curr.hasLyrics()) LyricArray.mergeIn(this.lastLyrics, curr.lyrics);\n\n    // if we already have a start brace on the context, we must be continuing it from the previous system.\n    if (ctxt.lastStartBrace && !ctxt.lastStartBrace.note) {\n      ctxt.lastStartBrace.note = this.startingClef;\n    }\n    var lastLyricsBeforeTextOnly;\n    var textOnlyStartIndex;\n\n    for (i = newElementStart; i <= lastNotationIndex; i++) {\n      prev = curr;\n      if (curr.constructor !== TextOnly) prevNeume = curr;\n\n      curr = notations[i];\n\n      var actualRightBoundary;\n      if (\n        i === lastNotationIndex ||\n        curr.constructor === Custos ||\n        (prev.constructor === Custos && curr.isDivider) ||\n        (curr.constructor === ChantLineBreak &&\n          prevNeume.constructor === Custos)\n      ) {\n        // on the last notation of the score, we don't need a custos or trailing space, so we use staffRight as the\n        // right boundary.\n        // Also, if the current notation is a divider and the previous was a custos, we don't need extra space\n        // because if the following notation won't fit, we can switch the order and use the custos as the end-of-the-line custos\n        // Ditto in the case of the current element being a chant line break and the previous neume a custos, because that custos will become our end-of-line custos\n        actualRightBoundary = this.staffRight;\n      } else if (i === lastNotationIndex - 1) {\n        // on the penultimate notation, make sure there is at least enough room for whichever takes up less space,\n        // between the final notation and a custos:\n        actualRightBoundary = Math.max(\n          rightNotationBoundary,\n          this.staffRight - notations[lastNotationIndex].bounds.width\n        );\n      } else {\n        // Otherwise, we use rightNotationBoundary, which leaves room for a custos...\n        actualRightBoundary = rightNotationBoundary;\n      }\n\n      // First check if we're already beyond the rightNotationBoundary (due to condensing that hasn't yet happened) and have a good element to end with\n      // but if we have 2 or fewer elements, or if the current element is a line break or a custos, we'll go ahead and try for them anyway.\n      var forceBreak =\n        !curr.isDivider &&\n        curr.constructor !== ChantLineBreak &&\n        curr.constructor !== Custos &&\n        !(\n          curr.constructor === TextOnly &&\n          curr.hasLyrics() &&\n          /^[*†]$/.test(curr.lyrics[0].text)\n        ) &&\n        lastNotationIndex - i > 1 &&\n        !prevNeume.keepWithNext &&\n        prevNeume.bounds.right() >= rightNotationBoundary;\n\n      // also force a break if we've run into extra TextOnly elements, but the current notation is not a TextOnly and has lyrics\n      forceBreak =\n        forceBreak ||\n        (this.extraTextOnlyIndex !== null &&\n          curr.constructor !== TextOnly &&\n          curr.constructor !== ChantLineBreak &&\n          curr.constructor !== Custos &&\n          curr.hasLyrics());\n\n      if (curr instanceof TextOnly && prev === prevNeume) {\n        lastLyricsBeforeTextOnly = this.lastLyrics.slice();\n        textOnlyStartIndex = i;\n      }\n      if (\n        curr instanceof TextOnly &&\n        notations[textOnlyStartIndex] &&\n        !notations[textOnlyStartIndex].hasLyrics()\n      ) {\n        // we want textOnlyStartIndex to be the first TextOnly that actually has lyrics,\n        // so if the current \"textOnlyStart\" element does not have lyrics, and we have another textOnly\n        // that does have lyrics, we will use it instead\n        textOnlyStartIndex = i;\n      }\n\n      if (curr.hasLyrics() && curr.lyrics[0].needsLayout) {\n        curr.lyrics[0].recalculateMetrics(ctxt);\n      }\n\n      // try to fit the curr element on this line.\n      // if it doesn't fit, we finish up here.\n      var fitsOnLine =\n        !forceBreak &&\n        this.positionNotationElement(\n          ctxt,\n          this.lastLyrics,\n          prevNeume,\n          curr,\n          actualRightBoundary,\n          this.extraTextOnlyIndex ? [] : condensableSpaces // no spaces are condensable once we are on extra text only lyrics\n        );\n      var candidateForExtraTextOnlyLine =\n        ctxt.useExtraTextOnly &&\n        curr.constructor === TextOnly &&\n        LyricArray.hasOnlyOneLyric(curr.lyrics) &&\n        (fitsOnLine === false || this.extraTextOnlyIndex !== null);\n      var extraTextOnlyLyricIndex;\n      if (candidateForExtraTextOnlyLine && this.extraTextOnlyIndex === null) {\n        // check to make sure there is enough text to put on the text only line:\n        extraTextOnlyLyricIndex = LyricArray.indexOfLyric(curr.lyrics);\n        if (textOnlyStartIndex === i) {\n          var currentLyric = notations[i].lyrics[extraTextOnlyLyricIndex].text;\n          if (currentLyric.length <= 1) {\n            var nextNotation = notations[i + 1];\n            candidateForExtraTextOnlyLine =\n              nextNotation &&\n              nextNotation.constructor === TextOnly &&\n              nextNotation.lyrics[extraTextOnlyLyricIndex] &&\n              nextNotation.lyrics[extraTextOnlyLyricIndex].text.length > 0;\n          }\n        }\n      }\n      if (candidateForExtraTextOnlyLine) {\n        // a special case for TextOnly elements that don't fit on the line: since they don't have neumes associated with them, we can place this\n        // and any additional TextOnly elements just below the current lyric lines, but we can only do this if the TextOnly elements have only one\n        // line of lyrics associated with them.\n        var firstOnLine;\n        extraTextOnlyLyricIndex = this.extraTextOnlyLyricIndex;\n        if (\n          this.extraTextOnlyIndex === null &&\n          notations[textOnlyStartIndex].lyrics.length\n        ) {\n          if (\n            textOnlyStartIndex === this.notationsStartIndex ||\n            !ctxt.startExtraTextOnlyFromFirst\n          ) {\n            textOnlyStartIndex = i;\n            let lastNotationWithLyrics = notations\n              .slice(this.notationsStartIndex, i)\n              .reverse()\n              .find(notation => notation.hasLyrics());\n            lastLyricsBeforeTextOnly =\n              (lastNotationWithLyrics &&\n                lastNotationWithLyrics.lyrics.slice()) ||\n              [];\n          }\n          // go back to the first in this string of consecutive TextOnly elements.\n          this.extraTextOnlyIndex = textOnlyStartIndex;\n          extraTextOnlyLyricIndex = this.extraTextOnlyLyricIndex = LyricArray.indexOfLyric(\n            curr.lyrics\n          );\n          this.lastLyricsBeforeTextOnly = lastLyricsBeforeTextOnly;\n          this.lastLyrics = [];\n          i = textOnlyStartIndex - 1;\n          this.numNotationsOnLine =\n            textOnlyStartIndex - this.notationsStartIndex;\n          continue;\n        }\n        delete curr.lyrics[extraTextOnlyLyricIndex].lineWidth;\n        if (!fitsOnLine || i === this.extraTextOnlyIndex) {\n          curr.bounds.x = curr.lyrics[extraTextOnlyLyricIndex].origin.x;\n          let lastLyricRight = ctxt.startExtraTextOnlyFromFirst\n            ? LyricArray.getRight(this.lastLyrics) +\n              (ctxt.minLyricWordSpacing || 0)\n            : 0;\n          curr.lyrics[extraTextOnlyLyricIndex].setMaxWidth(\n            ctxt,\n            this.staffRight,\n            this.staffRight - lastLyricRight\n          );\n          firstOnLine = curr;\n        }\n        if (firstOnLine)\n          firstOnLine.lyrics[extraTextOnlyLyricIndex].lineWidth = curr.lyrics[\n            extraTextOnlyLyricIndex\n          ].getRight();\n      } else if (fitsOnLine === false) {\n        // first check for elements that cannot begin a system: dividers and custodes\n        while (\n          this.numNotationsOnLine > 1 &&\n          (curr.isDivider || curr.constructor === Custos)\n        ) {\n          curr = notations[--i];\n          this.numNotationsOnLine--;\n        }\n\n        if (lastTranslationTextWithEndNeume) {\n          // console.info(notations[i - 1], lastTranslationTextWithEndNeume);\n          // TODO?: need to go back to before the last translation text start:\n        }\n\n        // check if the prev elements want to be kept with this one\n        for (j = i - 1; j > this.notationsStartIndex; j--) {\n          var cne = notations[j];\n          curr = notations[j + 1];\n\n          // curr is the first notation on the next line\n          // cne is the last notation on this line\n\n          if (cne.firstWithNoWidth) {\n            this.numNotationsOnLine--;\n            continue;\n          }\n\n          // don't let a line break occur in the middle of a translation\n          if (lastTranslationTextWithEndNeume) {\n            this.numNotationsOnLine--;\n            if (cne === lastTranslationTextWithEndNeume) {\n              lastTranslationTextWithEndNeume = null;\n            }\n            continue;\n          }\n\n          // force any notations starting with a quilisma or inclinatum (diamond) to be kept with the previous notation:\n          if (\n            curr &&\n            curr.notes &&\n            (curr.notes[0].shape === NoteShape.Quilisma ||\n              curr.notes[0].shape === NoteShape.Inclinatum)\n          ) {\n            this.numNotationsOnLine--;\n            continue;\n          }\n\n          // if the line break is allowed (cne.allowLineBreakBeforeNext), keep this number of notations around so we can check during justification\n          // whether there would be too much space introduced between\n          if (cne.keepWithNext === true) {\n            if (cne.allowLineBreakBeforeNext && !this.maxNumNotationsOnLine)\n              this.maxNumNotationsOnLine = this.numNotationsOnLine;\n            this.numNotationsOnLine--;\n          } else break;\n        }\n\n        // if for some reason not a single notation can fit on the line, we'd better put it on anyway, to avoid an infinite loop:\n        if (this.numNotationsOnLine === 0) this.numNotationsOnLine = 1;\n\n        // determine the neumes we can space apart, if we do end up justifying\n        curr = this.findNeumesToJustify(prevLyrics);\n\n        this.lastLyrics = prevLyrics;\n        if (this.maxNumNotationsOnLine) {\n          // Check whether we should squeeze some extra notations on the line to avoid too much space after justification:\n          // Check how much space we would have without the extra notations\n          var extraSpace = this.getWhitespaceOnRight(ctxt);\n          if (\n            extraSpace / this.toJustify.length >\n            ctxt.staffInterval * ctxt.maxExtraSpaceInStaffIntervals\n          ) {\n            LyricArray.mergeInArray(\n              prevLyrics,\n              notations.slice(\n                this.notationsStartIndex + this.numNotationsOnLine,\n                this.notationsStartIndex + this.maxNumNotationsOnLine\n              )\n            );\n            this.numNotationsOnLine = this.maxNumNotationsOnLine;\n            delete this.maxNumNotationsOnLine;\n          }\n        }\n\n        // if the next line begins with a fresh word, than there can be extra space between the last notation on this line and the custos:\n        let next = this.score.notations[\n          this.extraTextOnlyIndex === null\n            ? this.notationsStartIndex + this.numNotationsOnLine\n            : this.extraTextOnlyIndex\n        ];\n        if (\n          next &&\n          next.hasLyrics() &&\n          (next.lyrics[0].lyricType === LyricType.BeginningSyllable ||\n            next.lyrics[0].lyricType === LyricType.SingleSyllable)\n        ) {\n          this.toJustify.push(this.custos);\n        }\n\n        if (\n          j >= 1 &&\n          notations[j].isDivider &&\n          notations[j - 1].constructor === Custos\n        ) {\n          // reverse the order: put the divider first, and end the line with the custos.\n          prevLyrics = [];\n          for (i = j - 2; i >= this.notationsStartIndex; i--) {\n            if (notations[i].hasLyrics()) {\n              LyricArray.mergeIn(prevLyrics, notations[i].lyrics);\n              break;\n            }\n          }\n          // remove the custos and divider from the condensable spaces list, before adding the divider back, when repositioning it.\n          condensableSpaces.sum -= condensableSpaces.pop().condensable;\n          condensableSpaces.sum -= condensableSpaces.pop().condensable;\n          this.positionNotationElement(\n            ctxt,\n            prevLyrics,\n            notations[j - 2],\n            notations[j],\n            this.staffRight,\n            condensableSpaces\n          );\n          this.custos = notations[j - 1];\n          this.custos.bounds.x =\n            this.staffRight -\n            this.custos.bounds.width -\n            this.custos.leadingSpace;\n        }\n\n        // we are at the end of the line!\n        break;\n      }\n\n      if (curr.hasLyrics()) LyricArray.mergeIn(this.lastLyrics, curr.lyrics);\n\n      if (\n        lastTranslationTextWithEndNeume &&\n        curr === lastTranslationTextWithEndNeume.translationText[0].endNeume\n      ) {\n        lastTranslationTextWithEndNeume = null;\n      } else if (\n        curr.translationText &&\n        curr.translationText.length &&\n        curr.translationText[0].endNeume\n      ) {\n        lastTranslationTextWithEndNeume = curr;\n      }\n\n      curr.line = this;\n      this.numNotationsOnLine++;\n\n      if (curr.isClef) ctxt.activeClef = curr;\n\n      // line breaks are a special case indicating to stop processing here\n      if (curr.constructor === ChantLineBreak && width > 0) {\n        this.justify =\n          curr.justify ||\n          this.extraTextOnlyIndex !== null ||\n          this.getWhitespaceOnRight(ctxt) < 0;\n        if (this.justify) this.findNeumesToJustify(prevLyrics);\n        break;\n      }\n\n      if (curr.constructor === Custos) {\n        this.custos = curr;\n      } else if (curr.isNeume) {\n        this.custos = null;\n      }\n    }\n\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine - 1;\n    var last = notations[lastIndex] || {};\n    while (\n      lastIndex > 0 &&\n      (last.constructor === ChantLineBreak ||\n        last.constructor === Custos ||\n        last.constructor === TextOnly)\n    ) {\n      last = notations[--lastIndex];\n    }\n    var isLastLine =\n      this.notationsStartIndex + this.numNotationsOnLine === notations.length;\n    if (\n      (this.justify && this.extraTextOnlyIndex !== null) ||\n      (width > 0 && isLastLine)\n    ) {\n      // this is the last chant line, or it has extra TextOnly elements at the end\n      if (!this.toJustify) this.findNeumesToJustify(prevLyrics);\n      this.justify =\n        (!isLastLine || last.isDivider) &&\n        this.getWhitespaceOnRight(ctxt) / (this.toJustify.length || 1) <=\n          ctxt.staffInterval * ctxt.maxExtraSpaceInStaffIntervals;\n    }\n\n    if (!this.custos) {\n      // create the automatic custos at the end of the line if there are neumes left in the notations\n      for (\n        i = this.notationsStartIndex + this.numNotationsOnLine;\n        i < notations.length;\n        i++\n      ) {\n        var notation = notations[i];\n\n        if (notation.isNeume) {\n          this.custos = new Custos(true);\n          ctxt.currNotationIndex = i - 1; // make sure the context knows where the custos is\n          this.custos.performLayout(ctxt);\n\n          if (this.justify) {\n            // Put the custos at the very end of the line\n            this.custos.bounds.x =\n              this.staffRight -\n              this.custos.bounds.width -\n              this.custos.leadingSpace;\n          } else {\n            this.custos.bounds.x =\n              prevNeume.bounds.right() + prevNeume.calculatedTrailingSpace;\n          }\n          // nothing more to see here...\n          break;\n        }\n      }\n    }\n\n    if (this.lastLyricsBeforeTextOnly) {\n      this.lastLyrics = this.lastLyricsBeforeTextOnly;\n      delete this.lastLyricsBeforeTextOnly;\n    }\n\n    // find the final lyric and mark it as connecting if needed.\n    if (width > 0) {\n      var whitespace = this.getWhitespaceOnRight();\n      var rightEdge = this.staffRight;\n      if (whitespace < 0) {\n        rightEdge -= whitespace;\n      }\n    }\n    i = 0;\n    while (this.lastLyrics && this.lastLyrics[i]) {\n      let lyrics = this.lastLyrics[i];\n      if (lyrics.allowsConnector()) {\n        lyrics.setNeedsConnector(true, 0);\n        if (width > 0 && ctxt.minLyricWordSpacing < ctxt.hyphenWidth) {\n          whitespace = rightEdge - lyrics.getRight();\n          // shrink the hyphen if we are already out of whitespace or if we would be if we used a regular hyphen:\n          if (whitespace < 0) {\n            var minHyphenWidth = Math.max(\n              ctxt.hyphenWidth + whitespace,\n              this.lastLyrics.length > 1\n                ? ctxt.intraNeumeSpacing\n                : ctxt.minLyricWordSpacing\n            );\n            // we might not need to shift the syllable, but we do want to shrink the hyphen...\n            lyrics.setConnectorWidth(minHyphenWidth);\n          }\n        }\n      }\n      ++i;\n    }\n\n    // if the provided width is less than zero, then set the width of the line\n    // based on the last notation\n    if (width <= 0) {\n      this.staffRight = notations[\n        this.notationsStartIndex + this.numNotationsOnLine - 1\n      ].bounds.right();\n      this.justify = false;\n    }\n\n    // Justify the line if we need to\n    this.justifyElements(ctxt, this.justify, condensableSpaces);\n\n    this.centerDividers();\n\n    this.finishLayout(ctxt);\n  }\n\n  centerDividers() {\n    var lastIndex =\n        this.extraTextOnlyIndex === null\n          ? this.notationsStartIndex + this.numNotationsOnLine\n          : this.extraTextOnlyIndex,\n      curr;\n    for (var i = this.notationsStartIndex; i < lastIndex; i++) {\n      curr = this.score.notations[i];\n\n      if (curr && curr.isDivider) {\n        var j = 1;\n        var prev = this.score.notations[i - 1];\n        var next =\n          i + 1 === lastIndex ? this.custos : this.score.notations[i + 1];\n        if (prev === next && next === this.custos) {\n          prev = this.score.notations[i - 2];\n        }\n        if (prev && next) {\n          //if (prev instanceof TextOnly || next instanceof TextOnly) continue;\n          var oldBoundsX = curr.bounds.x;\n          var leftPoint =\n              prev instanceof TextOnly && prev.hasLyrics()\n                ? prev.lyrics[0].getRight()\n                : prev.bounds.right(),\n            rightPoint =\n              next instanceof TextOnly && next.hasLyrics()\n                ? next.lyrics[0].getLeft()\n                : next.bounds.x;\n          curr.bounds.x = (leftPoint + rightPoint - curr.bounds.width) / 2;\n          if (curr.hasLyrics()) {\n            var offset = oldBoundsX - curr.bounds.x;\n            for (j = curr.lyrics.length - 1; j >= 0; j--) {\n              curr.lyrics[j].bounds.x += offset;\n              curr.lyrics[j].needsLayout = true;\n            }\n          }\n        } else if (\n          i === lastIndex - 1 &&\n          this.justify &&\n          (curr.constructor === DoubleBar || curr.constructor === FullBar)\n        ) {\n          curr.bounds.x = this.staffRight - curr.bounds.width;\n        }\n      }\n    }\n  }\n\n  findNeumesToJustify(prevLyrics) {\n    this.toJustify = [];\n    var prev,\n      curr = null,\n      next = null,\n      nextOrCurr = null,\n      lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n    for (var i = this.notationsStartIndex; i < lastIndex; i++) {\n      prev = nextOrCurr;\n      curr = this.score.notations[i];\n      next = curr.isAccidental && this.score.notations[++i];\n      nextOrCurr = next || curr;\n      var hasLyrics = nextOrCurr.hasLyrics();\n\n      if (!curr || !prev) continue;\n\n      if (\n        this.extraTextOnlyIndex !== null &&\n        i >= this.extraTextOnlyIndex &&\n        curr.constructor === TextOnly\n      )\n        continue;\n\n      if (prev !== null) {\n        LyricArray.mergeIn(prevLyrics, prev.lyrics);\n        if (prev.keepWithNext === true) continue;\n      }\n\n      if (\n        !curr.isDivider &&\n        prevLyrics.length &&\n        prevLyrics[0].allowsConnector() &&\n        hasLyrics\n      )\n        continue;\n\n      if (nextOrCurr.constructor === ChantLineBreak) continue;\n\n      if (nextOrCurr === this.custos && !hasLyrics) continue;\n\n      if (i === 0 && this.score.useDropCap && hasLyrics) continue;\n\n      // otherwise, we can add space before this element\n      this.toJustify.push(curr);\n    }\n    if (nextOrCurr !== null) LyricArray.mergeIn(prevLyrics, nextOrCurr.lyrics);\n    return nextOrCurr;\n  }\n\n  getWhitespaceOnRight(ctxt) {\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n    var last = notations[lastIndex - 1];\n    if (this.extraTextOnlyIndex !== null && last.constructor === TextOnly) {\n      lastIndex = this.extraTextOnlyIndex;\n      last = notations[lastIndex - 1];\n    }\n    var lastRightNeume = last\n      ? last.bounds.right() + last.calculatedTrailingSpace\n      : 0;\n    var lastLyrics = this.lastLyricsBeforeTextOnly || this.lastLyrics;\n    var lastRightLyric = lastLyrics.length\n      ? LyricArray.getRight(lastLyrics)\n      : 0;\n\n    if (this.custos) {\n      lastRightNeume += this.custos.bounds.width + this.custos.leadingSpace;\n      if (this.custos.hasLyrics()) {\n        lastRightLyric = LyricArray.getRight(this.custos.lyrics);\n      }\n    } else if (ctxt && lastIndex < notations.length) {\n      lastRightNeume += Glyphs.CustosLong.bounds.width * ctxt.glyphScaling;\n    }\n    return this.staffRight - Math.max(lastRightLyric, lastRightNeume);\n  }\n\n  justifyElements(ctxt, doJustify, condensableSpaces) {\n    var i;\n    var toJustify = this.toJustify || [];\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // if it wasn't an ideal line break, and the last note is further from the custos than it would have been from its next punctum,\n    // move the custos over.\n    // We do this first so that if it opens up any new whitespace, that gets accounted for when we do the justification\n    var lastNotation =\n      notations[this.notationsStartIndex + this.numNotationsOnLine - 1];\n    var extraSpaceBeforeCustos =\n      this.staffRight < Infinity &&\n      this.custos &&\n      lastNotation.keepWithNext &&\n      this.custos.bounds.x -\n        lastNotation.bounds.right() -\n        lastNotation.calculatedTrailingSpace;\n    if (extraSpaceBeforeCustos > 0) {\n      // first, shrink the hyphen(s) if applicable, to move the neumes closer to the custos:\n      i = 0;\n      while (this.lastLyrics && this.lastLyrics[i]) {\n        let lyrics = this.lastLyrics[i];\n        if (lyrics.allowsConnector()) {\n          var connectorWidth = lyrics.getConnectorWidth();\n          if (ctxt.minLyricWordSpacing < connectorWidth) {\n            var minHyphenWidth = Math.max(\n              connectorWidth - extraSpaceBeforeCustos,\n              this.lastLyrics.length > 1\n                ? ctxt.intraNeumeSpacing\n                : ctxt.minLyricWordSpacing\n            );\n            // we might not need to shift the syllable, but we do want to shrink the hyphen...\n            lyrics.setConnectorWidth(minHyphenWidth);\n          }\n        }\n        ++i;\n      }\n      this.custos.bounds.x =\n        lastNotation.bounds.right() + lastNotation.calculatedTrailingSpace;\n    }\n\n    // first step of justification is to determine how much space we have to use up\n    var extraSpace = this.getWhitespaceOnRight();\n\n    if (\n      Math.abs(extraSpace) < 0.5 ||\n      (extraSpace > 0 && ((doJustify && toJustify.length === 0) || !doJustify))\n    )\n      return;\n\n    this.condensableSpaces = condensableSpaces;\n\n    var curr, prev;\n    var offset = 0;\n    var increment = extraSpace / toJustify.length;\n    var multiplier = 0;\n    var toJustifyIndex = 0;\n    if (extraSpace < 0) {\n      toJustify = condensableSpaces.filter(s => s.condensable > 0);\n      multiplier = extraSpace / condensableSpaces.sum;\n      increment = 0;\n    }\n    var nextToJustify = toJustify[toJustifyIndex++];\n    var incrementOffsetAtNextChance = false;\n    for (i = this.notationsStartIndex; i < lastIndex; i++) {\n      prev = curr;\n      curr = notations[i];\n\n      if (\n        this.extraTextOnlyIndex !== null &&\n        i >= this.extraTextOnlyIndex &&\n        curr.constructor === TextOnly\n      ) {\n        continue;\n      }\n\n      if (!multiplier && curr === this.custos) {\n        if (curr.hasLyrics()) {\n          curr.bounds.x = Math.min(\n            curr.bounds.x +\n              (this.staffRight - LyricArray.getRight(curr.lyrics)),\n            this.staffRight - curr.bounds.width\n          );\n          offset += increment;\n        } else {\n          curr.bounds.x = Math.min(\n            curr.bounds.x + offset,\n            this.staffRight - curr.bounds.width\n          );\n        }\n        continue;\n      }\n\n      if (multiplier) {\n        if (nextToJustify && nextToJustify.notation === curr) {\n          offset += multiplier * nextToJustify.condensable;\n          nextToJustify = toJustify[toJustifyIndex++];\n        }\n      } else if (nextToJustify === curr) {\n        if (prev.hasNoWidth) {\n          incrementOffsetAtNextChance = true;\n        } else {\n          offset += increment;\n        }\n        nextToJustify = toJustify[toJustifyIndex++];\n      } else if (incrementOffsetAtNextChance && !prev.hasNoWidth) {\n        incrementOffsetAtNextChance = false;\n        offset += increment;\n      }\n\n      curr.bounds.x += offset;\n    }\n\n    if (extraSpaceBeforeCustos > 0) {\n      this.custos.bounds.x =\n        lastNotation.bounds.right() + lastNotation.calculatedTrailingSpace;\n    }\n  }\n\n  handleEndBrace(ctxt, note, i) {\n    var startBrace = ctxt.lastStartBrace;\n    if (!startBrace) return;\n    // calculate the y value of the brace by iterating over all notations\n    // under/over the brace.\n    var y;\n    var k = startBrace.notationIndex;\n    var notations = this.score.notations;\n    var dy = ctxt.intraNeumeSpacing / 2; // some safe space between brace and notes.\n    var startNote = startBrace.note;\n\n    if (startBrace.isAbove) {\n      y = Math.min(\n        ctxt.calculateHeightFromStaffPosition(4),\n        ...[startNote, note]\n          .concat(notations.slice(k, i + 1))\n          .map(n => n.bounds.y - dy)\n      );\n    } else {\n      y = Math.max(\n        ctxt.calculateHeightFromStaffPosition(-4),\n        ...[startNote, note]\n          .concat(notations.slice(k, i + 1))\n          .map(n => n.bounds.bottom() + dy)\n      );\n    }\n\n    var addAcuteAccent = false;\n\n    if (startBrace.shape === BraceShape.RoundBrace) {\n      this.braces.push(\n        new RoundBraceVisualizer(\n          ctxt,\n          startBrace.getAttachmentX(startNote),\n          note.braceEnd.getAttachmentX(note),\n          y,\n          startBrace.isAbove\n        )\n      );\n    } else {\n      if (startBrace.shape === BraceShape.AccentedCurlyBrace)\n        addAcuteAccent = true;\n\n      this.braces.push(\n        new CurlyBraceVisualizer(\n          ctxt,\n          startBrace.getAttachmentX(startNote),\n          note.braceEnd.getAttachmentX(note),\n          y,\n          startBrace.isAbove,\n          addAcuteAccent\n        )\n      );\n    }\n\n    delete ctxt.lastStartBrace;\n  }\n\n  finishLayout(ctxt) {\n    this.ledgerLines = []; // clear any existing ledger lines\n\n    var notations = this.score.notations;\n    var lastIndex = this.notationsStartIndex + this.numNotationsOnLine;\n\n    // an element needs to have a staffPosition property, as well as the standard\n    // bounds property. so it could be a note, or it could be a custos\n    // offsetX can be used to add to the position info for the element,\n    // useful in the case of notes.\n    var processElementForLedgerLine = (\n      element,\n      endElem = element,\n      staffPosition = element.staffPosition,\n      offsetX = element.neume ? element.neume.bounds.x : 0\n    ) => {\n      // do we need a ledger line for this note?\n\n      if (staffPosition >= 5 || staffPosition <= -5) {\n        var x1 = offsetX + element.bounds.x - ctxt.intraNeumeSpacing;\n        var x2 =\n          offsetX +\n          endElem.bounds.x +\n          endElem.bounds.width +\n          ctxt.intraNeumeSpacing;\n\n        // round the staffPosition to the nearest line\n        if (staffPosition > 0)\n          staffPosition = staffPosition - ((staffPosition - 1) % 2);\n        else staffPosition = staffPosition - ((staffPosition + 1) % 2);\n\n        // if we have a ledger line close by, then average out the distance between the two\n        var minLedgerSeparation = ctxt.staffInterval * ctxt.minLedgerSeparation;\n\n        if (\n          this.ledgerLines.length > 0 &&\n          this.ledgerLines[this.ledgerLines.length - 1].x2 +\n            minLedgerSeparation >=\n            x1\n        ) {\n          // average out the distance\n          var half =\n            (x1 - this.ledgerLines[this.ledgerLines.length - 1].x2) / 2;\n          this.ledgerLines[this.ledgerLines.length - 1].x2 += half;\n          x1 -= half;\n        }\n\n        // never let a ledger line extend past the staff width\n        if (x2 > this.staffRight) x2 = this.staffRight;\n\n        // finally, add the ledger line\n        this.ledgerLines.push({\n          x1: x1,\n          x2: x2,\n          staffPosition: staffPosition\n        });\n      }\n    };\n\n    var episemata = []; // keep track of episemata in case we can connect some\n    var startBrace = null;\n    var minY = Number.MAX_VALUE,\n      maxY = Number.MIN_VALUE; // for braces\n\n    var positionNonLyricText = (text, neume, rightX) => {\n      text.setMaxWidth(ctxt, this.staffRight);\n      //text.bounds.x = neume.hasLyrics()? Math.min(...neume.lyrics.map(l => l.bounds.x)) : 0;\n      text.bounds.x = 0;\n      if (rightX)\n        text.bounds.x = (text.bounds.x + rightX - text.bounds.width) / 2;\n      var beyondStaffRight =\n        neume.bounds.x + text.bounds.right() - this.staffRight;\n      if (beyondStaffRight > 0) {\n        text.bounds.x -= beyondStaffRight;\n      }\n      if (neume.bounds.x + text.bounds.x < 0) {\n        text.bounds.x = -neume.bounds.x;\n      }\n    };\n\n    // make a final pass over all of the notes to add any necessary\n    // ledger lines and to smooth out episemata\n    for (var i = this.notationsStartIndex; i < lastIndex; i++) {\n      var neume = notations[i];\n\n      minY = Math.min(minY, neume.bounds.y);\n      maxY = Math.max(maxY, neume.bounds.bottom());\n\n      if (neume.constructor === Custos) {\n        processElementForLedgerLine(neume);\n        continue;\n      }\n\n      // if the AboveLinesText would extend beyond the right edge of the staff, right align it instead\n      if (neume.alText) {\n        for (var j = 0; j < neume.alText.length; j++) {\n          positionNonLyricText(neume.alText[j], neume);\n        }\n      }\n\n      // set up horizontal position of translations\n      if (neume.translationText) {\n        for (j = 0; j < neume.translationText.length; j++) {\n          var text = neume.translationText[j];\n          if (text.endNeume) {\n            var rightX = text.endNeume.hasLyrics()\n              ? text.endNeume.bounds.x +\n                Math.max(...text.endNeume.lyrics.map(l => l.bounds.right()))\n              : text.endNeume.bounds.right();\n            rightX -= neume.bounds.x;\n            positionNonLyricText(text, neume, rightX);\n          } else {\n            positionNonLyricText(text, neume);\n          }\n        }\n      }\n\n      // if it's not a neume then just skip here\n      if (!neume.isNeume) continue;\n\n      for (j = 0; j < neume.ledgerLines.length; j++) {\n        var ll = neume.ledgerLines[j];\n        processElementForLedgerLine(ll.element, ll.endElem, ll.staffPosition);\n      }\n\n      for (j = 0; j < neume.notes.length; j++) {\n        var k,\n          note = neume.notes[j];\n\n        // blend episemata as we're able\n        if (note.episemata.length === 0) episemata = [];\n        for (k = 0; k < note.episemata.length; k++) {\n          var episema = note.episemata[k];\n\n          var spaceBetweenEpisemata = 0;\n\n          // calculate the distance between the last episemata and this one...\n          // lots of code for a simple: currEpisemata.left - prevEpisemata.right\n          if (episemata.length > 0)\n            spaceBetweenEpisemata =\n              neume.bounds.x +\n              episema.bounds.x -\n              (episemata[episemata.length - 1].note.neume.bounds.x +\n                episemata[episemata.length - 1].bounds.right());\n\n          // we try to blend the episema if we're able.\n          if (\n            episemata.length === 0 ||\n            episemata[episemata.length - 1].positionHint !==\n              episema.positionHint ||\n            episemata[episemata.length - 1].terminating === true ||\n            episemata[episemata.length - 1].alignment ===\n              HorizontalEpisemaAlignment.Left ||\n            episemata[episemata.length - 1].alignment ===\n              HorizontalEpisemaAlignment.Center ||\n            episema.alignment === HorizontalEpisemaAlignment.Right ||\n            episema.alignment === HorizontalEpisemaAlignment.Center ||\n            (spaceBetweenEpisemata > ctxt.intraNeumeSpacing * 2 &&\n              note.glyphVisualizer.glyphCode !== GlyphCode.None)\n          ) {\n            // start a new set of episemata to potentially blend\n            episemata = [episema];\n          } else {\n            // blend all previous with this one\n            var newY;\n\n            if (episema.positionHint === MarkingPositionHint.Below)\n              newY = Math.max(\n                episema.bounds.y,\n                episemata[episemata.length - 1].bounds.y\n              );\n            else\n              newY = Math.min(\n                episema.bounds.y,\n                episemata[episemata.length - 1].bounds.y\n              );\n\n            if (episema.bounds.y !== newY) episema.bounds.y = newY;\n            else {\n              for (var l = 0; l < episemata.length; l++)\n                episemata[l].bounds.y = newY;\n            }\n\n            // extend the last episema to meet the new one\n            var newWidth =\n              neume.bounds.x +\n              episema.bounds.x -\n              (episemata[episemata.length - 1].note.neume.bounds.x +\n                episemata[episemata.length - 1].bounds.x);\n            if (newWidth < 0) {\n              newWidth *= -1;\n              episemata[episemata.length - 1].bounds.x -= newWidth;\n            }\n            episemata[episemata.length - 1].bounds.width = newWidth;\n\n            episemata.push(episema);\n          }\n        }\n\n        if (note.braceEnd) this.handleEndBrace(ctxt, note, i);\n\n        if (note.braceStart) {\n          ctxt.lastStartBrace = startBrace = note.braceStart;\n          startBrace.notationIndex = i;\n        }\n      }\n    }\n\n    // if we still have an active brace, that means it spands two chant lines!\n    if (startBrace !== null) {\n      if (this.custos) {\n        // if the next end brace is on the first note following the line break, simply use it with the custos\n        // Do the same if there is only an accidental between\n        // otherwise, make a new end brace to work for this one, and a new start brace for the next line.\n        var nextNotation = notations[lastIndex];\n        var nextNote = nextNotation.notes && nextNotation.notes[0];\n        var nextNotationButOne = notations[lastIndex + 1];\n        var nextNoteButOne =\n          nextNotationButOne &&\n          nextNotationButOne.notes &&\n          nextNotationButOne.notes[0];\n        var braceEnd =\n          (nextNote && nextNote.braceEnd) ||\n          (nextNotation.isAccidental &&\n            nextNoteButOne &&\n            nextNoteButOne.braceEnd);\n        if (braceEnd) {\n          this.custos.braceEnd = braceEnd;\n          this.handleEndBrace(ctxt, this.custos, i);\n        } else {\n          this.braceStart = startBrace;\n          this.custos.braceEnd = new BracePoint(\n            this.custos,\n            startBrace.isAbove,\n            startBrace.shape,\n            BraceAttachment.Right\n          );\n          this.handleEndBrace(ctxt, this.custos, i - 1);\n          ctxt.lastStartBrace = new BracePoint(\n            null,\n            startBrace.isAbove,\n            startBrace.shape,\n            BraceAttachment.Left\n          );\n          ctxt.lastStartBrace.notationIndex = i;\n        }\n      }\n    }\n\n    // don't forget to also include the final custos, which may need a ledger line too\n    if (this.custos) processElementForLedgerLine(this.custos);\n  }\n\n  // this is where the real core of positioning neumes takes place\n  // returns true if positioning was able to fit the neume before rightNotationBoundary.\n  // returns false if cannot fit before given right margin.\n  // fixme: if this returns false, shouldn't we set the connectors on prev to be activated?!\n  positionNotationElement(\n    ctxt,\n    prevLyrics,\n    prev,\n    curr,\n    rightNotationBoundary,\n    condensableSpaces = []\n  ) {\n    if (!condensableSpaces.hasOwnProperty(\"sum\")) condensableSpaces.sum = 0;\n    var i,\n      space = { notation: curr },\n      fixedX = false;\n\n    // To begin we just place the current notation right after the previous,\n    // irrespective of lyrics.\n    // But if the previous neume was part of a polyphonic \"no width\" group and the current is not, or is of a separate group,\n    // we force it to have the same x as the previous group.\n    if (\n      (!curr.hasNoWidth || curr.firstWithNoWidth === curr) &&\n      prev.firstWithNoWidth\n    ) {\n      curr.bounds.x = prev.firstWithNoWidth.bounds.x;\n      fixedX = true;\n    } else {\n      curr.bounds.x = prev.bounds.right();\n    }\n\n    if (\n      (curr.constructor === TextOnly && this.extraTextOnlyIndex === null) ||\n      (!curr.hasLyrics() && prev.calculatedTrailingSpace < 0)\n    ) {\n      // We transfer over the trailing space from the previous neume if the current neume is text only,\n      // so that the text only neume has a better chance at not needing a connector.\n      curr.calculatedTrailingSpace = prev.calculatedTrailingSpace;\n      if (curr.hasLyrics())\n        curr.calculatedTrailingSpace -= curr.lyrics[0].bounds.width;\n      if (curr.constructor === TextOnly && curr.lyrics.length === 1) {\n        curr.lyrics[0].setMaxWidth(\n          ctxt,\n          this.staffRight,\n          this.staffRight -\n            LyricArray.getRight(prevLyrics) -\n            ctxt.minLyricWordSpacing\n        );\n      }\n    } else if (!fixedX) {\n      curr.bounds.x += prev.calculatedTrailingSpace;\n    }\n\n    if (\n      curr.hasLyrics() &&\n      !prev.isDivider &&\n      !prev.isAccidental &&\n      this.numNotationsOnLine > 0 &&\n      (curr.lyrics[0].lyricType === LyricType.SingleSyllable ||\n        curr.lyrics[0].lyricType === LyricType.BeginningSyllable)\n    ) {\n      curr.bounds.x += ctxt.intraNeumeSpacing * ctxt.interVerbalMultiplier;\n    }\n    if (curr.hasNoWidth || fixedX) {\n      space.total = space.condensable = 0;\n    } else if (\n      this.extraTextOnlyIndex !== null &&\n      curr.constructor === TextOnly\n    ) {\n      curr.bounds.x = 0;\n      space.total = space.condensable = 0;\n    } else {\n      space.total = curr.bounds.x - prev.bounds.right();\n      space.condensable = space.total * ctxt.condensingTolerance;\n    }\n\n    // if the previous notation has no lyrics, then we simply make sure the\n    // current notation with lyrics is in the bounds of the line\n    if (prevLyrics.length === 0) {\n      var maxRight = curr.bounds.right() + curr.calculatedTrailingSpace;\n\n      // if the lyric left is negative, then offset the neume appropriately\n      for (i = 0; i < curr.lyrics.length; i++) {\n        let currLyric = curr.lyrics[i];\n        // we hope for the best!\n        // but always use a connector if the lyric has original text that was all used up for the drop cap.\n        let needsConnector =\n          currLyric.allowsConnector() &&\n          currLyric.dropCap &&\n          currLyric.originalText &&\n          !currLyric.text;\n        currLyric.setNeedsConnector(needsConnector);\n        let minLeft = this.staffLeft - this.paddingLeft;\n\n        if (currLyric.getLeft() < minLeft)\n          curr.bounds.x -= currLyric.getLeft() - minLeft;\n\n        space.condensable = Math.min(\n          space.condensable,\n          currLyric.getLeft() - minLeft\n        );\n        maxRight = Math.max(maxRight, currLyric.getRight());\n      }\n\n      if (\n        maxRight >\n        rightNotationBoundary + condensableSpaces.sum + space.condensable\n      )\n        return false;\n      condensableSpaces.push(space);\n      condensableSpaces.sum += space.condensable;\n      return true;\n    } else {\n      if (curr.firstOfSyllable && prevLyrics.length && !curr.hasLyrics()) {\n        curr.bounds.x = Math.max(curr.bounds.x, prevLyrics[0].getRight());\n        space.total = curr.bounds.x - prev.bounds.right();\n        space.condensable = space.total * ctxt.condensingTolerance;\n      }\n    }\n\n    // if the curr notation has no lyrics, then simply check whether there is enough room\n    if (curr.hasLyrics() === false) {\n      if (\n        curr.bounds.right() + curr.calculatedTrailingSpace >\n        rightNotationBoundary + condensableSpaces.sum + space.condensable\n      )\n        return false;\n      condensableSpaces.push(space);\n      condensableSpaces.sum += space.condensable;\n      return true;\n    }\n\n    // if we have multiple lyrics on the current or the previous notation,\n    // we will have to run several passes over each set of lyrics:\n\n    // on the first pass, we will check the absolute left-most placement of the new syllables\n    // we will make additional passes until everything is stable\n    do {\n      var hasShifted = false;\n      var atLeastOneWithoutConnector = false;\n      for (i = 0; i < curr.lyrics.length; i++) {\n        if (!curr.lyrics[i].originalText) continue;\n        var prevLyricRight = 0;\n        let condensableSpacesSincePrevLyric = [];\n        let condensableSpaceSincePrevLyric = null;\n        if (i < prevLyrics.length && prevLyrics[i]) {\n          prevLyricRight = prevLyrics[i].getRight();\n          let notationI = condensableSpaces\n            .map(s => s.notation)\n            .lastIndexOf(prevLyrics[i].notation);\n          if (notationI >= 0) {\n            condensableSpacesSincePrevLyric = condensableSpaces.slice(\n              notationI + 1\n            );\n            condensableSpacesSincePrevLyric.sum = condensableSpacesSincePrevLyric\n              .map(s => s.condensable)\n              .reduce((a, b) => a + b, 0);\n          } else {\n            condensableSpacesSincePrevLyric.sum = 0;\n          }\n        }\n\n        curr.lyrics[i].setNeedsConnector(false); // we hope for the best!\n        var currLyricLeft = curr.lyrics[i].getLeft();\n        if (!prevLyrics[i] || prevLyrics[i].allowsConnector() === false) {\n          // No connector needed, but include space between words if necessary!\n          let extraSpace = currLyricLeft - prevLyricRight - ctxt.minLyricWordSpacing;\n          if (extraSpace < 0) {\n            // push the current element over a bit.\n            let shift =\n              prevLyricRight + ctxt.minLyricWordSpacing - currLyricLeft;\n            curr.bounds.x += shift;\n            condensableSpaceSincePrevLyric = 0;\n            hasShifted = shift > 0.5;\n          } else {\n            condensableSpaceSincePrevLyric = extraSpace;\n          }\n        } else {\n          // we may need a connector yet...\n          if (\n            prevLyricRight + 0.1 >\n            currLyricLeft -\n              condensableSpacesSincePrevLyric.sum -\n              space.condensable\n          ) {\n            // in this case, the lyric elements actually overlap.\n            // so nope, no connector needed. instead, we just place the lyrics together\n            // fixme: for better text layout, we could actually use the kerning values\n            // between the prev and curr lyric elements!\n            let shift = prevLyricRight - currLyricLeft;\n            if (shift < -0.1) {\n              // in this case, the spacing needs to be condensed in the neumes since the last lyric...\n              let multiplier =\n                shift /\n                (condensableSpacesSincePrevLyric.sum + space.condensable);\n              let offset = 0;\n              condensableSpacesSincePrevLyric.forEach(s => {\n                offset += multiplier * s.condensable;\n                s.notation.bounds.x += offset;\n              });\n            }\n            curr.bounds.x += shift;\n            condensableSpaceSincePrevLyric = 0;\n            atLeastOneWithoutConnector = true;\n            hasShifted = shift > 0.5;\n          } else {\n            // bummer, looks like we couldn't merge the syllables together. Better add a connector...\n            if (ctxt.minLyricWordSpacing < ctxt.hyphenWidth) {\n              var spaceBetweenSyls = currLyricLeft - prevLyricRight;\n              if (spaceBetweenSyls < ctxt.hyphenWidth) {\n                var minHyphenWidth =\n                  prevLyrics.length > 1\n                    ? ctxt.intraNeumeSpacing\n                    : ctxt.minLyricWordSpacing;\n                // we might not need to shift the syllable, but we do want to shrink the hyphen...\n                prevLyrics[i].setConnectorWidth(\n                  Math.max(minHyphenWidth, spaceBetweenSyls)\n                );\n              }\n            }\n            prevLyrics[i].setNeedsConnector(true);\n            prevLyricRight = prevLyrics[i].getRight();\n\n            if (prevLyricRight + 0.1 > currLyricLeft) {\n              let shift = prevLyricRight - currLyricLeft;\n              curr.bounds.x += shift;\n              condensableSpaceSincePrevLyric = 0;\n              hasShifted = shift > 0.5;\n            } else {\n              condensableSpaceSincePrevLyric = currLyricLeft - prevLyricRight;\n            }\n          }\n        }\n\n        if (condensableSpaceSincePrevLyric !== null) {\n          if (\n            condensableSpaceSincePrevLyric <\n            condensableSpacesSincePrevLyric.sum + space.condensable\n          ) {\n            // reduce condensable space so that lyrics retain at least the width of a space character between words:\n            let multiplier = condensableSpaceSincePrevLyric / (condensableSpacesSincePrevLyric.sum + space.condensable);\n            space.condensable *= multiplier;\n            if (condensableSpacesSincePrevLyric.sum) {\n              condensableSpacesSincePrevLyric.forEach(space => {\n                space.condensable *= multiplier;\n              });\n              condensableSpaces.sum = condensableSpaces\n                .map(s => s.condensable)\n                .reduce((a, b) => a + b, 0);\n            }\n          }\n        }\n      }\n    } while (\n      curr.lyrics.length > 1 &&\n      hasShifted &&\n      atLeastOneWithoutConnector\n    );\n\n    for (i = Math.min(curr.lyrics.length, prevLyrics.length) - 1; i >= 0; i--) {\n      let pLyrics = prevLyrics[i];\n      if (pLyrics.needsConnector && pLyrics.connectorWidth) {\n        currLyricLeft = curr.lyrics[i].getLeft();\n        prevLyricRight = pLyrics.getRight() - pLyrics.connectorWidth;\n        spaceBetweenSyls = currLyricLeft - prevLyricRight;\n        if (spaceBetweenSyls >= ctxt.hyphenWidth) spaceBetweenSyls = 0;\n        pLyrics.setConnectorWidth(spaceBetweenSyls);\n      }\n    }\n\n    if (\n      curr.bounds.right() + curr.calculatedTrailingSpace <\n        rightNotationBoundary + condensableSpaces.sum + space.condensable &&\n      LyricArray.getRight(curr.lyrics, true) <=\n        this.staffRight + condensableSpaces.sum + space.condensable\n    ) {\n      if (prev.isAccidental) {\n        // move the previous accidental up next to the current note:\n        let shift =\n          curr.bounds.x -\n          prev.bounds.width -\n          prev.calculatedTrailingSpace -\n          prev.bounds.x;\n        prev.bounds.x += shift;\n        if (Math.abs(shift) > 0.1) {\n          let lastCondensable = condensableSpaces[condensableSpaces.length - 1];\n          condensableSpaces.sum -= lastCondensable.condensable;\n          lastCondensable.condensable = 0;\n        }\n      }\n      condensableSpaces.push(space);\n      condensableSpaces.sum += space.condensable;\n      return true;\n    }\n\n    // if we made it this far, then the element won't fit on this line.\n    return false;\n  }\n\n  /**\n   * Find the notation closest to x without going past it\n   * @param {number} x\n   */\n  bisectNotationAtX(x, useMidpoint = true) {\n    let minIndex = -1,\n      maxIndex = Math.min(this.numNotationsOnLine, Infinity),\n      curIndex = minIndex + ((maxIndex - minIndex) >> 1),\n      notations = this.score.notations.slice(\n        this.notationsStartIndex,\n        this.notationsStartIndex + this.numNotationsOnLine\n      );\n\n    while (minIndex < curIndex) {\n      let notation = notations[curIndex];\n      let notationX = notation.bounds.x;\n      if (notationX > x) {\n        maxIndex = curIndex;\n      } else {\n        minIndex = curIndex;\n      }\n      curIndex = minIndex + ((maxIndex - minIndex) >> 1);\n    }\n    let notation = notations[curIndex];\n    if (\n      useMidpoint &&\n      notation &&\n      notation.bounds.width === 0 &&\n      curIndex + 1 < notations.length\n    ) {\n      let nextNotation = notations[curIndex + 1],\n        closenessToLeft = x - notation.bounds.x,\n        closenessToRight = nextNotation.bounds.x - x;\n      if (nextNotation.bounds.width === 0 && closenessToRight < closenessToLeft)\n        ++curIndex;\n    }\n    return notations[curIndex];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.ChantLine.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport {\n  LiquescentType,\n  NoteShape,\n  NoteShapeModifiers\n} from \"./Exsurge.Chant.js\";\nimport {\n  ChantNotationElement,\n  GlyphCode,\n  MarkingPositionHint,\n  NeumeLineVisualizer,\n  VirgaLineVisualizer\n} from \"./Exsurge.Drawing.js\";\nimport { Glyphs } from \"./Exsurge.Glyphs.js\";\n\nclass NeumeBuilder {\n  constructor(ctxt, neume, startingX = 0) {\n    this.ctxt = ctxt;\n    this.neume = neume;\n    this.x = startingX;\n    this.lastNote = null;\n    this.lineIsHanging = false;\n    this.minX = 0;\n  }\n\n  // used to start a hanging line on the left of the next note\n  lineFrom(note) {\n    var previousNotation = this.ctxt.notations[this.ctxt.currNotationIndex - 1];\n    if (\n      this.x === 0 &&\n      previousNotation &&\n      previousNotation.notes &&\n      previousNotation.trailingSpace === 0\n    ) {\n      this.lastNote = previousNotation.notes.slice(-1)[0];\n      this.minX = -this.ctxt.neumeLineWeight;\n    } else {\n      this.lastNote = note;\n      this.lineIsHanging = true;\n    }\n    return this;\n  }\n\n  // add a note, with a connecting line on the left if we have one\n  noteAt(note, glyph, withLineTo = true) {\n    if (!note) throw \"NeumeBuilder.noteAt: note must be a valid note\";\n\n    if (!glyph) throw \"NeumeBuilder.noteAt: glyph must be a valid glyph code\";\n\n    note.setGlyph(this.ctxt, glyph);\n    var noteAlignsRight = note.glyphVisualizer.align === \"right\";\n\n    var needsLine =\n      withLineTo &&\n      this.lastNote !== null &&\n      (this.lineIsHanging ||\n        (this.lastNote.glyphVisualizer &&\n          this.lastNote.glyphVisualizer.align === \"right\") ||\n        Math.abs(this.lastNote.staffPosition - note.staffPosition) > 1);\n\n    if (needsLine) {\n      var line = new NeumeLineVisualizer(\n        this.ctxt,\n        this.lastNote,\n        note,\n        this.lineIsHanging\n      );\n      this.neume.addVisualizer(line);\n      line.bounds.x = Math.max(this.minX, this.x - line.bounds.width);\n\n      if (!noteAlignsRight) this.x = line.bounds.x;\n    }\n\n    // if this is the first note of a right aligned glyph (probably an initio debilis),\n    // then there's nothing to worry about. but if it's not then first, then this\n    // subtraction will right align it visually\n    if (noteAlignsRight && this.lastNote)\n      note.bounds.x = this.x - note.bounds.width;\n    else {\n      note.bounds.x = this.x;\n      this.x += note.bounds.width;\n    }\n\n    this.neume.addVisualizer(note);\n\n    this.lastNote = note;\n    this.lineIsHanging = false;\n\n    return this;\n  }\n\n  // a special form of noteAdd that creates a virga\n  // uses a punctum cuadratum and a line rather than the virga glyphs\n  virgaAt(note, withLineTo = true) {\n    // add the punctum for the virga\n    this.noteAt(note, GlyphCode.PunctumQuadratum);\n\n    // add a line for the virga\n    var line = new VirgaLineVisualizer(this.ctxt, note);\n    this.x -= line.bounds.width;\n    line.bounds.x = this.x;\n    this.neume.addVisualizer(line);\n\n    this.lastNote = note;\n    this.lineIsHanging = false;\n\n    return this;\n  }\n\n  advanceBy(x) {\n    this.lastNote = null;\n    this.lineIsHanging = false;\n\n    this.x += x;\n\n    return this;\n  }\n\n  // for terminating hanging lines with no lower notes\n  withLineEndingAt(note) {\n    if (this.lastNote === null) return;\n\n    var line = new NeumeLineVisualizer(this.ctxt, this.lastNote, note, true);\n    this.neume.addVisualizer(line);\n    this.x -= line.bounds.width;\n    line.bounds.x = this.x;\n\n    this.neume.addVisualizer(line);\n\n    this.lastNote = note;\n\n    return this;\n  }\n\n  withPodatus(lowerNote, upperNote) {\n    var upperGlyph;\n    var lowerGlyph;\n\n    if (lowerNote.liquescent === LiquescentType.InitioDebilis) {\n      // liquescent upper note or not?\n      if (upperNote.liquescent === LiquescentType.None)\n        upperGlyph = GlyphCode.PunctumQuadratum;\n      else upperGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n\n      lowerGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (upperNote.liquescent & LiquescentType.Small) {\n      lowerGlyph = GlyphCode.BeginningAscLiquescent;\n      upperGlyph = GlyphCode.TerminatingAscLiquescent;\n    } else if (upperNote.liquescent & LiquescentType.Ascending) {\n      lowerGlyph = GlyphCode.PunctumQuadratum;\n      upperGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    } else if (upperNote.liquescent & LiquescentType.Descending) {\n      lowerGlyph = GlyphCode.PunctumQuadratum;\n      upperGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    } else {\n      // standard shape\n      lowerGlyph = GlyphCode.PodatusLower;\n      upperGlyph = GlyphCode.PodatusUpper;\n    }\n\n    // allow a quilisma pes\n    if (lowerNote.shape === NoteShape.Quilisma) lowerGlyph = GlyphCode.Quilisma;\n\n    this.noteAt(lowerNote, lowerGlyph).noteAt(upperNote, upperGlyph);\n\n    // make sure we don't have lines connected to the podatus\n    this.lastNote = null;\n\n    return this;\n  }\n\n  withClivis(upper, lower) {\n    var lowerGlyph;\n\n    if (upper.shape === NoteShape.Oriscus)\n      this.noteAt(upper, GlyphCode.OriscusDes, false);\n    else this.lineFrom(lower).noteAt(upper, GlyphCode.PunctumQuadratum);\n\n    if (lower.liquescent & LiquescentType.Small) {\n      lowerGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (lower.liquescent === LiquescentType.Ascending)\n      lowerGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (lower.liquescent === LiquescentType.Descending)\n      lowerGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else lowerGlyph = GlyphCode.PunctumQuadratum;\n\n    this.noteAt(lower, lowerGlyph);\n\n    // make sure we don't have lines connected to the clivis\n    this.lastNote = null;\n\n    return this;\n  }\n\n  // lays out a sequence of notes that are inclinata (e.g., climacus, pes subpunctis)\n  withInclinata(notes) {\n    var staffPosition = notes[0].staffPosition,\n      prevStaffPosition = notes[0].staffPosition;\n\n    // it is important to advance by the width of the inclinatum glyph itself\n    // rather than by individual note widths, so that any liquescents are spaced\n    // the same as non-liquscents\n    var advanceWidth =\n      Glyphs.PunctumInclinatum.bounds.width * this.ctxt.glyphScaling;\n\n    // now add all the punctum inclinatum\n    for (var i = 0; i < notes.length; i++, prevStaffPosition = staffPosition) {\n      var note = notes[i];\n\n      if (note.liquescent & LiquescentType.Small)\n        note.setGlyph(this.ctxt, GlyphCode.PunctumInclinatumLiquescent);\n      else if (note.liquescent & LiquescentType.Large)\n        // fixme: is the large inclinatum liquescent the same as the apostropha?\n        note.setGlyph(this.ctxt, GlyphCode.Stropha);\n      // fixme: some climaci in the new chant books end with a punctum quadratum\n      // (see, for example, the antiphon \"Sancta Maria\" for October 7).\n      else note.setGlyph(this.ctxt, GlyphCode.PunctumInclinatum);\n\n      staffPosition = note.staffPosition;\n\n      var multiple = Math.abs(prevStaffPosition - staffPosition);\n      switch (multiple) {\n        case 0:\n          multiple = 1.1;\n          break;\n        default:\n          multiple *= 2 / 3;\n          break;\n      }\n\n      if (i > 0) this.x += advanceWidth * multiple;\n\n      note.bounds.x = this.x;\n\n      this.neume.addVisualizer(note);\n    }\n\n    return this;\n  }\n\n  withPorrectusSwash(start, end) {\n    var needsLine =\n      this.lastNote !== null &&\n      (this.lineIsHanging ||\n        (this.lastNote.glyphVisualizer &&\n          this.lastNote.glyphVisualizer.align === \"right\") ||\n        Math.abs(this.lastNote.staffPosition - start.staffPosition) > 1);\n\n    if (needsLine) {\n      var line = new NeumeLineVisualizer(\n        this.ctxt,\n        this.lastNote,\n        start,\n        this.lineIsHanging\n      );\n      this.x = Math.max(this.minX, this.x - line.bounds.width);\n      line.bounds.x = this.x;\n      this.neume.addVisualizer(line);\n    }\n\n    var glyph;\n\n    switch (start.staffPosition - end.staffPosition) {\n      case 1:\n        glyph = GlyphCode.Porrectus1;\n        break;\n      case 2:\n        glyph = GlyphCode.Porrectus2;\n        break;\n      case 3:\n        glyph = GlyphCode.Porrectus3;\n        break;\n      case 4:\n        glyph = GlyphCode.Porrectus4;\n        break;\n      default:\n        // fixme: should we generate an error here?\n        glyph = GlyphCode.None;\n        break;\n    }\n\n    start.setGlyph(this.ctxt, glyph);\n    start.bounds.x = this.x;\n\n    // the second glyph does not draw anything, but it still has logical importance for the editing\n    // environment...it can respond to changes which will then change the swash glyph of the first.\n    end.setGlyph(this.ctxt, GlyphCode.None);\n\n    this.x = start.bounds.right();\n    end.bounds.x = this.x - end.bounds.width;\n\n    this.neume.addVisualizer(start);\n    this.neume.addVisualizer(end);\n\n    this.lastNote = end;\n    this.lineIsHanging = false;\n\n    return this;\n  }\n}\n\n/*\n * Neumes base class\n */\nexport class Neume extends ChantNotationElement {\n  constructor(notes = []) {\n    super();\n\n    this.isNeume = true; // poor man's reflection\n    this.notes = notes;\n\n    for (var i = 0; i < notes.length; i++) notes[i].neume = this;\n  }\n\n  addNote(note) {\n    note.neume = this;\n    this.notes.push(note);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n  }\n\n  finishLayout(ctxt) {\n    this.ledgerLines = this.requiresLedgerLine();\n\n    // allow subclasses an opportunity to position their own markings...\n    this.positionMarkings();\n\n    // layout the markings of the notes\n    for (var i = 0; i < this.notes.length; i++) {\n      var note = this.notes[i];\n      var j;\n\n      for (j = 0; j < note.episemata.length; j++) {\n        note.episemata[j].performLayout(ctxt);\n        this.addVisualizer(note.episemata[j]);\n      }\n\n      for (j = 0; j < note.morae.length; j++) {\n        note.morae[j].performLayout(ctxt);\n        this.addVisualizer(note.morae[j]);\n      }\n\n      // if the note has an ictus, then add it here\n      if (note.ictus) {\n        note.ictus.performLayout(ctxt);\n        this.addVisualizer(note.ictus);\n      }\n\n      if (note.accent) {\n        note.accent.performLayout(ctxt);\n        this.addVisualizer(note.accent);\n      }\n\n      if (note.choralSign) {\n        note.choralSign.performLayout(ctxt);\n        this.addVisualizer(note.choralSign);\n      }\n\n      // braces are handled by the chant line, so we don't mess with them here\n      // this is because brace size depends on chant line logic (neume spacing,\n      // justification, etc.) so they are considered chant line level\n      // markings rather than note level markings\n    }\n\n    this.origin.x = this.notes[0].origin.x;\n    this.origin.y = this.notes[0].origin.y;\n\n    super.finishLayout(ctxt);\n  }\n\n  requiresLedgerLine() {\n    var firstAbove = false,\n      needsAbove = false,\n      firstBelow = false,\n      needsBelow = false,\n      // isPorrectus = false,\n      result = [];\n\n    if (!this.notes) return result;\n\n    for (var i = 0; i < this.notes.length; ++i) {\n      var note = this.notes[i];\n      var staffPosition = note.staffPosition;\n      if (staffPosition >= 4) {\n        needsAbove = needsAbove || staffPosition >= 5;\n        if (firstAbove === false) firstAbove = Math.max(0, i - 1);\n        if (staffPosition >= 5) continue;\n      } else if (staffPosition <= -4) {\n        needsBelow = needsBelow || staffPosition <= -5;\n        if (firstBelow === false) firstBelow = Math.max(0, i - 1);\n        if (staffPosition <= -5) continue;\n      }\n      if (needsAbove || needsBelow) {\n        var endI = i; // Math.abs(staffPosition) >= 4? i : i - 1;\n        result.push({\n          element: this.notes[firstAbove || firstBelow || 0],\n          endElem: this.notes[endI],\n          staffPosition: needsAbove ? 5 : -5\n        });\n        firstAbove = firstBelow = needsAbove = needsBelow = false;\n      }\n      // isPorrectus = /^Porrectus\\d$/.test(note.glyphVisualizer.glyphCode);\n    }\n    if (needsAbove || needsBelow) {\n      result.push({\n        element: this.notes[firstAbove || firstBelow || 0],\n        endElem: this.notes[this.notes.length - 1],\n        staffPosition: needsAbove ? 5 : -5\n      });\n    }\n    return result;\n  }\n\n  resetDependencies() {}\n\n  build(ctxt) {\n    return new NeumeBuilder(ctxt, this);\n  }\n  positionEpisemata(note, position) {\n    var i;\n    for (i = 0; i < note.episemata.length; i++)\n      if (note.episemata[i].positionHint === MarkingPositionHint.Default)\n        note.episemata[i].positionHint = position;\n    if (note.choralSign) note.choralSign.positionHint = position;\n    return note.episemata.length;\n  }\n  positionEpisemataAbove(note) {\n    return this.positionEpisemata(note, MarkingPositionHint.Above);\n  }\n  positionEpisemataBelow(note) {\n    return this.positionEpisemata(note, MarkingPositionHint.Below);\n  }\n\n  positionPodatusEpisemata(bottomNote, topNote) {\n    // 1. episema on lower note by default be below, upper note above\n    this.positionEpisemataBelow(bottomNote);\n    this.positionEpisemataAbove(topNote);\n  }\n  positionInclinataMorae(notes) {\n    notes = notes.slice(-2);\n    if (notes.length < 2 || notes[1].staffPosition > notes[0].staffPosition)\n      return;\n    var bottomNote = notes[1],\n      topNote = notes[0],\n      mark;\n\n    // The mora on the second (lower) note should be below the punctum,\n    // if the punctum is on a line and the previous punctum is in the space above.\n    if (\n      Math.abs(bottomNote.staffPosition % 2) === 1 &&\n      topNote.staffPosition - bottomNote.staffPosition === 1 &&\n      bottomNote.morae.length > 0\n    ) {\n      mark = bottomNote.morae.slice(-1)[0];\n      if (mark.positionHint === MarkingPositionHint.Default)\n        mark.positionHint = MarkingPositionHint.Below;\n    }\n  }\n  positionPodatusMorae(bottomNote, topNote) {\n    var mark;\n\n    // The mora on the first (lower) note should be below it,\n    // if it is on a line.\n    if (Math.abs(bottomNote.staffPosition % 2) === 1) {\n      if (bottomNote.morae.length === 1) {\n        mark = bottomNote.morae[0];\n      } else if (topNote.morae.length > 1) {\n        mark = topNote.morae[0];\n      }\n      if (mark && mark.positionHint === MarkingPositionHint.Default)\n        mark.positionHint = MarkingPositionHint.Below;\n    }\n\n    // if there is a mora on the first note but not on the second, and the neume\n    // continues with a punctum higher than the second note, we need to adjust\n    // the space after the neume so that it follows immediately with no gap\n    if (bottomNote.morae.length > 0 && topNote.morae.length === 0) {\n      bottomNote.morae[0].ignoreBounds = true;\n    }\n  }\n  // for any subclasses that begin with a podatus, they can call this from their own positionMarkings()\n  positionPodatusMarkings(bottomNote, topNote) {\n    this.positionPodatusEpisemata(bottomNote, topNote);\n    this.positionPodatusMorae(bottomNote, topNote);\n  }\n\n  // just like a clivis, but the first note of the three also works like the second note of the clivis:\n  // episema below, unless the middle note also has an episema\n  positionTorculusMarkings(firstNote, secondNote, thirdNote) {\n    var hasTopEpisema = this.positionClivisMarkings(secondNote, thirdNote);\n    hasTopEpisema =\n      this.positionEpisemata(\n        firstNote,\n        hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n      ) && hasTopEpisema;\n    return hasTopEpisema;\n  }\n  positionClivisMorae(firstNote, secondNote) {\n    // 1. second note of a clivis that ends on a line and goes down one step has its mora below:\n    var morae = firstNote.morae.concat(secondNote.morae);\n    if (\n      secondNote.morae.length &&\n      firstNote.staffPosition - secondNote.staffPosition === 1 &&\n      Math.abs(secondNote.staffPosition % 2) === 1\n    ) {\n      morae.slice(-1)[0].positionHint = MarkingPositionHint.Below;\n    }\n  }\n  positionClivisEpisemata(firstNote, secondNote) {\n    var hasTopEpisema = this.positionEpisemataAbove(firstNote);\n    this.positionEpisemata(\n      secondNote,\n      hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n    );\n    return hasTopEpisema;\n  }\n  positionClivisMarkings(firstNote, secondNote) {\n    this.positionClivisMorae(firstNote, secondNote);\n    return this.positionClivisEpisemata(firstNote, secondNote);\n  }\n\n  positionPorrectusMarkings(firstNote, secondNote, thirdNote) {\n    // episemata on first and second note work like a clivis,\n    // the second note should have its episema below, unless the first note also has an episema.\n    this.positionClivisEpisemata(firstNote, secondNote);\n    this.positionPodatusMarkings(secondNote, thirdNote);\n  }\n\n  positionPorrectusFlexusMarkings(first, second, third, fourth) {\n    var hasTopEpisema = this.positionEpisemataAbove(first);\n    hasTopEpisema = this.positionClivisMarkings(third, fourth) || hasTopEpisema;\n    this.positionEpisemata(\n      second,\n      hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n    );\n  }\n\n  // subclasses can override this in order to correctly place markings in a neume specific way\n  positionMarkings() {}\n}\n\n/*\n * Apostropha\n */\nexport class Apostropha extends Neume {\n  positionMarkings() {\n    var positionHint = MarkingPositionHint.Above;\n\n    // logic here is this: if first episema is default position, place it above.\n    // then place the second one (if there is one) opposite of the first.\n    for (var i = 0; i < this.notes[0].episemata.length; i++) {\n      if (\n        this.notes[0].episemata[i].positionHint === MarkingPositionHint.Default\n      )\n        this.notes[0].episemata[i].positionHint = positionHint;\n      else positionHint = this.notes[0].episemata[i].positionHint;\n\n      // now place the next one in the opposite position\n      positionHint =\n        positionHint === MarkingPositionHint.Above\n          ? MarkingPositionHint.Below\n          : MarkingPositionHint.Above;\n    }\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).noteAt(\n      this.notes[0],\n      Apostropha.getNoteGlyphCode(this.notes[0])\n    );\n\n    this.finishLayout(ctxt);\n  }\n\n  static getNoteGlyphCode(note) {\n    if (note.shape === NoteShape.Stropha) return GlyphCode.Stropha;\n\n    if (note.liquescent & LiquescentType.Ascending)\n      return GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (note.liquescent & LiquescentType.Descending)\n      return GlyphCode.PunctumQuadratumDesLiquescent;\n\n    if (note.shapeModifiers & NoteShapeModifiers.Cavum)\n      return GlyphCode.PunctumCavum;\n\n    return GlyphCode.PunctumQuadratum;\n  }\n}\n\n/*\n * Bivirga\n *\n * For simplicity in implementation, Bivirga's have two notes in the object\n * structure. These technically must be the same pitch though.\n */\nexport class Bivirga extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt)\n      .virgaAt(this.notes[0])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .virgaAt(this.notes[1]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Trivirga\n *\n * For simplicity in implementation, Trivirga's have three notes in the object\n * structure. These technically must be the same pitch though.\n */\nexport class Trivirga extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n    this.positionEpisemataAbove(this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt)\n      .virgaAt(this.notes[0])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .virgaAt(this.notes[1])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .virgaAt(this.notes[2]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Climacus\n */\nexport class Climacus extends Neume {\n  positionMarkings() {\n    for (var i = 0; i < this.notes.length; i++) {\n      this.positionEpisemataAbove(this.notes[i]);\n    }\n    this.positionInclinataMorae(this.notes);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt)\n      .virgaAt(this.notes[0])\n      .advanceBy(ctxt.intraNeumeSpacing)\n      .withInclinata(this.notes.slice(1));\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Clivis\n */\nexport class Clivis extends Neume {\n  positionMarkings() {\n    this.positionClivisMarkings(this.notes[0], this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var upper = this.notes[0];\n    var lower = this.notes[1];\n\n    this.build(ctxt).withClivis(upper, lower);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Distropha\n *\n * For simplicity in implementation, Distropha's have two notes in the object\n * structure. These technically must be the same pitch though (like Bivirga).\n */\nexport class Distropha extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    let glyphCodes = this.notes.map((note) =>\n      Apostropha.getNoteGlyphCode(note)\n    );\n    let glyphAdvance = ctxt.intraNeumeSpacing;\n    glyphCodes.slice(0, 2).forEach((glyphCode) => {\n      if (glyphCode === GlyphCode.Stropha)\n        glyphAdvance -= ctxt.intraNeumeSpacing / 4;\n    });\n\n    this.build(ctxt)\n      .noteAt(this.notes[0], glyphCodes[0])\n      .advanceBy(glyphAdvance)\n      .noteAt(this.notes[1], glyphCodes[1]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Oriscus\n */\nexport class Oriscus extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    // determine the glyph to use\n    var note = this.notes[0];\n    var glyph;\n\n    if (note.liquescent !== LiquescentType.None) {\n      glyph = GlyphCode.OriscusLiquescent;\n    } else {\n      if (note.shapeModifiers & NoteShapeModifiers.Ascending)\n        glyph = GlyphCode.OriscusAsc;\n      else if (note.shapeModifiers & NoteShapeModifiers.Descending)\n        glyph = GlyphCode.OriscusDes;\n      else {\n        // by default we take the descending form, unless we can figure out by a lookahead here\n        glyph = GlyphCode.OriscusDes;\n\n        // try to find a neume following this one\n        var neume = ctxt.findNextNeume();\n\n        if (neume) {\n          var nextNoteStaffPosition = ctxt.activeClef.pitchToStaffPosition(\n            neume.notes[0].pitch\n          );\n\n          if (nextNoteStaffPosition > note.staffPosition)\n            glyph = GlyphCode.OriscusAsc;\n        }\n      }\n    }\n\n    this.build(ctxt).noteAt(note, glyph);\n\n    this.finishLayout(ctxt);\n  }\n\n  resetDependencies() {\n    // a single oriscus tries to automatically use the right direction\n    // based on the following neumes. if we don't have a manually designated\n    // direction, then we reset our layout so that we can try to guess it\n    // at next layout phase.\n    if (\n      this.notes[0].shapeModifiers & NoteShapeModifiers.Ascending ||\n      this.notes[0].shapeModifiers & NoteShapeModifiers.Descending\n    )\n      return;\n\n    this.needsLayout = true;\n  }\n}\n\n/*\n * PesQuassus\n */\nexport class PesQuassus extends Neume {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var lower = this.notes[0];\n    var upper = this.notes[1];\n\n    var lowerGlyph;\n\n    var lowerStaffPos = lower.staffPosition;\n    var upperStaffPos = upper.staffPosition;\n\n    if (lower.shape === NoteShape.Oriscus) lowerGlyph = GlyphCode.OriscusAsc;\n    else lowerGlyph = GlyphCode.PunctumQuadratum;\n\n    var builder = this.build(ctxt).noteAt(lower, lowerGlyph);\n\n    if (upperStaffPos - lowerStaffPos === 1)\n      // use a virga glyph in this case\n      builder.virgaAt(upper);\n    else if (upper.liquescent === LiquescentType.LargeDescending)\n      builder\n        .noteAt(upper, GlyphCode.PunctumQuadratumDesLiquescent)\n        .withLineEndingAt(lower);\n    else\n      builder.noteAt(upper, GlyphCode.PunctumQuadratum).withLineEndingAt(lower);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * PesSubpunctis\n */\nexport class PesSubpunctis extends Neume {\n  positionMarkings() {\n    this.positionPodatusEpisemata(this.notes[0], this.notes[1]);\n    for (var i = 2; i < this.notes.length; ++i) {\n      this.positionEpisemataAbove(this.notes[i]);\n    }\n    this.positionInclinataMorae(this.notes.slice(1));\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    // podatus followed by inclinata\n    this.build(ctxt)\n      .withPodatus(this.notes[0], this.notes[1])\n      .advanceBy(ctxt.intraNeumeSpacing * 0.68)\n      .withInclinata(this.notes.slice(2));\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Podatus\n *\n * This podatus class handles a few neume types actually, depending on the note\n * data: Podatus (including various liquescent types on the upper note),\n * Podatus initio debilis, and Quilisma-Pes\n */\nexport class Podatus extends Neume {\n  positionMarkings() {\n    this.positionPodatusMarkings(this.notes[0], this.notes[1]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).withPodatus(this.notes[0], this.notes[1]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Porrectus\n */\nexport class Porrectus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusMarkings(this.notes[0], this.notes[1], this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n\n    var thirdGlyph;\n\n    if (third.liquescent & LiquescentType.Small)\n      thirdGlyph = GlyphCode.TerminatingAscLiquescent;\n    else if (third.liquescent & LiquescentType.Descending)\n      thirdGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else thirdGlyph = GlyphCode.PodatusUpper;\n\n    this.build(ctxt)\n      .lineFrom(second)\n      .withPorrectusSwash(first, second)\n      .noteAt(third, thirdGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * PorrectusFlexus\n */\nexport class PorrectusFlexus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusFlexusMarkings(\n      this.notes[0],\n      this.notes[1],\n      this.notes[2],\n      this.notes[3]\n    );\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    var thirdGlyph = GlyphCode.PunctumQuadratum,\n      fourthGlyph;\n\n    if (fourth.liquescent & LiquescentType.Small) {\n      thirdGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n      fourthGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (fourth.liquescent & LiquescentType.Ascending)\n      fourthGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (fourth.liquescent & LiquescentType.Descending)\n      fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else fourthGlyph = GlyphCode.PunctumQuadratum;\n\n    this.build(ctxt)\n      .lineFrom(second)\n      .withPorrectusSwash(first, second)\n      .noteAt(third, thirdGlyph)\n      .noteAt(fourth, fourthGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n// this is some type of pseudo nume right? there is no such thing as a neume\n// of puncta inclinata, but this will be part of other composite neumes.\nexport class PunctaInclinata extends Neume {\n  positionMarkings() {\n    this.positionInclinataMorae(this.notes);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).withInclinata(this.notes);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Punctum\n */\nexport class Punctum extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var note = this.notes[0];\n    var glyph = GlyphCode.PunctumQuadratum;\n\n    // determine the glyph to use\n    if (note.liquescent !== LiquescentType.None) {\n      if (note.shape === NoteShape.Inclinatum)\n        glyph = GlyphCode.PunctumInclinatumLiquescent;\n      else if (note.shape === NoteShape.Oriscus)\n        glyph = GlyphCode.OriscusLiquescent;\n      else if (note.liquescent & LiquescentType.Ascending)\n        glyph = GlyphCode.PunctumQuadratumAscLiquescent;\n      else if (note.liquescent & LiquescentType.Descending)\n        glyph = GlyphCode.PunctumQuadratumDesLiquescent;\n      else glyph = GlyphCode.PunctumQuadratumLiquescent;\n    } else {\n      if (note.shapeModifiers & NoteShapeModifiers.Cavum)\n        glyph = GlyphCode.PunctumCavum;\n      else if (note.shape === NoteShape.Inclinatum)\n        glyph = GlyphCode.PunctumInclinatum;\n      else if (note.shape === NoteShape.Quilisma) glyph = GlyphCode.Quilisma;\n      else glyph = GlyphCode.PunctumQuadratum;\n    }\n\n    this.build(ctxt).noteAt(note, glyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Salicus\n */\nexport class Salicus extends Neume {\n  positionMarkings() {\n    // by default place episema below\n    // fixme: is this correct?\n    for (var i = 0; i < this.notes.length; i++)\n      this.positionEpisemataBelow(this.notes[i]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n\n    var builder = this.build(ctxt).noteAt(first, GlyphCode.PunctumQuadratum);\n\n    // if the next note doesn't require a stem connector, then add a tad bit\n    // of spacing here\n    if (!(second.shapeModifiers & NoteShapeModifiers.Stemmed))\n      builder.advanceBy(ctxt.intraNeumeSpacing);\n\n    // second note is always an oriscus, which may or may not be stemmed\n    // to the first\n    builder.noteAt(second, GlyphCode.OriscusAsc);\n\n    // third note can be a punctum quadratum or various liquescent forms\n    if (third.liquescent & LiquescentType.Small)\n      builder.noteAt(third, GlyphCode.TerminatingAscLiquescent);\n    else if (third.liquescent === LiquescentType.Ascending)\n      builder.noteAt(third, GlyphCode.PunctumQuadratumAscLiquescent);\n    else if (third.liquescent === LiquescentType.Descending)\n      builder.noteAt(third, GlyphCode.PunctumQuadratumDesLiquescent);\n    else builder.virgaAt(third);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Salicus Flexus\n */\nexport class SalicusFlexus extends Neume {\n  positionMarkings() {\n    var hasTopEpisema = this.positionTorculusMarkings(\n      this.notes[1],\n      this.notes[2],\n      this.notes[3]\n    );\n    this.positionEpisemata(\n      this.notes[0],\n      hasTopEpisema ? MarkingPositionHint.Above : MarkingPositionHint.Below\n    );\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    var builder = this.build(ctxt).noteAt(first, GlyphCode.PunctumQuadratum);\n\n    // if the next note doesn't require a stem connector, then add a tad bit\n    // of spacing here\n    if (!(second.shapeModifiers & NoteShapeModifiers.Stemmed))\n      builder.advanceBy(ctxt.intraNeumeSpacing);\n\n    // second note is always an oriscus, which may or may not be stemmed\n    // to the first\n    builder.noteAt(second, GlyphCode.OriscusAsc);\n\n    // third note can be a punctum quadratum or various liquescent forms,\n    // ...based on note four though!\n    if (fourth.liquescent & LiquescentType.Small)\n      builder.noteAt(third, GlyphCode.PunctumQuadratumDesLiquescent);\n    else builder.noteAt(third, GlyphCode.PunctumQuadratum);\n\n    // finally, do the fourth note\n    if (fourth.liquescent & LiquescentType.Small)\n      builder.noteAt(fourth, GlyphCode.TerminatingDesLiquescent);\n    else if (fourth.liquescent & LiquescentType.Ascending)\n      builder.noteAt(fourth, GlyphCode.PunctumQuadratumAscLiquescent);\n    else if (fourth.liquescent & LiquescentType.Descending)\n      builder.noteAt(fourth, GlyphCode.PunctumQuadratumDesLiquescent);\n    else builder.noteAt(fourth, GlyphCode.PunctumQuadratum);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Scandicus\n */\nexport class Scandicus extends Neume {\n  positionMarkings() {\n    if (this.notes[2].shape === NoteShape.Virga) {\n      this.positionPodatusMarkings(this.notes[0], this.notes[1]);\n      this.positionEpisemataAbove(this.notes[2]);\n    } else {\n      this.positionEpisemataBelow(this.notes[0]);\n      this.positionPodatusMarkings(this.notes[1], this.notes[2]);\n    }\n  }\n\n  // if the third note shape is a virga, then the scadicus is rendered\n  // as a podatus followed by a virga. Otherwise, it's rendered as a\n  // punctum followed by a podatus...\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n\n    if (third.shape === NoteShape.Virga) {\n      this.build(ctxt).withPodatus(first, second).virgaAt(third);\n    } else {\n      this.build(ctxt)\n        .noteAt(\n          first,\n          first.shape === NoteShape.Quilisma\n            ? GlyphCode.Quilisma\n            : GlyphCode.PunctumQuadratum\n        )\n        .withPodatus(second, third);\n    }\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Scandicus Flexus\n */\nexport class ScandicusFlexus extends Neume {\n  positionMarkings() {\n    if (this.notes[2].shape === NoteShape.Virga) {\n      this.positionPodatusMarkings(this.notes[0], this.notes[1]);\n      this.positionClivisMarkings(this.notes[2], this.notes[3]);\n    } else {\n      this.positionEpisemataBelow(this.notes[0]);\n      this.positionPodatusMarkings(this.notes[1], this.notes[2]);\n      this.positionEpisemataAbove(this.notes[3]);\n    }\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    if (third.shape === NoteShape.Virga) {\n      this.build(ctxt)\n        .withPodatus(first, second)\n        .advanceBy(ctxt.intraNeumeSpacing)\n        .withClivis(third, fourth);\n    } else {\n      var fourthGlyph = GlyphCode.PunctumQuadratum;\n\n      if (fourth.liquescent & LiquescentType.Ascending)\n        fourthGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n      else if (fourth.liquescent & LiquescentType.Descending)\n        fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n\n      this.build(ctxt)\n        .noteAt(first, GlyphCode.PunctumQuadratum)\n        .withPodatus(second, third)\n        .advanceBy(ctxt.intraNeumeSpacing)\n        .noteAt(fourth, fourthGlyph);\n    }\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Torculus\n */\nexport class Torculus extends Neume {\n  positionMarkings() {\n    this.positionTorculusMarkings(this.notes[0], this.notes[1], this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var note1 = this.notes[0];\n    var note2 = this.notes[1];\n    var note3 = this.notes[2];\n\n    var glyph1, glyph3;\n\n    if (note1.liquescent === LiquescentType.InitioDebilis)\n      glyph1 = GlyphCode.TerminatingDesLiquescent;\n    else if (note1.shape === NoteShape.Quilisma) glyph1 = GlyphCode.Quilisma;\n    else glyph1 = GlyphCode.PunctumQuadratum;\n\n    if (note3.liquescent & LiquescentType.Small)\n      glyph3 = GlyphCode.TerminatingDesLiquescent;\n    else if (note3.liquescent & LiquescentType.Ascending)\n      glyph3 = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (note3.liquescent & LiquescentType.Descending)\n      glyph3 = GlyphCode.PunctumQuadratumDesLiquescent;\n    else glyph3 = GlyphCode.PunctumQuadratum;\n\n    this.build(ctxt)\n      .noteAt(note1, glyph1)\n      .noteAt(note2, GlyphCode.PunctumQuadratum)\n      .noteAt(note3, glyph3);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * TorculusResupinus\n */\nexport class TorculusResupinus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusMarkings(this.notes[1], this.notes[2], this.notes[3]);\n    this.positionClivisEpisemata(this.notes[1], this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n\n    var firstGlyph, fourthGlyph;\n\n    if (first.liquescent === LiquescentType.InitioDebilis) {\n      firstGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (first.shape === NoteShape.Quilisma)\n      firstGlyph = GlyphCode.Quilisma;\n    else firstGlyph = GlyphCode.PunctumQuadratum;\n\n    if (fourth.liquescent & LiquescentType.Small)\n      fourthGlyph = GlyphCode.TerminatingAscLiquescent;\n    else if (third.liquescent & LiquescentType.Descending)\n      fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else fourthGlyph = GlyphCode.PodatusUpper;\n\n    this.build(ctxt)\n      .noteAt(first, firstGlyph)\n      .withPorrectusSwash(second, third)\n      .noteAt(fourth, fourthGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * TorculusResupinusFlexus\n */\nexport class TorculusResupinusFlexus extends Neume {\n  positionMarkings() {\n    this.positionPorrectusFlexusMarkings(\n      this.notes[1],\n      this.notes[2],\n      this.notes[3],\n      this.notes[4]\n    );\n    this.positionClivisEpisemata(this.notes[1], this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var first = this.notes[0];\n    var second = this.notes[1];\n    var third = this.notes[2];\n    var fourth = this.notes[3];\n    var fifth = this.notes[4];\n\n    var firstGlyph,\n      fourthGlyph = GlyphCode.PunctumQuadratum,\n      fifthGlyph;\n\n    if (first.liquescent === LiquescentType.InitioDebilis) {\n      firstGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (first.shape === NoteShape.Quilisma)\n      firstGlyph = GlyphCode.Quilisma;\n    else firstGlyph = GlyphCode.PunctumQuadratum;\n\n    if (fifth.liquescent & LiquescentType.Small) {\n      fourthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n      fifthGlyph = GlyphCode.TerminatingDesLiquescent;\n    } else if (fifth.liquescent & LiquescentType.Ascending)\n      fifthGlyph = GlyphCode.PunctumQuadratumAscLiquescent;\n    else if (fifth.liquescent & LiquescentType.Descending)\n      fifthGlyph = GlyphCode.PunctumQuadratumDesLiquescent;\n    else fifthGlyph = GlyphCode.PunctumQuadratum;\n\n    this.build(ctxt)\n      .noteAt(first, firstGlyph)\n      .withPorrectusSwash(second, third)\n      .noteAt(fourth, fourthGlyph)\n      .noteAt(fifth, fifthGlyph);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Tristropha\n *\n * For simplicity in implementation, Tristropha's have three notes in the object\n * structure. These technically must be the same pitch though (like the\n * Distropha and Bivirga).\n */\nexport class Tristropha extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n    this.positionEpisemataAbove(this.notes[1]);\n    this.positionEpisemataAbove(this.notes[2]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    let glyphCodes = this.notes.map((note) =>\n      Apostropha.getNoteGlyphCode(note)\n    );\n    let glyphAdvance =\n      glyphCodes[0] === GlyphCode.Stropha\n        ? ctxt.intraNeumeSpacing / 2\n        : ctxt.intraNeumeSpacing;\n\n    this.build(ctxt)\n      .noteAt(this.notes[0], glyphCodes[0])\n      .advanceBy(glyphAdvance)\n      .noteAt(this.notes[1], glyphCodes[1])\n      .advanceBy(glyphAdvance)\n      .noteAt(this.notes[2], glyphCodes[2]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Virga\n */\nexport class Virga extends Neume {\n  positionMarkings() {\n    this.positionEpisemataAbove(this.notes[0]);\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.build(ctxt).virgaAt(this.notes[0]);\n\n    this.finishLayout(ctxt);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.Neumes.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { Step } from \"./Exsurge.Core.js\";\nimport {\n  GlyphCode,\n  GlyphVisualizer,\n  DividerLineVisualizer,\n  ChantNotationElement\n} from \"./Exsurge.Drawing.js\";\n\n/*\n *\n */\nexport class Custos extends ChantNotationElement {\n  // if auto is true, then the custos will automatically try to determine it's height based on\n  // subsequent notations\n  constructor(auto = false) {\n    super();\n    this.auto = auto;\n    this.staffPosition = 0; // default sane value\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    if (this.auto) {\n      var neume = ctxt.findNextNeume();\n\n      if (neume)\n        this.staffPosition = ctxt.activeClef.pitchToStaffPosition(\n          neume.notes[0].pitch\n        );\n\n      // in case there was a weird fa/do clef change, let's sanitize the staffPosition by making sure it is\n      // within reasonable bounds\n      while (this.staffPosition < -6) this.staffPosition += 7;\n\n      while (this.staffPosition > 6) this.staffPosition -= 7;\n    }\n\n    var glyph = new GlyphVisualizer(\n      ctxt,\n      Custos.getGlyphCode(this.staffPosition)\n    );\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n    this.addVisualizer(glyph);\n\n    this.finishLayout(ctxt);\n  }\n\n  // called when layout has changed and our dependencies are no longer good\n  resetDependencies() {\n    // we only need to resolve new dependencies if we're an automatic custos\n    if (this.auto) this.needsLayout = true;\n  }\n\n  static getGlyphCode(staffPosition) {\n    if (staffPosition <= 2) {\n      // ascending custodes\n      if (Math.abs(staffPosition) % 2 === 1) return GlyphCode.CustosLong;\n      else return GlyphCode.CustosShort;\n    } else {\n      // descending custodes\n      if (Math.abs(staffPosition) % 2 === 1) return GlyphCode.CustosDescLong;\n      else return GlyphCode.CustosDescShort;\n    }\n  }\n}\n\n/*\n * Divider\n */\nexport class Divider extends ChantNotationElement {\n  constructor() {\n    super();\n\n    this.isDivider = true;\n    this.resetsAccidentals = true;\n  }\n}\n\n/*\n * QuarterBar\n */\nexport class QuarterBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    this.addVisualizer(new DividerLineVisualizer(ctxt, 2, 4, this));\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * HalfBar\n */\nexport class HalfBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -2, 2, this));\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * FullBar\n */\nexport class FullBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -3, 3, this));\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * Insertion Cursor\n */\nexport class InsertionCursor extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -4, 4));\n\n    this.origin.x = this.bounds.width / 2;\n    this.bounds.width = 0;\n    this.bounds.height = 0;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * DominicanBar\n */\nexport class DominicanBar extends Divider {\n  constructor(staffPosition) {\n    super();\n    staffPosition--;\n    var parity = staffPosition % 2;\n\n    this.staffPosition = staffPosition - 2 * parity;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n    this.addVisualizer(\n      new DividerLineVisualizer(\n        ctxt,\n        this.staffPosition - 3,\n        this.staffPosition,\n        this\n      )\n    );\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n/*\n * DoubleBar\n */\nexport class DoubleBar extends Divider {\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var line0 = new DividerLineVisualizer(ctxt, -3, 3, this);\n    line0.bounds.x = 0;\n    this.addVisualizer(line0);\n\n    var line1 = new DividerLineVisualizer(ctxt, -3, 3, this);\n    line1.bounds.x = ctxt.intraNeumeSpacing * 2 - line1.bounds.width;\n    this.addVisualizer(line1);\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\nexport const AccidentalType = {\n  Flat: -1,\n  Natural: 0,\n  Sharp: 1\n};\n\n/*\n * Accidental\n */\nexport class Accidental extends ChantNotationElement {\n  constructor(staffPosition, accidentalType) {\n    super();\n    this.isAccidental = true;\n    this.keepWithNext = true; // accidentals should always stay connected...\n\n    this.staffPosition = staffPosition;\n    this.accidentalType = accidentalType;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    this.addVisualizer(this.createGlyphVisualizer(ctxt));\n\n    this.finishLayout(ctxt);\n  }\n\n  // creation of the glyph visualizer is refactored out or performLayout\n  // so that clefs can use the same logic for their accidental glyph\n  createGlyphVisualizer(ctxt) {\n    var glyphCode = GlyphCode.Flat;\n\n    switch (this.accidentalType) {\n      case AccidentalType.Natural:\n        glyphCode = GlyphCode.Natural;\n        break;\n      case AccidentalType.Sharp:\n        glyphCode = GlyphCode.Sharp;\n        break;\n      default:\n        glyphCode = GlyphCode.Flat;\n        break;\n    }\n\n    var glyph = new GlyphVisualizer(ctxt, glyphCode);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n\n    return glyph;\n  }\n\n  adjustStep(step) {\n    switch (this.accidentalType) {\n      case AccidentalType.Flat:\n        if (step === Step.Ti) return Step.Te;\n        if (step === Step.Mi) return Step.Me;\n        break;\n      case AccidentalType.Sharp:\n        if (step === Step.Do) return Step.Du;\n        if (step === Step.Fa) return Step.Fu;\n        break;\n      case AccidentalType.Natural:\n        if (step === Step.Te) return Step.Ti;\n        if (step === Step.Me) return Step.Mi;\n        if (step === Step.Du) return Step.Do;\n        if (step === Step.Fu) return Step.Fa;\n        break;\n    }\n\n    // no adjustment needed\n    return step;\n  }\n\n  applyToPitch(pitch) {\n    // no adjusment needed\n    if (this.pitch.octave !== pitch.octave) return;\n\n    pitch.step = this.adjustStep(pitch.step);\n  }\n}\n\n/*\n * Virgula\n */\nexport class Virgula extends Divider {\n  constructor() {\n    super();\n\n    // unlike other dividers a virgula does not reset accidentals\n    this.resetsAccidentals = false;\n\n    // the staff position of the virgula is customizable, so that it\n    // can be placed on different lines (top or bottom) depending on the\n    // notation tradition of what is being notated (e.g., Benedictine has it\n    //  on top line, Norbertine at the bottom)\n    this.staffPosition = 3;\n  }\n\n  performLayout(ctxt) {\n    super.performLayout(ctxt);\n\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.Virgula);\n    glyph.setStaffPosition(ctxt, this.staffPosition);\n\n    this.addVisualizer(glyph);\n\n    this.origin.x = this.bounds.width / 2;\n\n    this.finishLayout(ctxt);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.Signs.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport { NoteShape } from \"./Exsurge.Chant.js\";\nimport {\n  ChantLayoutElement,\n  GlyphCode,\n  GlyphVisualizer,\n  MarkingPositionHint,\n  QuickSvg\n} from \"./Exsurge.Drawing.js\";\n\nexport class Accent extends GlyphVisualizer {\n  constructor(ctxt, note, glyphCode = GlyphCode.AcuteAccent) {\n    super(ctxt, glyphCode);\n    this.note = note;\n    this.positionHint = MarkingPositionHint.Above;\n  }\n\n  performLayout(ctxt) {\n    this.bounds.x = this.note.bounds.x + this.bounds.width / 2; // center on the note itself\n\n    // this puts the acute accent either over the staff lines, or over the note if the\n    // note is above the staff lines\n    this.setStaffPosition(ctxt, Math.max(this.note.staffPosition + 1, 4));\n  }\n}\n\n// for positioning markings on notes\nexport var HorizontalEpisemaAlignment = {\n  Default: 0,\n  Left: 1,\n  Center: 2,\n  Right: 3\n};\n\n/*\n * HorizontalEpisema\n *\n * A horizontal episema marking is it's own visualizer (that is, it implements createSvgFragment)\n */\nexport class HorizontalEpisema extends ChantLayoutElement {\n  constructor(note) {\n    super();\n\n    this.note = note;\n\n    this.positionHint = MarkingPositionHint.Default;\n    this.terminating = false; // indicates if this episema should terminate itself or not\n    this.alignment = HorizontalEpisemaAlignment.Default;\n  }\n\n  performLayout(ctxt) {\n    // following logic helps to keep the episemata away from staff lines if they get too close\n\n    var y = 0,\n      step;\n    var minDistanceAway = ctxt.staffInterval * 0.25; // min distance from neume\n    var glyphCode = this.note.glyphVisualizer.glyphCode;\n    var ledgerLine = this.note.neume.ledgerLines[0] || {};\n    var punctumInclinatumShorten = false;\n\n    if (glyphCode === GlyphCode.PunctumInclinatum) {\n      let notes = this.note.neume.notes,\n        index = notes.indexOf(this.note),\n        prevNote = notes[index - 1];\n      if (\n        prevNote &&\n        prevNote.glyphVisualizer.glyphCode === GlyphCode.PunctumInclinatum &&\n        prevNote.staffPosition - this.note.staffPosition === 1\n      ) {\n        punctumInclinatumShorten = true;\n      }\n    }\n\n    if (this.positionHint === MarkingPositionHint.Below) {\n      y = this.note.bounds.bottom() + minDistanceAway; // the highest the line could be at\n      if (glyphCode === GlyphCode.None)\n        // correction for episema under the second note of a porrectus\n        y += ctxt.staffInterval / 2;\n      step = Math.ceil(y / ctxt.staffInterval);\n      // if there's enough space, center the episema between the punctum and the next staff line\n      if (step % 2 === 0) {\n        step = (step + 3 / 4 + (y - minDistanceAway) / ctxt.staffInterval) / 2;\n      } else {\n        // otherwise, find nearest acceptable third between staff lines (or staff line)\n        step = (Math.ceil((1.5 * y) / ctxt.staffInterval - 0.5) * 2 + 1) / 3;\n\n        // if it's an odd step, that means we're on a staff line,\n        // so we shift to between the staff line\n        if (Math.abs(step) % 2 === 1) {\n          if (Math.abs(step) < 4 || ledgerLine.staffPosition === -step) {\n            step += 2 / 3;\n          } else {\n            // no ledger line, but we don't want the episema to be at exactly the same height the ledger line would occupy:\n            step += 1 / 3;\n          }\n        }\n      }\n    } else {\n      y = this.note.bounds.y - minDistanceAway; // the lowest the line could be at\n      step = Math.floor(y / ctxt.staffInterval);\n      // if there's enough space, center the episema between the punctum and the next staff line\n      if (step % 2 === 0) {\n        step = (step - 3 / 4 + (y + minDistanceAway) / ctxt.staffInterval) / 2;\n      } else {\n        // otherwise, find nearest acceptable third between staff lines (or staff line)\n        step = (Math.floor((1.5 * y) / ctxt.staffInterval - 0.5) * 2 + 1) / 3;\n\n        // find nearest acceptable third between staff lines (or staff line)\n        if (Math.abs(step) % 2 === 1) {\n          // if it was a staff line, we need to adjust\n          if (Math.abs(step) < 4 || ledgerLine.staffPosition === -step) {\n            step -= 2 / 3;\n          } else {\n            // no ledger line, but we don't want the episema to be at exactly the same height the ledger line would occupy:\n            step -= 1 / 3;\n          }\n        }\n      }\n    }\n\n    y = step * ctxt.staffInterval;\n\n    var width = this.note.bounds.width;\n    var x = this.note.bounds.x;\n\n    // The porrectus requires special handling of the note width,\n    // otherwise the width is just that of the note itself\n    if (\n      glyphCode === GlyphCode.Porrectus1 ||\n      glyphCode === GlyphCode.Porrectus2 ||\n      glyphCode === GlyphCode.Porrectus3 ||\n      glyphCode === GlyphCode.Porrectus4\n    )\n      width = ctxt.staffInterval;\n    else if (glyphCode === GlyphCode.None) {\n      width = ctxt.staffInterval;\n      x -= width;\n    } else if (punctumInclinatumShorten) {\n      width *= 2 / 3;\n      x += 0.5 * width;\n    } else if (glyphCode === GlyphCode.PunctumInclinatumLiquescent) {\n      width *= 2 / 3;\n      x += 0.25 * width;\n    }\n\n    // also, the position hint can affect the x/width of the episema\n    if (this.alignment === HorizontalEpisemaAlignment.Left) {\n      width *= 0.8;\n    } else if (this.alignment === HorizontalEpisemaAlignment.Center) {\n      x += width * 0.1;\n      width *= 0.8;\n    } else if (this.alignment === HorizontalEpisemaAlignment.Right) {\n      x += width * 0.2;\n      width *= 0.8;\n    }\n\n    this.bounds.x = x;\n    this.bounds.y = y - ctxt.episemaLineWeight / 2;\n    this.bounds.width = width;\n    this.bounds.height = ctxt.episemaLineWeight;\n\n    this.origin.x = 0;\n    this.origin.y = 0;\n  }\n\n  draw(ctxt) {\n    var canvasCtxt = ctxt.canvasCtxt;\n\n    canvasCtxt.fillStyle = ctxt.neumeLineColor;\n\n    canvasCtxt.fillRect(\n      this.bounds.x,\n      this.bounds.y,\n      this.bounds.width,\n      this.bounds.height\n    );\n  }\n\n  getSvgProps(ctxt) {\n    return {\n      x: this.bounds.x,\n      y: this.bounds.y,\n      width: this.bounds.width,\n      height: this.bounds.height,\n      fill: ctxt.neumeLineColor,\n      class: \"horizontalEpisema\"\n    };\n  }\n\n  createSvgNode(ctxt) {\n    return QuickSvg.createNode(\"rect\", this.getSvgProps(ctxt));\n  }\n  createSvgTree(ctxt) {\n    return QuickSvg.createSvgTree(\"rect\", this.getSvgProps(ctxt));\n  }\n\n  createSvgFragment(ctxt) {\n    return QuickSvg.createFragment(\"rect\", this.getSvgProps(ctxt));\n  }\n}\n\n/*\n * Ictus\n */\nexport class Ictus extends GlyphVisualizer {\n  constructor(ctxt, note) {\n    super(ctxt, GlyphCode.VerticalEpisemaAbove);\n    this.note = note;\n    this.positionHint = MarkingPositionHint.Default;\n  }\n\n  performLayout(ctxt) {\n    var glyphCode = this.note.glyphVisualizer.glyphCode;\n    // we have to place the ictus further from the note in some cases to avoid a collision with an episema on the same note:\n    var positionHint = this.positionHint || MarkingPositionHint.Below;\n    var staffPosition =\n      this.note.staffPosition +\n      (positionHint === MarkingPositionHint.Above ? 1 : -1);\n    var collisionWithEpisema =\n      this.note.episemata.length > 0 &&\n      (this.note.episemata[0].positionHint || MarkingPositionHint.Above) ===\n        positionHint;\n    var horizontalOffset;\n    var verticalOffset = 1;\n    var shortOffset = -0.2;\n    var extraOffset = 0;\n    var collisionWithStaffLine =\n      staffPosition % 2 &&\n      (Math.abs(staffPosition) < 4 ||\n        (this.note.neume.ledgerLines[0] || {}).staffPosition === staffPosition);\n\n    // The porrectus requires special handling of the note width,\n    // otherwise the width is just that of the note itself\n    if (\n      glyphCode === GlyphCode.Porrectus1 ||\n      glyphCode === GlyphCode.Porrectus2 ||\n      glyphCode === GlyphCode.Porrectus3 ||\n      glyphCode === GlyphCode.Porrectus4\n    )\n      horizontalOffset = ctxt.staffInterval / 2;\n    else if (glyphCode === GlyphCode.None) {\n      horizontalOffset = -ctxt.staffInterval / 2;\n    } else {\n      horizontalOffset = this.note.bounds.width / 2;\n      if (\n        glyphCode === GlyphCode.PunctumInclinatum &&\n        !collisionWithStaffLine &&\n        !collisionWithEpisema\n      ) {\n        extraOffset = 0.3;\n      }\n    }\n\n    if (this.positionHint === MarkingPositionHint.Above) {\n      glyphCode = GlyphCode.VerticalEpisemaAbove;\n      verticalOffset *= -1;\n    } else {\n      glyphCode = GlyphCode.VerticalEpisemaBelow;\n    }\n    if (collisionWithEpisema) {\n      extraOffset = 0.4;\n    }\n    verticalOffset *=\n      ctxt.staffInterval *\n      (extraOffset + (collisionWithStaffLine ? 0.3 : shortOffset));\n\n    this.setGlyph(ctxt, glyphCode);\n    this.setStaffPosition(ctxt, staffPosition);\n\n    this.bounds.x = this.note.bounds.x + horizontalOffset - this.origin.x;\n    this.bounds.y += verticalOffset;\n  }\n}\n\n/*\n * Mora\n */\nexport class Mora extends GlyphVisualizer {\n  constructor(ctxt, note) {\n    super(ctxt, GlyphCode.Mora);\n    this.note = note;\n    this.positionHint = MarkingPositionHint.Default;\n    this.horizontalOffset = ctxt.staffInterval / 2 + this.origin.x;\n  }\n\n  performLayout(ctxt) {\n    this.setGlyph(ctxt, this.glyphCode);\n    this.horizontalOffset = ctxt.staffInterval / 2 + this.origin.x;\n    var staffPosition = this.note.staffPosition;\n\n    this.setStaffPosition(ctxt, staffPosition);\n\n    var verticalOffset = 0;\n    // First, we need to find the next note in the neume.\n    var noteIndex = this.note.neume.notes.indexOf(this.note);\n    var nextNote;\n    if (noteIndex >= 0) {\n      ++noteIndex;\n      if (this.note.neume.notes.length > noteIndex) {\n        nextNote = this.note.neume.notes[noteIndex];\n        if (\n          nextNote.morae &&\n          nextNote.morae.length &&\n          this.note.neume.notes.length === noteIndex + 1\n        ) {\n          // this note is the second to last in its neume, and the last note also has a mora\n          this.horizontalOffset +=\n            nextNote.bounds.right() - this.note.bounds.right();\n        } else if (nextNote.bounds.right() > this.note.bounds.right()) {\n          // center the dot over the following note.\n          this.horizontalOffset =\n            (nextNote.bounds.right() -\n              this.note.bounds.right() -\n              this.bounds.right()) /\n            2;\n        } else {\n          nextNote = null;\n        }\n      } else if (this.note.neume.notes.length === noteIndex) {\n        // this note is the last in its neume:\n        if (this.note.neume.trailingSpace === 0) {\n          // if this was the last note in its neume, we only care about the next note if there is no trailing space at the end of this neume.\n          var notationIndex = this.note.neume.score.notations.indexOf(\n            this.note.neume\n          );\n          if (notationIndex >= 0) {\n            var nextNotation = this.note.neume.score.notations[\n              notationIndex + 1\n            ];\n            if (nextNotation && nextNotation.notes) {\n              nextNote = nextNotation.notes[0];\n            }\n          }\n        } else if (this.note.shape !== NoteShape.Inclinatum) {\n          this.note.neume.calculatedTrailingSpace += this.origin.x;\n        }\n      }\n    }\n\n    if (this.positionHint === MarkingPositionHint.Above) {\n      if (staffPosition % 2 === 0) verticalOffset -= ctxt.staffInterval * 1.75;\n      else verticalOffset -= ctxt.staffInterval * 0.75;\n    } else if (this.positionHint === MarkingPositionHint.Below) {\n      if (staffPosition % 2 === 0) verticalOffset += ctxt.staffInterval * 1.75;\n      else verticalOffset += ctxt.staffInterval * 0.75;\n    } else {\n      if (staffPosition % 2 === 0) {\n        // if the note is in a space and followed by a note on the line below, we often want to move the mora dot up slightly so that it is centered\n        // between the top of the note's space and the top of the following note.\n        if (nextNote && nextNote.staffPosition === staffPosition - 1) {\n          verticalOffset -= ctxt.staffInterval * 0.25;\n        }\n      } else {\n        verticalOffset -= ctxt.staffInterval * 0.75;\n      }\n    }\n    this.bounds.x = this.horizontalOffset + this.note.bounds.right();\n    this.bounds.y += verticalOffset;\n  }\n}\n\n// indicates the shape of the brace\nexport var BraceShape = {\n  RoundBrace: 0,\n  CurlyBrace: 1,\n  AccentedCurlyBrace: 2\n};\n\n// indicates how the brace is alignerd to the note to which it's connected\nexport var BraceAttachment = {\n  Left: 0,\n  Right: 1\n};\n\nexport class BracePoint extends ChantLayoutElement {\n  constructor(note, isAbove, shape, attachment) {\n    super();\n\n    this.note = note;\n    this.isAbove = isAbove;\n    this.shape = shape;\n    this.attachment = attachment;\n  }\n\n  getAttachmentX(note) {\n    if (!note) note = this.note;\n    if (this.attachment === BraceAttachment.Left)\n      return (note.neume ? note.neume.bounds.x : 0) + note.bounds.x;\n    else return (note.neume ? note.neume.bounds.x : 0) + note.bounds.right();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Chant.Markings.js","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport {\n  Units,\n  Pitch,\n  Point,\n  Rect,\n  Margins,\n  Size,\n  Step\n} from \"./Exsurge.Core.js\";\nimport {\n  MarkingPositionHint,\n  LyricType,\n  Lyric,\n  LyricArray,\n  AboveLinesText,\n  ChoralSign,\n  TranslationText,\n  DefaultTrailingSpace,\n  GlyphCode\n} from \"./Exsurge.Drawing.js\";\nimport {\n  Note,\n  LiquescentType,\n  NoteShape,\n  NoteShapeModifiers,\n  ChantMapping,\n  ChantScore,\n  ChantDocument,\n  Clef,\n  DoClef,\n  FaClef,\n  TextOnly,\n  ChantLineBreak\n} from \"./Exsurge.Chant.js\";\nimport * as Markings from \"./Exsurge.Chant.Markings.js\";\nimport * as Signs from \"./Exsurge.Chant.Signs.js\";\nimport * as Neumes from \"./Exsurge.Chant.Neumes.js\";\n\n// reusable reg exps\nvar __syllablesRegex = /(?=\\S)([^(]*)(?:\\(?([^)]*)\\)?)?/g;\nvar __altTranslationRegex = /<alt>(.*?)<\\/alt>|\\[(alt:)?(.*?)\\]/g;\n\nvar __notationsRegex = /z0|z|Z|::|:|[,;][1-6]?|`|[cf][1-4]|cb[1-4]|\\/+| |\\!|-?[a-mA-M][oOwWvVrRsxy#~\\+><_\\.'012345]*(?:\\[[^\\]]*\\]?)*|\\{([^}]+)\\}?/g;\nvar __notationsRegex_group_insideBraces = 1;\n\nvar __bracketedCommandRegex = /^([a-z]+):(.*)/;\n\n// for the brace string inside of [ and ] in notation data\n// the capturing groups are:\n//  1. o or u, to indicate over or under\n//  2. b, cb, or cba, to indicate the brace type\n//  3. 0 or 1 to indicate the attachment point\n//  4. { or } to indicate opening/closing (this group will be null if the metric version is used)\n//  5. a float indicating the millimeter length of the brace (not supported yet)\nvar __braceSpecRegex = /([ou])(b|cb|cba):([01])(?:([{}])|;(\\d*(?:\\.\\d+)?)mm)/;\n\nconst TrailingSpaceForAccidental = ctxt =>\n  ctxt.intraNeumeSpacing * ctxt.accidentalSpaceMultiplier;\nconst TrailingSpaceMultiple = multiplier => ctxt =>\n  ctxt.intraNeumeSpacing * multiplier;\n\nconst regexHeaderEnd = /(?:^|\\n)%%\\s?\\n/;\nconst regexHeaderLine = /^([\\w-_.]+):\\s*((?:[^;\\r\\n]|;[ \\t])*)(?:;|$)/i;\nconst regexHeaderComment = /^%.*/;\nexport class GabcHeader {\n  static getLength(gabc) {\n    let match = gabc.match(regexHeaderEnd);\n    return match ? match.index + match[0].length : 0;\n  }\n\n  constructor(text) {\n    if (typeof text !== \"string\") text = \"\";\n    this.comments = [];\n    this.cValues = {};\n    this.original = \"\";\n    let match = text.match(regexHeaderEnd);\n    if (match) {\n      let txtHeader = (this.original = text.slice(\n        0,\n        match.index + match[0].length\n      ));\n      var lines = txtHeader.split(/\\r?\\n/g);\n      for (var i = 0; i < lines.length; ++i) {\n        let line = lines[i],\n          match = regexHeaderLine.exec(line);\n        if (match) {\n          var key = match[1].replace(/-([a-z])/g, function(a, letter) {\n            return letter.toUpperCase();\n          });\n          if (this[match[1]]) {\n            var arrayName = match[1] + \"Array\";\n            if (!this[arrayName]) {\n              this[arrayName] = [this[match[1]]];\n            }\n            this[arrayName].push(match[2]);\n          } else {\n            this[match[1]] = match[2];\n          }\n          if (key !== match[1]) this[key] = this[match[1]];\n        } else if ((match = regexHeaderComment.exec(line))) {\n          if (line !== \"%%\") {\n            match = regexHeaderLine.exec(line.slice(1));\n            if (match) {\n              let key = match[1].replace(/-([a-z])/g, function(a, letter) {\n                return letter.toUpperCase();\n              });\n              this.cValues[match[1]] = match[2];\n              if (key !== match[1]) this.cValues[key] = match[2];\n            } else {\n              this.comments[i] = line;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  toString() {\n    var result = [];\n    for (let key in this) {\n      if (\n        typeof this[key] !== \"string\" ||\n        /^(length|original|comments|cValues)$/.test(key)\n      ) {\n        continue;\n      }\n      var alternateKey = key.replace(/[A-Z]/g, function(letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n      if (alternateKey !== key && alternateKey in this) continue;\n      var array = this[key + \"Array\"];\n      if (array) {\n        for (var i = 0; i < array.length; ++i) {\n          result.push(key + \": \" + array[i] + \";\");\n        }\n      } else {\n        result.push(key + \": \" + this[key] + \";\");\n      }\n    }\n    for (let key in this.cValues) {\n      if (key.length === 0 || !this.cValues.hasOwnProperty(key)) continue;\n      result.push(\"%\" + key + \": \" + this.cValues[key] + \";\");\n    }\n    for (let i in this.comments) {\n      if (!this.comments.hasOwnProperty(i)) continue;\n      try {\n        result.splice(i, 0, this.comments[i]);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    return result.join(\"\\n\") + \"\\n%%\\n\";\n  }\n}\n\nvar elementCountForNotations = items =>\n  items.reduce((sum, item) => sum + (item.notes ? item.notes.length : 1), 0);\n\nexport class Gabc {\n  // takes gabc source code (without the header info) and returns an array\n  // of ChantMappings describing the chant. A chant score can then be created\n  // fron the chant mappings and later updated via updateMappings() if need\n  // be...\n  static createMappingsFromSource(ctxt, gabcSource) {\n    var headerLength = GabcHeader.getLength(gabcSource);\n    gabcSource = gabcSource.slice(headerLength);\n    var words = this.splitWords(gabcSource);\n\n    // set the default clef\n    ctxt.activeClef = Clef.default();\n\n    var mappings = this.createMappingsFromWords(\n      ctxt,\n      words,\n      clef => (ctxt.activeClef = clef)\n    );\n\n    // always set the last notation to have a trailingSpace of 0. This makes layout for the last chant line simpler\n    if (\n      mappings.length > 0 &&\n      mappings[mappings.length - 1].notations.length > 0\n    )\n      mappings[mappings.length - 1].notations[\n        mappings[mappings.length - 1].notations.length - 1\n      ].trailingSpace = 0;\n\n    return mappings;\n  }\n\n  // A simple general purpose diff algorithm adapted here for comparing\n  // an array of existing mappings with an updated list of gabc words.\n  // note before is an array of mappings, and after is an array of strings\n  // (gabc words).\n  //\n  // This is definitely not the most effecient diff algorithm, but for our\n  // limited needs and source size it seems to work just fine...\n  //\n  // code is adapted from: https://github.com/paulgb/simplediff\n  //\n  // Returns:\n  //   A list of pairs, with the first part of the pair being one of three\n  //   strings ('-', '+', '=') and the second part being a list of values from\n  //   the original before and/or after lists. The first part of the pair\n  //   corresponds to whether the list of values is a deletion, insertion, or\n  //   unchanged, respectively.\n  static diffDescriptorsAndNewWords(before, after) {\n    // Create a map from before values to their indices\n    var oldIndexMap = {},\n      i;\n    for (i = 0; i < before.length; i++) {\n      oldIndexMap[before[i].source] = oldIndexMap[before[i].source] || [];\n      oldIndexMap[before[i].source].push(i);\n    }\n\n    var overlap = [],\n      startOld,\n      startNew,\n      subLength,\n      inew;\n\n    startOld = startNew = subLength = 0;\n\n    for (inew = 0; inew < after.length; inew++) {\n      var _overlap = [];\n      oldIndexMap[after[inew]] = oldIndexMap[after[inew]] || [];\n      for (i = 0; i < oldIndexMap[after[inew]].length; i++) {\n        var iold = oldIndexMap[after[inew]][i];\n        // now we are considering all values of val such that\n        // `before[iold] == after[inew]`\n        _overlap[iold] = ((iold && overlap[iold - 1]) || 0) + 1;\n        if (_overlap[iold] > subLength) {\n          // this is the largest substring seen so far, so store its indices\n          subLength = _overlap[iold];\n          startOld = iold - subLength + 1;\n          startNew = inew - subLength + 1;\n        }\n      }\n      overlap = _overlap;\n    }\n\n    if (subLength === 0) {\n      // If no common substring is found, we return an insert and delete...\n      var result = [];\n\n      if (before.length) result.push([\"-\", before]);\n\n      if (after.length) result.push([\"+\", after]);\n\n      return result;\n    }\n\n    // ...otherwise, the common substring is unchanged and we recursively\n    // diff the text before and after that substring\n    return [].concat(\n      this.diffDescriptorsAndNewWords(\n        before.slice(0, startOld),\n        after.slice(0, startNew)\n      ),\n      [[\"=\", after.slice(startNew, startNew + subLength)]],\n      this.diffDescriptorsAndNewWords(\n        before.slice(startOld + subLength),\n        after.slice(startNew + subLength)\n      )\n    );\n  }\n\n  // this function essentially performs and applies a rudimentary diff between a\n  // previously parsed set of mappings and between a new gabc source text.\n  // the mappings array passed in is changed in place to be updated from the\n  // new source\n  static updateMappingsFromSource(\n    ctxt,\n    mappings,\n    newGabcSource,\n    insertionIndex = null,\n    oldInsertionIndex = null\n  ) {\n    var headerLength = GabcHeader.getLength(newGabcSource);\n    newGabcSource = newGabcSource.slice(headerLength);\n    // always remove the last old mapping since it's spacing/trailingSpace is handled specially\n    mappings.pop();\n\n    if (insertionIndex === null) {\n      insertionIndex = NaN;\n    }\n    if (oldInsertionIndex === null) {\n      oldInsertionIndex = NaN;\n    }\n\n    var newWords = this.splitWords(newGabcSource);\n\n    var results = this.diffDescriptorsAndNewWords(mappings, newWords);\n\n    var index = 0,\n      j,\n      k,\n      l,\n      sourceIndex = 0,\n      wordLength = 0,\n      mapping,\n      elementIndex = 0;\n\n    ctxt.activeClef = Clef.default();\n\n    // apply the results to the mappings, marking notations that need to be processed\n    var lastTranslationNeumes = [];\n    for (var i = 0; i < results.length; i++) {\n      var resultCode = results[i][0];\n      var resultValues = results[i][1];\n\n      if (index > 0)\n        sourceIndex =\n          mappings[index - 1].sourceIndex +\n          mappings[index - 1].source.length +\n          1;\n      if (resultCode === \"=\") {\n        var sourceIndexDiff = sourceIndex - mappings[index].sourceIndex;\n        // skip over ones that haven't changed, but updating the clef and source\n        // index (and pitch in case clef or accidentals have changed) as we go\n        for (j = 0; j < resultValues.length; j++, index++) {\n          mapping = mappings[index];\n          if (\n            elementIndex === 0 &&\n            mapping.notations.length &&\n            mapping.notations[0].isClef\n          ) {\n            // the first clef doesn't get kept as a notation:\n            elementIndex = -1;\n          }\n          if (\n            insertionIndex >= elementIndex ||\n            oldInsertionIndex >= elementIndex\n          ) {\n            // check if the insertion index is within this mapping:\n            let elementCount = elementCountForNotations(mapping.notations);\n            if (\n              (insertionIndex >= elementIndex &&\n                insertionIndex < elementIndex + elementCount) ||\n              (oldInsertionIndex >= elementIndex &&\n                oldInsertionIndex < elementIndex + elementCount)\n            ) {\n              // re-do this mapping:\n              // TODO: check sourceIndex\n              let sourceIndex = mapping.sourceIndex + sourceIndexDiff;\n              mapping = this.createMappingFromWord(\n                ctxt,\n                resultValues[j],\n                sourceIndex,\n                lastTranslationNeumes,\n                insertionIndex - elementIndex\n              );\n              mappings.splice(index, 1, mapping);\n\n              elementIndex += elementCount;\n              continue;\n            }\n            elementIndex += elementCount;\n          }\n          mapping.sourceIndex += sourceIndexDiff;\n          for (k = 0; k < mapping.notations.length; k++) {\n            var curNotation = mapping.notations[k];\n            var prevIsAccidental =\n              mapping.notations[k - 1] && mapping.notations[k - 1].isAccidental;\n            // notify the notation that its dependencies are no longer valid\n            curNotation.resetDependencies();\n\n            if (curNotation.isClef) {\n              ctxt.activeClef = mappings[index].notations[k];\n            }\n\n            if (curNotation.isAccidental) {\n              ctxt.activeClef.activeAccidental = curNotation;\n            } else if (\n              curNotation.resetsAccidentals ||\n              (!prevIsAccidental &&\n                curNotation.hasLyrics() &&\n                curNotation.lyrics[0].lyricType <= LyricType.BeginningSyllable)\n            ) {\n              ctxt.activeClef.resetAccidentals();\n            }\n\n            // update source index, pitch, and automatic braces\n            if (curNotation.notes) {\n              for (l = 0; l < curNotation.notes.length; ++l) {\n                let note = curNotation.notes[l];\n                note.sourceIndex += sourceIndexDiff;\n                note.pitch = ctxt.activeClef.staffPositionToPitch(\n                  note.staffPosition\n                );\n                if (note.braceEnd && note.braceEnd.automatic)\n                  delete note.braceEnd;\n                if (this.needToEndBrace && !note.braceStart && !note.braceEnd) {\n                  note.braceEnd = new Markings.BracePoint(\n                    note,\n                    this.needToEndBrace.isAbove,\n                    this.needToEndBrace.shape,\n                    this.needToEndBrace.attachment ===\n                    Markings.BraceAttachment.Left\n                      ? Markings.BraceAttachment.Right\n                      : Markings.BraceAttachment.Left\n                  );\n                  note.braceEnd.automatic = true;\n                  delete this.needToEndBrace;\n                } else if (note.braceStart && note.braceStart.automatic) {\n                  this.needToEndBrace = note.braceStart;\n                }\n              }\n            }\n            if (curNotation.translationText) {\n              for (l = 0; l < curNotation.translationText.length; ++l) {\n                let transText = curNotation.translationText[l];\n                delete transText.endNeume;\n                curNotation.translationText[l].sourceIndex += sourceIndexDiff;\n                if (\n                  transText.textAnchor === \"end\" &&\n                  lastTranslationNeumes[0]\n                ) {\n                  let lastTranslationText =\n                    lastTranslationNeumes[0].translationText[l];\n                  if (lastTranslationText)\n                    lastTranslationText.endNeume = curNotation;\n                }\n              }\n              lastTranslationNeumes[0] = curNotation;\n            }\n            if (sourceIndexDiff) {\n              if (typeof curNotation.sourceIndex === \"number\") {\n                curNotation.sourceIndex += sourceIndexDiff;\n              }\n              for (l = 0; l < curNotation.lyrics.length; ++l) {\n                curNotation.lyrics[l].sourceIndex += sourceIndexDiff;\n              }\n              if (curNotation.alText) {\n                for (l = 0; l < curNotation.alText.length; ++l) {\n                  curNotation.alText[l].sourceIndex += sourceIndexDiff;\n                }\n              }\n            }\n          }\n        }\n      } else if (resultCode === \"-\") {\n        // delete elements that no longer exist, but first notify all\n        // elements of the change\n        mappings.splice(index, resultValues.length);\n      } else if (resultCode === \"+\") {\n        // insert new ones\n        for (j = 0; j < resultValues.length; j++) {\n          wordLength = resultValues[j].length + 1;\n          mapping = this.createMappingFromWord(\n            ctxt,\n            resultValues[j],\n            sourceIndex,\n            lastTranslationNeumes,\n            insertionIndex - elementIndex\n          );\n\n          if (\n            elementIndex === 0 &&\n            mapping.notations.length &&\n            mapping.notations[0].isClef\n          ) {\n            // the first clef doesn't get kept as a notation:\n            elementIndex = -1;\n            let elementCount = elementCountForNotations(mapping.notations);\n            if (insertionIndex < elementCount) {\n              // re-do the first mapping, because it was broken up incorrectly, due to the presence of the initial clef\n              mapping = this.createMappingFromWord(\n                ctxt,\n                resultValues[j],\n                sourceIndex,\n                lastTranslationNeumes,\n                insertionIndex - elementIndex\n              );\n            }\n          }\n\n          for (k = 0; k < mapping.notations.length; k++) {\n            let curNotation = mapping.notations[k];\n            elementIndex += curNotation.notes ? curNotation.notes.length : 1;\n            if (curNotation.isClef) {\n              ctxt.activeClef = mapping.notations[k];\n            }\n          }\n\n          mappings.splice(index++, 0, mapping);\n          sourceIndex += wordLength;\n        }\n      }\n    }\n\n    // always set the last notation to have a trailingSpace of 0. This makes layout for the last chant line simpler\n    if (\n      mappings.length > 0 &&\n      mappings[mappings.length - 1].notations.length > 0\n    )\n      mappings[mappings.length - 1].notations[\n        mappings[mappings.length - 1].notations.length - 1\n      ].trailingSpace = 0;\n\n    return headerLength;\n  }\n\n  // takes an array of gabc words (like that returned by splitWords below)\n  // and returns an array of ChantMapping objects, one for each word.\n  static createMappingsFromWords(ctxt, words) {\n    var mappings = [];\n    var sourceIndex = 0,\n      wordLength = 0,\n      lastTranslationNeumes = [];\n\n    for (var i = 0; i < words.length; i++) {\n      sourceIndex += wordLength;\n      wordLength = words[i].length + 1;\n      var word = words[i].trim();\n\n      if (word === \"\") continue;\n\n      var mapping = this.createMappingFromWord(\n        ctxt,\n        word,\n        sourceIndex,\n        lastTranslationNeumes\n      );\n\n      if (mapping) mappings.push(mapping);\n    }\n\n    return mappings;\n  }\n\n  // takes a gabc word (like those returned by splitWords below) and returns\n  // a ChantMapping object that contains the gabc word source text as well\n  // as the generated notations.\n  static createMappingFromWord(\n    ctxt,\n    word,\n    sourceIndex,\n    lastTranslationNeumes,\n    insertionIndex\n  ) {\n    var matches = [];\n    var notations = [];\n    var currSyllable = 0;\n\n    while ((match = __syllablesRegex.exec(word))) matches.push(match);\n\n    for (var j = 0; j < matches.length; j++) {\n      var match = matches[j];\n\n      var lyricText = match[1].replace(/~/g, \" \");\n      var alText = [];\n      var translationText = [];\n      var notationData = match[2];\n\n      // new words reset the accidentals, per the Solesmes style (see LU xviij)\n      // but we need to also make sure that there _is_ a word and that it has notes associated with it.\n      if (\n        currSyllable === 0 &&\n        /[a-z]/i.test(lyricText) &&\n        /[a-m]/i.test(notationData)\n      )\n        ctxt.activeClef.resetAccidentals();\n\n      var items = this.parseNotations(\n        ctxt,\n        notationData,\n        sourceIndex + match.index + match[1].length + 1,\n        insertionIndex\n      );\n\n      if (items.length === 0) continue;\n\n      if (insertionIndex >= 0)\n        insertionIndex -= elementCountForNotations(items);\n\n      items[0].firstOfSyllable = !!lyricText;\n      items[0].firstOfParentheses = true;\n      notations.push(...items);\n\n      // add the lyrics and/or alText to the first notation that makes sense...\n      var notationWithLyrics = null;\n      for (var i = 0; i < items.length; i++) {\n        var cne = items[i];\n\n        if (cne.isAccidental && i + 1 < items.length) continue;\n\n        notationWithLyrics = cne;\n        break;\n      }\n\n      var m = __altTranslationRegex.exec();\n      let indexOffset = 0;\n      while ((m = __altTranslationRegex.exec(lyricText))) {\n        let index = m.index;\n        lyricText =\n          lyricText.slice(0, index) + lyricText.slice(index + m[0].length);\n        index += sourceIndex + indexOffset + 1;\n        if (typeof m[1] === \"string\") {\n          let elem = new AboveLinesText(\n            ctxt,\n            m[1],\n            notationWithLyrics,\n            index + 4\n          );\n          elem.alIndex = alText.push(elem) - 1;\n        } else if (typeof m[2] === \"string\") {\n          let elem = new AboveLinesText(\n            ctxt,\n            m[3],\n            notationWithLyrics,\n            index + m[2].length\n          );\n          elem.alIndex = alText.push(elem) - 1;\n        } else {\n          let elem = new TranslationText(ctxt, m[3], notationWithLyrics, index);\n          elem.translationIndex = translationText.push(elem) - 1;\n        }\n        indexOffset += m[0].length;\n        __altTranslationRegex.exec();\n      }\n      if (lyricText === \"\" && alText.length === 0) continue;\n\n      if (notationWithLyrics === null)\n        return new ChantMapping(word, notations, sourceIndex);\n\n      if (alText.length) notationWithLyrics.alText = alText;\n\n      if (translationText.length) {\n        notationWithLyrics.translationText = translationText;\n        for (i = 0; i < translationText.length; ++i) {\n          let transText = translationText[i];\n          if (transText.textAnchor === \"end\" && lastTranslationNeumes[0]) {\n            let lastTranslationText =\n              lastTranslationNeumes[0].translationText[i];\n            if (lastTranslationText)\n              lastTranslationText.endNeume = notationWithLyrics;\n          }\n        }\n        lastTranslationNeumes[0] = notationWithLyrics;\n      }\n\n      if (lyricText === \"\") continue;\n\n      var proposedLyricType;\n\n      // if it's not a neume or a TextOnly notation, then make the lyrics a directive\n      if (!cne.isNeume && cne.constructor !== TextOnly)\n        proposedLyricType = LyricType.Directive;\n      // otherwise trye to guess the lyricType for the first lyric anyway\n      else if (currSyllable === 0 && j === matches.length - 1)\n        proposedLyricType = LyricType.SingleSyllable;\n      else if (currSyllable === 0 && j < matches.length - 1)\n        proposedLyricType = LyricType.BeginningSyllable;\n      else if (j === matches.length - 1)\n        proposedLyricType = LyricType.EndingSyllable;\n      else proposedLyricType = LyricType.MiddleSyllable;\n\n      currSyllable++;\n\n      var lyrics = this.createSyllableLyrics(\n        ctxt,\n        lyricText,\n        proposedLyricType,\n        notationWithLyrics,\n        items,\n        sourceIndex + match.index\n      );\n\n      if (lyrics === null || lyrics.length === 0) continue;\n\n      notationWithLyrics.lyrics = lyrics;\n    }\n\n    return new ChantMapping(word, notations, sourceIndex);\n  }\n\n  // returns an array of lyrics (an array because each syllable can have multiple lyrics)\n  static createSyllableLyrics(\n    ctxt,\n    text,\n    proposedLyricType,\n    notation,\n    notations,\n    sourceIndex\n  ) {\n    var lyrics = [];\n\n    // an extension to gabc: multiple lyrics per syllable can be separated by a |\n    var lyricTexts = text.split(\"|\");\n\n    for (var i = 0; i < lyricTexts.length; i++) {\n      var lyricText = lyricTexts[i];\n\n      if (i > 0) {\n        if (lyricText.match(/\\s$/)) {\n          lyricText = lyricText.replace(/s+$/, \"\");\n          proposedLyricType = LyricType.EndingSyllable;\n        } else {\n          proposedLyricType = LyricType.MiddleSyllable;\n        }\n      }\n\n      // gabc allows lyrics to indicate the centering part of the text by\n      // using braces to indicate how to center the lyric. So a lyric can\n      // look like \"f{i}re\" or \"{fenced}\" to center on the i or on the entire\n      // word, respectively. Here we determine if the lyric should be spaced\n      // manually with this method of using braces.\n      var centerStartIndex = lyricText.indexOf(\"{\");\n      var centerLength = 0;\n\n      if (centerStartIndex >= 0) {\n        let indexClosingBracket = lyricText.indexOf(\"}\");\n\n        if (\n          indexClosingBracket >= 0 &&\n          indexClosingBracket > centerStartIndex\n        ) {\n          centerLength = indexClosingBracket - centerStartIndex - 1;\n\n          // strip out the brackets...is this better than string.replace?\n          lyricText =\n            lyricText.substring(0, centerStartIndex) +\n            lyricText.substring(centerStartIndex + 1, indexClosingBracket) +\n            lyricText.substring(indexClosingBracket + 1, lyricText.length);\n        } else centerStartIndex = -1; // if there's no closing bracket, don't enable centering\n      }\n\n      var lyric = this.makeLyric(\n        ctxt,\n        lyricText,\n        proposedLyricType,\n        notation,\n        notations,\n        sourceIndex\n      );\n\n      if (centerStartIndex) {\n        // update indices in case there had been any tags, etc.\n        let textIndex = 0,\n          centerEndIndex = -1;\n        for (let span of lyric.spans) {\n          if (\n            centerStartIndex >= span.sourceIndex &&\n            centerStartIndex < span.sourceIndex + span.text.length\n          ) {\n            centerStartIndex += textIndex - span.sourceIndex;\n            centerEndIndex = centerStartIndex + centerLength;\n          } else if (\n            centerEndIndex >= 0 &&\n            centerEndIndex >= span.sourceIndex &&\n            centerEndIndex < span.sourceIndex + span.text.length\n          ) {\n            centerEndIndex += textIndex - span.sourceIndex;\n            break;\n          }\n          textIndex += span.text.length;\n        }\n      }\n\n      // if we have manual lyric centering, then set it now\n      if (centerStartIndex >= 0) {\n        lyric.centerStartIndex = centerStartIndex;\n        lyric.centerLength = centerLength;\n      }\n\n      lyric.lyricIndex = lyrics.push(lyric) - 1;\n      sourceIndex += lyricText.length + 1;\n    }\n    notation.lyrics = lyrics;\n    return lyrics;\n  }\n\n  static makeLyric(ctxt, text, lyricType, notation, notations, sourceIndex) {\n    var elides = false;\n    var forceConnector = false;\n    if (text.length > 1) {\n      if (text[text.length - 1] === \"-\") {\n        forceConnector = true;\n        if (lyricType === LyricType.EndingSyllable)\n          lyricType = LyricType.MiddleSyllable;\n        else if (lyricType === LyricType.SingleSyllable)\n          lyricType = LyricType.BeginningSyllable;\n\n        text = text.slice(0, -1);\n      } else if (text[text.length - 1] === \" \") {\n        if (lyricType === LyricType.MiddleSyllable)\n          lyricType = LyricType.EndingSyllable;\n        else if (lyricType === LyricType.BeginningSyllable)\n          lyricType = LyricType.SingleSyllable;\n\n        text = text.slice(0, -1);\n      } else if (/<\\/i>$/.test(text)) {\n        // must be an elision\n        elides = true;\n      }\n    }\n\n    if (text.match(/^(?:[*†]+|i+j|\\d+)\\.?$/)) lyricType = LyricType.Directive;\n\n    var lyric = new Lyric(\n      ctxt,\n      text,\n      lyricType,\n      notation,\n      notations,\n      sourceIndex\n    );\n    lyric.elidesToNext = elides;\n    if (forceConnector) lyric.setForceConnector(true);\n\n    return lyric;\n  }\n\n  // takes a string of gabc notations and creates exsurge objects out of them.\n  // returns an array of notations.\n  static parseNotations(ctxt, data, sourceIndex, insertionIndex) {\n    // if there is no data, then this must be a text only object\n    if (!data) return [new TextOnly(sourceIndex, 0)];\n\n    var baseSourceIndex = sourceIndex;\n    var sourceLength = 0;\n    var notations = [];\n    var notes = [];\n    var trailingSpace = DefaultTrailingSpace;\n\n    var addToLastSourceGabc = gabc => {\n      if (notes.length > 0) {\n        notes[notes.length - 1].sourceGabc += gabc;\n      }\n    };\n    var addNotation = notation => {\n      // first, if we have any notes left over, we create a neume out of them\n      if (notes.length > 0) {\n        // create neume(s)\n        var neumes = this.createNeumesFromNotes(ctxt, notes, trailingSpace);\n        for (var i = 0; i < neumes.length; i++) notations.push(neumes[i]);\n\n        notes = [];\n      }\n\n      // reset the trailing space\n      trailingSpace = DefaultTrailingSpace;\n\n      // then, if we're passed a notation, let's add it\n      // also, perform chant logic here\n      if (notation !== null) {\n        let prevNotation = notations[notations.length - 1];\n        notation.sourceIndex = sourceIndex;\n        notation.sourceGabc = match[0];\n        if (notation.isClef) {\n          ctxt.activeClef = notation;\n          if (\n            prevNotation &&\n            prevNotation.trailingSpace.isDefault &&\n            prevNotation.isDivider\n          ) {\n            prevNotation.trailingSpace = TrailingSpaceForAccidental;\n          }\n        } else if (notation.isAccidental) {\n          ctxt.activeClef.activeAccidental = notation;\n        } else if (\n          notation.trailingSpace.isDefault &&\n          notation instanceof Signs.Custos\n        ) {\n          notation.trailingSpace = TrailingSpaceForAccidental;\n        } else if (notation.resetsAccidentals)\n          ctxt.activeClef.resetAccidentals();\n\n        notations.push(notation);\n      }\n    };\n\n    var regex = new RegExp(__notationsRegex.source, \"g\");\n    var match;\n\n    while ((match = regex.exec(data))) {\n      sourceIndex = baseSourceIndex + match.index;\n      sourceLength = match[0].length;\n      var atom = match[0];\n\n      // handle the clefs and dividers here\n      switch (atom) {\n        case \",\":\n          addNotation(new Signs.QuarterBar());\n          break;\n        case \"`\":\n          addNotation(new Signs.Virgula());\n          break;\n        case \";\":\n          addNotation(new Signs.HalfBar());\n          break;\n        case \";1\":\n        case \";2\":\n        case \";3\":\n        case \";4\":\n        case \";5\":\n        case \";6\":\n        case \",1\":\n        case \",2\":\n        case \",3\":\n        case \",4\":\n        case \",5\":\n        case \",6\":\n          addNotation(new Signs.DominicanBar(parseInt(atom[1], 10)));\n          break;\n        case \":\":\n          addNotation(new Signs.FullBar());\n          break;\n        case \"::\":\n          addNotation(new Signs.DoubleBar());\n          break;\n        // other gregorio dividers are not supported yet\n\n        case \"c1\":\n          addNotation((ctxt.activeClef = new DoClef(-3, 2)));\n          break;\n\n        case \"c2\":\n          addNotation((ctxt.activeClef = new DoClef(-1, 2)));\n          break;\n\n        case \"c3\":\n          addNotation((ctxt.activeClef = new DoClef(1, 2)));\n          break;\n\n        case \"c4\":\n          addNotation((ctxt.activeClef = new DoClef(3, 2)));\n          break;\n\n        case \"f1\":\n          addNotation((ctxt.activeClef = new FaClef(-3, 2)));\n          break;\n\n        case \"f2\":\n          addNotation((ctxt.activeClef = new FaClef(-1, 2)));\n          break;\n\n        case \"f3\":\n          addNotation((ctxt.activeClef = new FaClef(1, 2)));\n          break;\n\n        case \"f4\":\n          addNotation((ctxt.activeClef = new FaClef(3, 2)));\n          break;\n\n        case \"cb1\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              -3,\n              2,\n              new Signs.Accidental(-4, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"cb2\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              -1,\n              2,\n              new Signs.Accidental(-2, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"cb3\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              1,\n              2,\n              new Signs.Accidental(0, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"cb4\":\n          addNotation(\n            (ctxt.activeClef = new DoClef(\n              3,\n              2,\n              new Signs.Accidental(2, Signs.AccidentalType.Flat)\n            ))\n          );\n          break;\n\n        case \"z\":\n          addNotation(new ChantLineBreak(true));\n          break;\n        case \"Z\":\n          addNotation(new ChantLineBreak(false));\n          break;\n        case \"z0\":\n          addNotation(new Signs.Custos(true));\n          break;\n\n        // spacing indicators\n        case \"!\":\n          trailingSpace = 0;\n          addToLastSourceGabc(atom);\n          addNotation(null);\n          break;\n        case \" \":\n          // fixme: is this correct? logically what is the difference in gabc\n          // between putting a space between notes vs putting '//' between notes?\n          trailingSpace = TrailingSpaceMultiple(2);\n          addToLastSourceGabc(atom);\n          addNotation(null);\n          break;\n\n        default:\n          // might be a number of slashes, a custos, might be an accidental, or might be a note\n          if (atom[0] === \"/\") {\n            trailingSpace = TrailingSpaceMultiple(atom.length);\n            addToLastSourceGabc(atom);\n            addNotation(null);\n          } else if (atom.length > 1 && atom[1] === \"+\") {\n            // custos\n            var custos = new Signs.Custos();\n\n            custos.staffPosition = this.gabcHeightToExsurgeHeight(atom[0]);\n\n            addNotation(custos);\n          } else if (atom.length > 1 && /[xy#]/.test(atom[1])) {\n            var accidentalType;\n\n            switch (atom[1]) {\n              case \"y\":\n                accidentalType = Signs.AccidentalType.Natural;\n                break;\n              case \"#\":\n                accidentalType = Signs.AccidentalType.Sharp;\n                break;\n              default:\n                accidentalType = Signs.AccidentalType.Flat;\n                break;\n            }\n\n            var noteArray = [];\n            this.createNoteFromData(\n              ctxt,\n              ctxt.activeClef,\n              atom,\n              noteArray,\n              sourceIndex\n            );\n            var accidental = new Signs.Accidental(\n              noteArray[0].staffPosition,\n              accidentalType\n            );\n            accidental.pitch = this.gabcHeightToExsurgePitch(\n              ctxt.activeClef,\n              atom[0]\n            );\n            accidental.sourceIndex = sourceIndex;\n            accidental.sourceLength = sourceLength;\n            accidental.trailingSpace = TrailingSpaceForAccidental;\n\n            ctxt.activeClef.activeAccidental = accidental;\n\n            addNotation(accidental);\n          } else if (atom.length > 1 && atom[0] === \"{\") {\n            trailingSpace = 0;\n            addNotation(null);\n            let bracketedNotations = this.parseNotations(\n              ctxt,\n              match[__notationsRegex_group_insideBraces],\n              sourceIndex + 1\n            );\n            // Set the width of these notations to 0\n            bracketedNotations.forEach(neume => {\n              neume.hasNoWidth = true;\n              neume.firstWithNoWidth = bracketedNotations[0];\n            });\n            notations.push(...bracketedNotations);\n          } else {\n            // looks like it's a note\n            if (insertionIndex === -1) {\n              trailingSpace = TrailingSpaceMultiple(1);\n              addNotation(null);\n            }\n            this.createNoteFromData(\n              ctxt,\n              ctxt.activeClef,\n              atom,\n              notes,\n              sourceIndex\n            );\n            --insertionIndex;\n          }\n          break;\n      }\n    }\n\n    // finish up any remaining notes we have left\n    addNotation(null);\n\n    return notations;\n  }\n\n  static createNeumesFromNotes(ctxt, notes, finalTrailingSpace) {\n    var neumes = [];\n    var firstNoteIndex = 0;\n    var currNoteIndex = 0;\n\n    // here we use a simple finite state machine to create the neumes from the notes\n    // createNeume is helper function which returns the next state after a neume is created\n    // (unknownState). Each state object has a neume() function and a handle() function.\n    // neume() allows us to create the neume of the state in the event that we run out\n    // of notes. handle() gives the state an opportunity to examine the currNote and\n    // determine what to do...either transition to a different neume/state, or\n    // continue building the neume of that state. handle() returns the next state\n\n    var createNeume = function(neume, includeCurrNote, includePrevNote = true) {\n      // add the notes to the neume\n      var lastNoteIndex;\n      if (includeCurrNote) lastNoteIndex = currNoteIndex;\n      else if (includePrevNote) lastNoteIndex = currNoteIndex - 1;\n      else lastNoteIndex = currNoteIndex - 2;\n\n      if (lastNoteIndex < 0) return;\n\n      while (firstNoteIndex <= lastNoteIndex) {\n        let note = notes[firstNoteIndex++];\n        neume.addNote(note);\n        if (note.alText) {\n          if (!neume.alText) neume.alText = [];\n          neume.alText.push(note.alText);\n          note.alText.noteIndex = firstNoteIndex - 1;\n        }\n      }\n\n      neumes.push(neume);\n\n      if (includeCurrNote === false) {\n        currNoteIndex--;\n\n        if (includePrevNote === false) currNoteIndex--;\n\n        neume.keepWithNext = true;\n        if (notes[currNoteIndex + 1].shape === NoteShape.Quilisma)\n          neume.trailingSpace = 0;\n        else {\n          neume.trailingSpace = TrailingSpaceMultiple(1);\n          neume.allowLineBreakBeforeNext = true;\n        }\n      }\n\n      return unknownState;\n    };\n\n    var unknownState = {\n      neume: function() {\n        return new Neumes.Punctum();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape === NoteShape.Virga) return virgaState;\n        else if (currNote.shape === NoteShape.Stropha) return apostrophaState;\n        else if (currNote.shape === NoteShape.Oriscus) return oriscusState;\n        else if (currNote.shape === NoteShape.Inclinatum)\n          return punctaInclinataState;\n        else if (currNote.shapeModifiers & NoteShapeModifiers.Cavum)\n          return createNeume(new Neumes.Punctum(), true);\n        else return punctumState;\n      }\n    };\n\n    var punctumState = {\n      neume: function() {\n        return new Neumes.Punctum();\n      },\n      handle: function(currNote, prevNote, notesRemaining) {\n        if (currNote.shape || prevNote.liquescent === LiquescentType.Small) {\n          var neume = new Neumes.Punctum();\n          var state = createNeume(neume, false);\n          // if the current note is on a space within the staff AND the previous note is on the line below AND the previous note has a mora,\n          // then we went the trailing space at its default of intraNeumeSpacing to prevent the dot from running up into the current note.\n          // Otherwise, we want no trailing space.\n          if (\n            currNote.staffPosition > prevNote.staffPosition &&\n            (currNote.staffPosition % 2 === 1 ||\n              prevNote.staffPosition !== currNote.staffPosition - 1 ||\n              !prevNote.morae ||\n              prevNote.morae.length === 0)\n          )\n            neume.trailingSpace = 0;\n          return state;\n        }\n\n        if (currNote.staffPosition > prevNote.staffPosition) {\n          if (currNote.ictus)\n            currNote.ictus.positionHint = MarkingPositionHint.Above;\n          return podatusState;\n        } else if (currNote.staffPosition < prevNote.staffPosition) {\n          if (prevNote.ictus)\n            prevNote.ictus.positionHint = MarkingPositionHint.Above;\n          if (currNote.shape === NoteShape.Inclinatum) return climacusState;\n          else if (prevNote.staffPosition - currNote.staffPosition <= 4) {\n            return clivisState;\n          }\n        } else if (!prevNote.morae || !prevNote.morae.length) {\n          return distrophaState;\n        }\n        return createNeume(new Neumes.Punctum(), false);\n      }\n    };\n\n    var punctaInclinataState = {\n      neume: function() {\n        return new Neumes.PunctaInclinata();\n      },\n      handle: function() {\n        if (currNote.shape !== NoteShape.Inclinatum)\n          return createNeume(new Neumes.PunctaInclinata(), false);\n        else return punctaInclinataState;\n      }\n    };\n\n    var oriscusState = {\n      neume: function() {\n        return new Neumes.Oriscus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape === NoteShape.Default) {\n          if (currNote.staffPosition > prevNote.staffPosition) {\n            prevNote.shapeModifiers |= NoteShapeModifiers.Ascending;\n            return createNeume(new Neumes.PesQuassus(), true);\n          } else if (currNote.staffPosition < prevNote.staffPosition) {\n            prevNote.shapeModifiers |= NoteShapeModifiers.Descending;\n            return createNeume(new Neumes.Clivis(), true);\n          }\n        }\n        // stand alone oriscus\n        var neume = new Neumes.Oriscus(),\n          state = createNeume(neume, false);\n        // if the current note is on a space within the staff AND the previous note is on the line below AND the previous note has a mora,\n        // then we went the trailing space at its default of intraNeumeSpacing to prevent the dot from running up into the current note.\n        // Otherwise, we want no trailing space.\n        if (\n          currNote.staffPosition > prevNote.staffPosition &&\n          (currNote.staffPosition % 2 === 1 ||\n            prevNote.staffPosition !== currNote.staffPosition - 1 ||\n            !prevNote.morae ||\n            prevNote.morae.length === 0)\n        )\n          neume.trailingSpace = 0;\n        return state;\n      }\n    };\n\n    var podatusState = {\n      neume: function() {\n        return new Neumes.Podatus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition > prevNote.staffPosition) {\n          if (currNote.ictus)\n            currNote.ictus.positionHint = MarkingPositionHint.Above;\n          if (prevNote.ictus)\n            prevNote.ictus.positionHint = MarkingPositionHint.Below;\n\n          if (prevNote.shape === NoteShape.Oriscus) return salicusState;\n          else return scandicusState;\n        } else if (currNote.staffPosition < prevNote.staffPosition) {\n          if (currNote.shape === NoteShape.Inclinatum)\n            return pesSubpunctisState;\n          else return torculusState;\n        } else return createNeume(new Neumes.Podatus(), false);\n      }\n    };\n\n    var clivisState = {\n      neume: function() {\n        return new Neumes.Clivis();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition > prevNote.staffPosition\n        ) {\n          if (currNote.ictus)\n            currNote.ictus.positionHint = MarkingPositionHint.Above;\n          return porrectusState;\n        } else return createNeume(new Neumes.Clivis(), false);\n      }\n    };\n\n    var climacusState = {\n      neume: function() {\n        return new Neumes.Climacus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape !== NoteShape.Inclinatum)\n          return createNeume(new Neumes.Climacus(), false);\n        else return state;\n      }\n    };\n\n    var porrectusState = {\n      neume: function() {\n        return new Neumes.Porrectus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return createNeume(new Neumes.PorrectusFlexus(), true);\n        else return createNeume(new Neumes.Porrectus(), false);\n      }\n    };\n\n    var pesSubpunctisState = {\n      neume: function() {\n        return new Neumes.PesSubpunctis();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.shape !== NoteShape.Inclinatum)\n          return createNeume(new Neumes.PesSubpunctis(), false);\n        else return state;\n      }\n    };\n\n    var salicusState = {\n      neume: function() {\n        return new Neumes.Salicus();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition < prevNote.staffPosition)\n          return salicusFlexusState;\n        else return createNeume(new Neumes.Salicus(), false);\n      }\n    };\n\n    var salicusFlexusState = {\n      neume: function() {\n        return new Neumes.SalicusFlexus();\n      },\n      handle: function(currNote, prevNote) {\n        return createNeume(new Neumes.SalicusFlexus(), false);\n      }\n    };\n\n    var scandicusState = {\n      neume: function() {\n        return new Neumes.Scandicus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          prevNote.shape === NoteShape.Virga &&\n          currNote.shape === NoteShape.Inclinatum &&\n          currNote.staffPosition < prevNote.staffPosition\n        ) {\n          // if we get here, then it seems we have a podatus, now being followed by a climacus\n          // rather than a scandicus. react accordingly\n          return createNeume(new Neumes.Podatus(), false, false);\n        } else if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return scandicusFlexusState;\n        else return createNeume(new Neumes.Scandicus(), false);\n      }\n    };\n\n    var scandicusFlexusState = {\n      neume: function() {\n        return new Neumes.ScandicusFlexus();\n      },\n      handle: function(currNote, prevNote) {\n        return createNeume(new Neumes.ScandicusFlexus(), false);\n      }\n    };\n\n    var virgaState = {\n      neume: function() {\n        return new Neumes.Virga();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Inclinatum &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return climacusState;\n        else if (\n          currNote.shape === NoteShape.Virga &&\n          currNote.staffPosition === prevNote.staffPosition\n        )\n          return bivirgaState;\n        else return createNeume(new Neumes.Virga(), false);\n      }\n    };\n\n    var bivirgaState = {\n      neume: function() {\n        return new Neumes.Bivirga();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Virga &&\n          currNote.staffPosition === prevNote.staffPosition\n        )\n          return createNeume(new Neumes.Trivirga(), true);\n        else return createNeume(new Neumes.Bivirga(), false);\n      }\n    };\n\n    var apostrophaState = {\n      neume: function() {\n        return new Neumes.Apostropha();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition === prevNote.staffPosition)\n          return distrophaState;\n        else return createNeume(new Neumes.Apostropha(), false);\n      }\n    };\n\n    var distrophaState = {\n      neume: function() {\n        return new Neumes.Distropha();\n      },\n      handle: function(currNote, prevNote) {\n        if (currNote.staffPosition === prevNote.staffPosition) {\n          if (prevNote.morae && prevNote.morae.length) {\n            return createNeume(new Neumes.Distropha(), false);\n          } else {\n            return tristrophaState;\n          }\n        } else return createNeume(new Neumes.Apostropha(), false, false);\n      }\n    };\n\n    var tristrophaState = {\n      neume: function() {\n        return new Neumes.Tristropha();\n      },\n      handle: function(currNote, prevNote) {\n        // we only create a tristropha when the note run ends after three\n        // and the neume() function of this state is called. Otherwise\n        // we always interpret the third note to belong to the next sequence\n        // of notes.\n        //\n        // fixme: gabc allows any number of punctum/stropha in succession...\n        // is this a valid neume type? Or is it just multiple *stropha neumes\n        // in succession? Should we simplify the apostropha/distropha/\n        // tristropha classes to a generic stropha neume that can have 1 or\n        // more successive notes?\n        return createNeume(new Neumes.Distropha(), false, false);\n      }\n    };\n\n    var torculusState = {\n      neume: function() {\n        return new Neumes.Torculus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition > prevNote.staffPosition\n        ) {\n          let prevNoteButOne = notes[currNoteIndex - 2];\n          if (\n            prevNoteButOne &&\n            prevNoteButOne.staffPosition - prevNote.staffPosition <= 4\n          ) {\n            if (currNote.ictus)\n              currNote.ictus.positionHint = MarkingPositionHint.Above;\n            return torculusResupinusState;\n          }\n        }\n        return createNeume(new Neumes.Torculus(), false);\n      }\n    };\n\n    var torculusResupinusState = {\n      neume: function() {\n        return new Neumes.TorculusResupinus();\n      },\n      handle: function(currNote, prevNote) {\n        if (\n          currNote.shape === NoteShape.Default &&\n          currNote.staffPosition < prevNote.staffPosition\n        )\n          return createNeume(new Neumes.TorculusResupinusFlexus(), true);\n        else return createNeume(new Neumes.TorculusResupinus(), false);\n      }\n    };\n\n    var state = unknownState;\n\n    while (currNoteIndex < notes.length) {\n      var prevNote = currNoteIndex > 0 ? notes[currNoteIndex - 1] : null;\n      var currNote = notes[currNoteIndex];\n\n      state = state.handle(\n        currNote,\n        prevNote,\n        notes.length - 1 - currNoteIndex\n      );\n\n      // if we are on the last note, then try to create a neume if we need to.\n      if (currNoteIndex === notes.length - 1 && state !== unknownState)\n        createNeume(state.neume(), true);\n\n      currNoteIndex++;\n    }\n\n    if (neumes.length > 0) {\n      if (!finalTrailingSpace.isDefault) {\n        neumes[neumes.length - 1].trailingSpace = finalTrailingSpace;\n        neumes[neumes.length - 1].keepWithNext = true;\n\n        if (finalTrailingSpace > 0)\n          neumes[neumes.length - 1].allowLineBreakBeforeNext = neumes[\n            neumes.length - 1\n          ].keepWithNext = true;\n      }\n    }\n\n    return neumes;\n  }\n\n  // appends any notes created to the notes array argument\n  static createNoteFromData(ctxt, clef, data, notes, sourceIndex) {\n    var note = new Note();\n    note.sourceIndex = sourceIndex;\n    note.sourceGabc = data;\n\n    if (data.length < 1) throw \"Invalid note data: \" + data;\n\n    if (data[0] === \"-\") {\n      // liquescent initio debilis\n      note.liquescent = LiquescentType.InitioDebilis;\n      data = data.substring(1);\n    }\n\n    if (data.length < 1) throw \"Invalid note data: \" + data;\n\n    // the next char is always the pitch\n    var pitch = this.gabcHeightToExsurgePitch(clef, data[0]);\n\n    if (data[0] === data[0].toUpperCase()) note.shape = NoteShape.Inclinatum;\n\n    note.staffPosition = this.gabcHeightToExsurgeHeight(data[0]);\n    note.pitch = pitch;\n\n    var mark;\n\n    var episemaNoteIndex = notes.length;\n    var episemaNote = note;\n\n    // process the modifiers\n    for (var i = 1; i < data.length; i++) {\n      var c = data[i];\n      var lookahead = \"\\0\";\n\n      var haveLookahead = i + 1 < data.length;\n      if (haveLookahead) lookahead = data[i + 1];\n\n      switch (c) {\n        // rhythmic markings\n        case \".\":\n          mark = null;\n\n          // gabc supports putting up to two morae on each note, by repeating the\n          // period. here, we check to see if we've already created a mora for the\n          // note, and if so, we simply force the second one to have an Above\n          // position hint. if a user decides to try to put position indicators\n          // on the double morae (such as 1 or 2), then really the behavior is\n          // not defined by gabc, so it's on the user to figure it out.\n          if (note.morae.length > 0 && notes.length) {\n            var previousNote = notes.slice(-1)[0];\n            var previousMora = note.morae.slice(-1)[0];\n            previousMora.note = previousNote;\n          }\n\n          mark = new Markings.Mora(ctxt, note);\n          if (haveLookahead && lookahead === \"1\")\n            mark.positionHint = MarkingPositionHint.Above;\n          else if (haveLookahead && lookahead === \"0\")\n            mark.positionHint = MarkingPositionHint.Below;\n\n          note.morae.push(mark);\n          break;\n\n        case \"_\":\n          var episemaHadModifier = false;\n\n          mark = new Markings.HorizontalEpisema(episemaNote);\n          while (haveLookahead) {\n            if (lookahead === \"0\")\n              mark.positionHint = MarkingPositionHint.Below;\n            else if (lookahead === \"1\")\n              mark.positionHint = MarkingPositionHint.Above;\n            else if (lookahead === \"2\") mark.terminating = true;\n            // episema terminates\n            else if (lookahead === \"3\")\n              mark.alignment = Markings.HorizontalEpisemaAlignment.Left;\n            else if (lookahead === \"4\")\n              mark.alignment = Markings.HorizontalEpisemaAlignment.Center;\n            else if (lookahead === \"5\")\n              mark.alignment = Markings.HorizontalEpisemaAlignment.Right;\n            else break;\n\n            // the gabc definition for episemata is so convoluted...\n            // - double underscores create episemata over multiple notes.\n            // - unless the _ has a 0, 1, 3, 4, or 5 modifier, which means\n            //   another underscore puts a second episema on the same note\n            // - (when there's a 2 lookahead, then this is treated as an\n            //   unmodified underscore, so another underscore would be\n            //   added to previous notes\n            if (\n              mark.alignment !== Markings.HorizontalEpisemaAlignment.Default &&\n              mark.positionHint !== MarkingPositionHint.Below\n            )\n              episemaHadModifier = true;\n\n            i++;\n            haveLookahead = i + 1 < data.length;\n\n            if (haveLookahead) lookahead = data[i + 1];\n          }\n\n          // since gabc allows consecutive underscores which is a shortcut to\n          // apply the episemata to previous notes, we keep track of that here\n          // in order to add the new episema to the correct note.\n\n          if (episemaNote) episemaNote.episemata.push(mark);\n\n          if (episemaNote === note && episemaHadModifier) episemaNote = note;\n          else if (episemaNoteIndex >= 0 && notes.length > 0)\n            episemaNote = notes[--episemaNoteIndex];\n\n          break;\n\n        case \"'\":\n          mark = new Markings.Ictus(ctxt, note);\n          if (haveLookahead && lookahead === \"1\")\n            mark.positionHint = MarkingPositionHint.Above;\n          else if (haveLookahead && lookahead === \"0\")\n            mark.positionHint = MarkingPositionHint.Below;\n          else if (note.shape === NoteShape.Virga)\n            // ictus on a virga goes above by default:\n            mark.positionHint = MarkingPositionHint.Above;\n\n          note.ictus = mark;\n          break;\n\n        //note shapes\n        case \"r\":\n          if (haveLookahead && /^[1-5]$/.test(lookahead)) {\n            switch (lookahead) {\n              case \"1\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.AcuteAccent\n                );\n                break;\n              case \"2\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.GraveAccent\n                );\n                break;\n              case \"3\":\n                note.accent = new Markings.Accent(ctxt, note, GlyphCode.Circle);\n                break;\n              case \"4\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.Semicircle\n                );\n                break;\n              case \"5\":\n                note.accent = new Markings.Accent(\n                  ctxt,\n                  note,\n                  GlyphCode.ReversedSemicircle\n                );\n                break;\n              default:\n            }\n            i++;\n          } else note.shapeModifiers |= NoteShapeModifiers.Cavum;\n          break;\n\n        case \"s\":\n          if (note.shape === NoteShape.Stropha) {\n            // if we're already a stropha, that means this is gabc's\n            // quick stropha feature (e.g., gsss). create a new note\n            let newNote = new Note();\n            newNote.sourceIndex = sourceIndex + i;\n            newNote.sourceGabc = \"s\";\n            newNote.staffPosition = note.staffPosition;\n            newNote.pitch = note.pitch;\n            notes.push(note);\n            note = newNote;\n            episemaNoteIndex++; // since a new note was added, increase the index here\n          }\n\n          note.shape = NoteShape.Stropha;\n          break;\n\n        case \"v\":\n          if (note.shape === NoteShape.Virga) {\n            // if we're already a stropha, that means this is gabc's\n            // quick virga feature (e.g., gvvv). create a new note\n            let newNote = new Note();\n            newNote.sourceIndex = sourceIndex + i;\n            newNote.sourceGabc = \"v\";\n            newNote.staffPosition = note.staffPosition;\n            newNote.pitch = note.pitch;\n            notes.push(note);\n            note = newNote;\n            episemaNoteIndex++; // since a new note was added, increase the index here\n          }\n\n          note.shape = NoteShape.Virga;\n          break;\n\n        case \"w\":\n          note.shape = NoteShape.Quilisma;\n          break;\n\n        case \"o\":\n          note.shape = NoteShape.Oriscus;\n          if (haveLookahead && lookahead === \"<\") {\n            note.shapeModifiers |= NoteShapeModifiers.Ascending;\n            i++;\n          } else if (haveLookahead && lookahead === \">\") {\n            note.shapeModifiers |= NoteShapeModifiers.Descending;\n            i++;\n          }\n          break;\n\n        case \"O\":\n          note.shape = NoteShape.Oriscus;\n          if (haveLookahead && lookahead === \"<\") {\n            note.shapeModifiers |=\n              NoteShapeModifiers.Ascending | NoteShapeModifiers.Stemmed;\n            i++;\n          } else if (haveLookahead && lookahead === \">\") {\n            note.shapeModifiers |=\n              NoteShapeModifiers.Descending | NoteShapeModifiers.Stemmed;\n            i++;\n          } else note.shapeModifiers |= NoteShapeModifiers.Stemmed;\n          break;\n\n        // liquescents\n        case \"~\":\n          if (note.shape === NoteShape.Inclinatum)\n            note.liquescent |= LiquescentType.Small;\n          else if (note.shape === NoteShape.Oriscus)\n            note.liquescent |= LiquescentType.Large;\n          else note.liquescent |= LiquescentType.Small;\n          break;\n        case \"<\":\n          note.liquescent |= LiquescentType.Ascending;\n          break;\n        case \">\":\n          note.liquescent |= LiquescentType.Descending;\n          break;\n\n        // accidentals\n        case \"x\":\n          if (note.pitch.step === Step.Mi) note.pitch.step = Step.Me;\n          else if (note.pitch.step === Step.Ti) note.pitch.step = Step.Te;\n          break;\n        case \"y\":\n          if (note.pitch.step === Step.Te) note.pitch.step = Step.Ti;\n          else if (note.pitch.step === Step.Me) note.pitch.step = Step.Mi;\n          else if (note.pitch.step === Step.Du) note.pitch.step = Step.Do;\n          else if (note.pitch.step === Step.Fu) note.pitch.step = Step.Fa;\n          break;\n        case \"#\":\n          if (note.pitch.step === Step.Do) note.pitch.step = Step.Du;\n          else if (note.pitch.step === Step.Fa) note.pitch.step = Step.Fu;\n          break;\n\n        // gabc special item groups\n        case \"[\":\n          // read in the whole group and parse it\n          var startIndex = ++i;\n          while (i < data.length && data[i] !== \"]\") i++;\n\n          this.processInstructionForNote(\n            ctxt,\n            note,\n            data.substring(startIndex, i),\n            startIndex\n          );\n          break;\n      }\n    }\n\n    if (\n      this.needToEndBrace &&\n      !note.braceStart &&\n      !note.braceEnd &&\n      !/[xy#]/.test(c)\n    ) {\n      note.braceEnd = new Markings.BracePoint(\n        note,\n        this.needToEndBrace.isAbove,\n        this.needToEndBrace.shape,\n        this.needToEndBrace.attachment === Markings.BraceAttachment.Left\n          ? Markings.BraceAttachment.Right\n          : Markings.BraceAttachment.Left\n      );\n      note.braceEnd.automatic = true;\n      delete this.needToEndBrace;\n    }\n\n    notes.push(note);\n  }\n\n  // an instruction in this context is referring to a special gabc coding found after\n  // notes between ['s and ]'s. choral signs and braces fall into this\n  // category.\n  //\n  // currently only brace instructions are supported here!\n  static processInstructionForNote(ctxt, note, instruction, sourceIndexOffset) {\n    var results = instruction.match(__bracketedCommandRegex);\n    if (results === null) return;\n    var cmd = results[1];\n    var data = results[2];\n    switch (cmd) {\n      case \"cs\":\n        note.choralSign = new ChoralSign(\n          ctxt,\n          data,\n          note,\n          note.sourceIndex + sourceIndexOffset,\n          instruction.length\n        );\n        return;\n      case \"alt\":\n        note.alText = new AboveLinesText(\n          ctxt,\n          data,\n          note,\n          note.sourceIndex + sourceIndexOffset,\n          instruction.length\n        );\n        return;\n    }\n\n    results = instruction.match(__braceSpecRegex);\n\n    if (results === null) return;\n\n    // see the comments at the definition of __braceSpecRegex for the\n    // capturing groups\n    var above = results[1] === \"o\";\n    var shape = Markings.BraceShape.CurlyBrace; // default\n\n    switch (results[2]) {\n      case \"b\":\n        shape = Markings.BraceShape.RoundBrace;\n        break;\n      case \"cb\":\n        shape = Markings.BraceShape.CurlyBrace;\n        break;\n      case \"cba\":\n        shape = Markings.BraceShape.AccentedCurlyBrace;\n        break;\n    }\n\n    var attachmentPoint =\n      results[3] === \"1\"\n        ? Markings.BraceAttachment.Left\n        : Markings.BraceAttachment.Right;\n\n    if (results[4] === \"{\" || results[5])\n      note.braceStart = new Markings.BracePoint(\n        note,\n        above,\n        shape,\n        attachmentPoint\n      );\n    else\n      note.braceEnd = new Markings.BracePoint(\n        note,\n        above,\n        shape,\n        attachmentPoint\n      );\n\n    // just have the next note end a brace that uses length;\n    if (results[5]) {\n      note.braceStart.automatic = true;\n      this.needToEndBrace = note.braceStart;\n    }\n  }\n\n  // takes raw gabc text source and parses it into words. For example, passing\n  // in a string of \"me(f.) (,) ma(fff)num(d!ewf) tu(fgF'E)am,(f.)\" would return\n  // an array of four strings: [\"me(f.)\", \"(,)\", \"ma(fff)num(d!ewf)\", \"tu(fgF'E)am,(f.)\"]\n  static splitWords(gabcNotations) {\n    // split the notations on whitespace boundaries, as long as the space\n    // immediately follows a set of parentheses. Prior to doing that, we replace\n    // all whitespace with spaces, which prevents tabs and newlines from ending\n    // up in the notation data.\n    gabcNotations = gabcNotations\n      // .trim()\n      // .replace(/\\s/g, \" \")\n      .replace(/\\)\\s(?=[^\\)]*(?:\\(|$))/g, \")\\n\");\n    return gabcNotations.split(/\\n/g);\n  }\n\n  static parseSource(gabcSource) {\n    return this.parseWords(this.splitWords(gabcSource));\n  }\n\n  // gabcWords is an array of strings, e.g., the result of splitWords above\n  static parseWords(gabcWords) {\n    var words = [];\n\n    for (var i = 0; i < gabcWords.length; i++)\n      words.push(this.parseWord(gabcWords[i]));\n\n    return words;\n  }\n\n  // returns an array of objects, each of which has the following properties\n  //  - notations (string)\n  //  - lyrics (array of strings)\n  static parseWord(gabcWord) {\n    var syllables = [];\n    var matches = [];\n\n    syllables.wordLength = gabcWord.length;\n\n    while ((match = __syllablesRegex.exec(gabcWord))) matches.push(match);\n\n    for (var j = 0; j < matches.length; j++) {\n      var match = matches[j];\n\n      var lyrics = match[1].trim().split(\"|\");\n      var notations = match[2];\n\n      syllables.push({\n        notations: notations,\n        lyrics: lyrics\n      });\n    }\n\n    return syllables;\n  }\n\n  // returns pitch\n  static gabcHeightToExsurgeHeight(gabcHeight) {\n    return gabcHeight.toLowerCase().charCodeAt(0) - \"a\".charCodeAt(0) - 6;\n  }\n\n  // returns pitch\n  static gabcHeightToExsurgePitch(clef, gabcHeight) {\n    var exsurgeHeight = this.gabcHeightToExsurgeHeight(gabcHeight);\n\n    var pitch = clef.staffPositionToPitch(exsurgeHeight);\n\n    return pitch;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Gabc.js","//\n// Author(s):\n// Benjamin Bloomfield <benjamin@sourceandsummit.com>\n//\n// Copyright (c) 2019\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport * as Exsurge from \"./Exsurge.Core.js\";\nimport { Step, Pitch, Rect, Point, Margins } from \"./Exsurge.Core.js\";\nimport {\n  QuickSvg,\n  ChantLayoutElement,\n  Supertitle,\n  Title,\n  Subtitle,\n  TextLeftRight\n} from \"./Exsurge.Drawing.js\";\n\nexport class Titles extends ChantLayoutElement {\n  constructor(\n    ctxt,\n    score,\n    { supertitle, title, subtitle, textLeft, textRight } = {}\n  ) {\n    super();\n    this.score = score;\n    this.setSupertitle(ctxt, supertitle);\n    this.setTitle(ctxt, title);\n    this.setSubtitle(ctxt, subtitle);\n    this.setTextLeft(ctxt, textLeft);\n    this.setTextRight(ctxt, textRight);\n  }\n\n  setBoundsX(ctxt, elementName, width) {\n    let element = this[elementName];\n    switch (ctxt.textStyles[elementName].alignment) {\n      case \"left\":\n        element.textAnchor = \"start\";\n        element.bounds.x = 0;\n        break;\n      case \"right\":\n        element.textAnchor = \"end\";\n        element.bounds.x = width;\n        break;\n      case \"center\":\n      default:\n        element.textAnchor = \"middle\";\n        element.bounds.x = width / 2;\n    }\n  }\n\n  /**\n   * Lays out the titles, and returns their total height\n   * @param  {ChantContext} ctxt\n   * @return {number}      the tottal height of titles laid out\n   */\n  layoutTitles(ctxt, width) {\n    this.bounds = new Rect(0, 0, 0, 0);\n    let y = 0;\n    if (this.supertitle) {\n      this.supertitle.recalculateMetrics(ctxt);\n      this.supertitle.setMaxWidth(ctxt, width);\n\n      this.setBoundsX(ctxt, \"supertitle\", width);\n      this.supertitle.bounds.y = y;\n      this.bounds.union(this.supertitle.bounds);\n      this.supertitle.bounds.y += this.supertitle.origin.y;\n      y += this.supertitle.bounds.height + this.supertitle.padding(ctxt);\n    }\n    if (this.title) {\n      if (y) y += this.title.padding(ctxt);\n      this.title.recalculateMetrics(ctxt);\n      this.title.setMaxWidth(ctxt, width);\n      this.setBoundsX(ctxt, \"title\", width);\n      this.title.bounds.y = y;\n      this.bounds.union(this.title.bounds);\n      this.title.bounds.y += this.title.origin.y;\n      y += this.title.bounds.height + this.title.padding(ctxt);\n    }\n    if (this.subtitle) {\n      if (y) y += this.subtitle.padding(ctxt);\n      this.subtitle.recalculateMetrics(ctxt);\n      this.subtitle.setMaxWidth(ctxt, width);\n      this.setBoundsX(ctxt, \"subtitle\", width);\n      this.subtitle.bounds.y = y;\n      this.bounds.union(this.subtitle.bounds);\n      this.subtitle.bounds.y += this.subtitle.origin.y;\n      y += this.subtitle.bounds.height + this.subtitle.padding(ctxt);\n    }\n    let finalY = y,\n      textLeft = this.score.overrideTextLeft || this.textLeft;\n    if (textLeft) {\n      textLeft.recalculateMetrics(ctxt);\n      textLeft.bounds.y = y;\n      this.bounds.union(textLeft.bounds);\n      textLeft.bounds.y += textLeft.origin.y;\n      finalY = y + textLeft.bounds.height + textLeft.padding(ctxt);\n    }\n    if (this.textRight) {\n      this.textRight.recalculateMetrics(ctxt);\n      this.textRight.bounds.x = width;\n      this.textRight.bounds.y = y;\n      this.bounds.union(this.textRight.bounds);\n      this.textRight.bounds.y += this.textRight.origin.y;\n      finalY = Math.max(\n        finalY,\n        y + this.textRight.bounds.height + this.textRight.padding(ctxt)\n      );\n    }\n    return finalY;\n  }\n\n  setSupertitle(ctxt, supertitle) {\n    this.supertitle = supertitle ? new Supertitle(ctxt, supertitle) : null;\n  }\n  setTitle(ctxt, title) {\n    this.title = title ? new Title(ctxt, title) : null;\n  }\n  setSubtitle(ctxt, subtitle) {\n    this.subtitle = subtitle ? new Subtitle(ctxt, subtitle) : null;\n  }\n  setTextLeft(ctxt, textLeft) {\n    this.textLeft = textLeft\n      ? new TextLeftRight(ctxt, textLeft, \"textLeft\")\n      : null;\n  }\n  setTextRight(ctxt, textRight) {\n    this.textRight = textRight\n      ? new TextLeftRight(ctxt, textRight, \"textRight\")\n      : null;\n  }\n\n  hasSupertitle(ctxt, supertitle) {\n    return !!this.supertitle;\n  }\n  hasTitle(ctxt, title) {\n    return !!this.title;\n  }\n  hasSubtitle(ctxt, subtitle) {\n    return !!this.subtitle;\n  }\n  hasTextLeft(ctxt, textLeft) {\n    return !!this.textLeft;\n  }\n  hasTextRight(ctxt, textRight) {\n    return !!this.textRight;\n  }\n\n  draw(ctxt, scale = 1) {\n    var canvasCtxt = ctxt.canvasCtxt;\n    canvasCtxt.translate(this.bounds.x, this.bounds.y);\n\n    for (let el of [\n      this.supertitle,\n      this.title,\n      this.subtitle,\n      this.score.overrideTextLeft || this.textLeft,\n      this.textRight\n    ]) {\n      if (el) el.draw(ctxt, scale);\n    }\n\n    canvasCtxt.translate(-this.bounds.x, -this.bounds.y);\n  }\n\n  getInnerNodes(ctxt, functionName = \"createSvgNode\") {\n    var nodes = [];\n\n    for (let el of [\n      this.supertitle,\n      this.title,\n      this.subtitle,\n      this.score.overrideTextLeft || this.textLeft,\n      this.textRight\n    ]) {\n      if (el) nodes.push(el[functionName](ctxt));\n    }\n    return nodes;\n  }\n\n  createSvgNode(ctxt) {\n    var nodes = this.getInnerNodes(ctxt, \"createSvgNode\");\n\n    var node = QuickSvg.createNode(\"g\", { class: \"Titles\" }, nodes);\n\n    node.source = this;\n    this.svg = node;\n\n    return node;\n  }\n\n  createSvgTree(ctxt) {\n    var nodes = this.getInnerNodes(ctxt, \"createSvgTree\");\n\n    return QuickSvg.createSvgTree(\n      \"g\",\n      { class: \"Titles\", source: this },\n      ...nodes\n    );\n  }\n\n  createSvgFragment(ctxt) {\n    var fragment = \"\";\n\n    for (let el of [\n      this.supertitle,\n      this.title,\n      this.subtitle,\n      this.score.overrideTextLeft || this.textLeft,\n      this.textRight\n    ]) {\n      if (el) fragment += el.createSvgFragment(ctxt);\n    }\n\n    fragment = QuickSvg.createFragment(\"g\", { class: \"Titles\" }, fragment);\n    return fragment;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Exsurge.Titles.js"],"sourceRoot":""}